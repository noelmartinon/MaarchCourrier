{"version":3,"sources":["webpack:///src/frontend/app/installer/customization/customization.component.html","webpack:///src/frontend/app/installer/database/database.component.scss","webpack:///src/frontend/app/installer/mailserver/mailserver.component.ts","webpack:///src/frontend/app/installer/welcome/welcome.component.scss","webpack:///src/frontend/app/installer/installer.module.ts","webpack:///src/frontend/app/installer/database/database.component.ts","webpack:///src/frontend/app/installer/docservers/docservers.component.ts","webpack:///src/frontend/app/installer/mailserver/mailserver.component.html","webpack:///src/frontend/app/installer/welcome/welcome.component.ts","webpack:///src/frontend/app/installer/customization/customization.component.ts","webpack:///src/frontend/app/installer/useradmin/useradmin.component.html","webpack:///src/frontend/app/installer/install-action/install-action.component.ts","webpack:///src/frontend/app/installer/installer.component.ts","webpack:///src/frontend/app/installer/customization/customization.component.scss","webpack:///src/frontend/app/installer/useradmin/useradmin.component.ts","webpack:///src/frontend/app/installer/installer-routing.module.ts","webpack:///src/frontend/app/installer/installer.service.ts","webpack:///src/frontend/app/installer/installer.component.scss","webpack:///src/frontend/app/installer/docservers/docservers.component.scss","webpack:///src/frontend/app/installer/prerequisite/prerequisite.component.ts","webpack:///src/frontend/app/installer/install-action/install-action.component.html","webpack:///src/frontend/app/installer/prerequisite/prerequisite.component.scss","webpack:///src/frontend/app/installer/database/database.component.html","webpack:///src/frontend/app/installer/useradmin/useradmin.component.scss","webpack:///src/frontend/app/installer/prerequisite/prerequisite.component.html","webpack:///src/frontend/app/installer/mailserver/mailserver.component.scss","webpack:///src/frontend/app/installer/installer.component.html","webpack:///src/frontend/app/installer/docservers/docservers.component.html","webpack:///src/frontend/app/installer/install-action/install-action.component.scss","webpack:///src/frontend/app/installer/welcome/welcome.component.html"],"names":["MailserverComponent","translate","_formBuilder","notify","http","installerService","hidePassword","recipientTest","emailSendLoading","emailSendResult","msg","debug","smtpTypeList","id","label","instant","smtpSecList","valEmail","pattern","required","stepFormGroup","group","firstCtrl","type","host","auth","user","password","secure","port","charset","from","valueChanges","subscribe","checkMailserverContent","opened","close","icon","controls","pipe","data","indexOf","disable","enable","value","email","get","err","console","log","error","errors","isStepAlreadyLaunched","undefined","valid","selector","template","InstallerModule","setDefaultLang","imports","declarations","entryComponents","providers","DatabaseComponent","functionsService","hide","connectionState","dbExist","dataFiles","nextStep","valDbName","valLoginDb","dbHostCtrl","dbLoginCtrl","dbPortCtrl","dbPasswordCtrl","dbNameCtrl","dbSampleCtrl","stateStep","setValue","getDataFiles","handleSoftErrors","info","server","name","observe","params","status","success","emit","markAllAsTouched","invalid","idStep","body","route","method","url","description","installPriority","DocserversComponent","valPath","docserversPath","path","WelcomeComponent","authService","langs","appVersion","VERSION","split","steps","desc","customs","lang","getLang","noInstall","getCustoms","Object","keys","filter","use","CustomizationComponent","sanitizer","scanPipe","readonlyState","backgroundList","valIdentifier","customId","appName","loginMessage","homeMessage","bodyLoginBackground","uploadedLogo","Array","length","map","_","i","filename","checkCustomExist","appDatabase","getInfoToInstall","tinymce","remove","initMce","response","customExist","regex","regexInvalid","match","setErrors","markAsTouched","invalidCustomName","readonly","init","base_url","height","suffix","language","replace","language_url","menubar","statusbar","plugins","external_plugins","toolbar_sticky","toolbar_drawer","toolbar","appWelcome","applicationName","getContent","logo","fileInput","mode","target","files","res","canUploadFile","reader","FileReader","readAsDataURL","onload","result","img","Image","imgDim","width","value1","push","src","file","allowedExtension","size","join","bypassSecurityTrustUrl","content","disabled","uploadLogo","click","InstallActionComponent","dialogRef","disableAnimation","initSteps","setTimeout","index","state","doStep","forEach","step","msgErr","Promise","resolve","reject","toLowerCase","setStep","request","window","location","href","InstallerComponent","router","headerService","appService","sortPipe","dialog","functionService","privilegeService","loading","hideSideBar","isAuth","navigate","getToken","hasCurrentUserPrivilege","$","insertBefore","css","ev","stepContent","toArray","selectedIndex","initStep","stepper","next","installContent","component","concat","transform","open","panelClass","disableClose","afterClosed","empty","handleErrors","provide","useValue","showError","UseradminComponent","tiggerInstall","valLogin","login","firstname","lastname","passwordConfirm","routes","InstallerRoutingModule","forChild","exports","InstallerService","IdsStep","PrerequisiteComponent","prerequisites","packagesList","general","tools","phpExtensions","phpConfiguration","docMaarchUrl","getStepData","item","key","setTranslation","getDefaultLang","install_phpVersionValid_desc","checkStep","markAsUntouched","packageItem","itemKo","_elementRef","nativeElement","toggle"],"mappings":"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","file":"installer-installer-module-es5.js","sourcesContent":["export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fas fa-tools\\\"></i> {{'lang.customization' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n        {{'lang.stepCustomization_desc' | translate}}\\n    </div>\\n    <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"display: contents;\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>{{'lang.instanceId' | translate}}</mat-label>\\n                <input matInput formControlName=\\\"customId\\\">\\n                <mat-error>\\n                    <ng-container *ngIf=\\\"stepFormGroup.controls['customId'].errors?.customExist\\\">\\n                        {{'lang.customAlreadyExist' | translate}}\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"stepFormGroup.controls['customId'].errors?.invalidCustomName\\\">\\n                        {{'lang.invalidCustomName' | translate}}\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"stepFormGroup.controls['customId'].errors?.pattern\\\">\\n                        {{'lang.onlySpecialCharAllowed' | translate:{value1: '\\\"_\\\", \\\"-\\\"'} }}\\n                    </ng-container>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>{{'lang.applicationName' | translate}}</mat-label>\\n                <input matInput formControlName=\\\"appName\\\">\\n            </mat-form-field>\\n            <div>{{'lang.loginMsg' | translate}} : </div>\\n            <textarea style=\\\"padding-top: 10px;\\\" name=\\\"loginMessage\\\" id=\\\"loginMessage\\\"\\n                formControlName=\\\"loginMessage\\\"></textarea>\\n            <br />\\n            <br />\\n            <div>{{'lang.homeMsg' | translate}} : </div>\\n            <textarea style=\\\"padding-top: 10px;\\\" name=\\\"homeMessage\\\" id=\\\"homeMessage\\\"\\n                formControlName=\\\"homeMessage\\\"></textarea>\\n            <br />\\n            <br />\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div>{{'lang.chooseLogo' | translate}} : </div>\\n            <div>\\n                <mat-card style=\\\"width: 350px;background-size: 100%;cursor: pointer;\\\" matRipple>\\n                    <img [src]=\\\"logoURL()\\\" (click)=\\\"clickLogoButton(uploadLogo)\\\" style=\\\"width: 100%;\\\" />\\n                    <input type=\\\"file\\\" name=\\\"files[]\\\" #uploadLogo (change)=\\\"uploadTrigger($event, 'logo')\\\"\\n                        accept=\\\"image/svg+xml\\\" style=\\\"display: none;\\\">\\n                </mat-card>\\n            </div>\\n            <br />\\n            <div>{{'lang.chooseLoginBg' | translate}} : </div>\\n            <div class=\\\"backgroundList\\\">\\n                <mat-card (click)=\\\"selectBg('assets/bodylogin.jpg')\\\" style=\\\"opacity: 0.3;\\\" class=\\\"backgroundItem\\\"\\n                    [class.disabled]=\\\"stepFormGroup.controls['bodyLoginBackground'].disabled\\\"\\n                    [class.selected]=\\\"stepFormGroup.controls['bodyLoginBackground'].value === 'assets/bodylogin.jpg'\\\"\\n                    style=\\\"background:url(assets/bodylogin.jpg);background-size: cover;\\\">\\n                </mat-card>\\n                <mat-card *ngFor=\\\"let background of backgroundList\\\"\\n                    (click)=\\\"selectBg(background.url)\\\"\\n                    style=\\\"opacity: 0.3;\\\" class=\\\"backgroundItem\\\"\\n                    [class.selected]=\\\"background.url === stepFormGroup.controls['bodyLoginBackground'].value\\\"\\n                    [class.disabled]=\\\"stepFormGroup.controls['bodyLoginBackground'].disabled\\\"\\n                    [style.background]=\\\"'url('+background.url+')'\\\">\\n                </mat-card>\\n                <mat-card *ngIf=\\\"!stepFormGroup.controls['bodyLoginBackground'].disabled\\\"\\n                    style=\\\"opacity: 0.3;display: flex;align-items: center;justify-content: center;\\\"\\n                    class=\\\"backgroundItem\\\" (click)=\\\"uploadFile.click()\\\">\\n                    <input type=\\\"file\\\" name=\\\"files[]\\\" #uploadFile (change)=\\\"uploadTrigger($event, 'bg')\\\"\\n                        accept=\\\"image/jpeg\\\" style=\\\"display: none;\\\">\\n                    <i class=\\\"fa fa-plus\\\" style=\\\"font-size: 30px;color: #666;\\\"></i>\\n                </mat-card>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL2RhdGFiYXNlL2RhdGFiYXNlLmNvbXBvbmVudC5zY3NzIiwic3JjL2Zyb250ZW5kL2Nzcy92YXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFFSSxZQUFZO0FBRmhCOztBQUFBO0VBSVEsY0NMUztFRE1ULG1CQUFtQjtFQUNuQix3QkFBd0I7RUFDeEIsVUFBVTtBQUFsQiIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci9kYXRhYmFzZS9kYXRhYmFzZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uL2Nzcy92YXJzLnNjc3MnO1xuXG4uc3RlcENvbnRlbnQge1xuICAgIC8vIG1heC13aWR0aDogODUwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIC5zdGVwQ29udGVudFRpdGxlIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxufVxuIiwiJGNvbG9yLW1haW46ICM0RjRGNEY7IC8vIGRlZmF1bHQgY29sb3IgaW4gYXBwbGljYXRpb25cbiRwcmltYXJ5OiAjMTM1ZjdmOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kc2Vjb25kYXJ5OiAjRjk5ODMwOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kYWNjZW50OiAjMDA2ODQxOyAvLyBhY2NlbnQgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb24gKGxpa2Ugc3VjY2VzcyBidXR0b25zKVxuJHdhcm46ICM4ZTNlNTI7IC8vIHdhcm5pbmcgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb25cblxuLy8gV0FSTklORyAhIFlPVSBNVVNUIFJFQ09NUElMQVRFIG1hYXJjaC1tYXRlcmlhbC5zY3NzIElGIFZBTFVFUyBDSEFOR0VTIl19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StepAction } from '../types';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { tap, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { InstallerService } from '../installer.service';\n\ndeclare var tinymce: any;\n\n@Component({\n    selector: 'app-mailserver',\n    templateUrl: './mailserver.component.html',\n    styleUrls: ['./mailserver.component.scss'],\n})\nexport class MailserverComponent implements OnInit {\n    \n\n    hidePassword: boolean = true;\n    stepFormGroup: FormGroup;\n\n    recipientTest: string = '';\n    emailSendLoading: boolean = false;\n    emailSendResult: any = {\n        msg: '',\n        debug: ''\n    };\n\n    smtpTypeList = [\n        {\n            id: 'smtp',\n            label: this.translate.instant('lang.smtpclient')\n        },\n        {\n            id: 'sendmail',\n            label: this.translate.instant('lang.smtprelay')\n        },\n        {\n            id: 'qmail',\n            label: this.translate.instant('lang.qmail')\n        },\n        {\n            id: 'mail',\n            label: this.translate.instant('lang.phpmail')\n        }\n    ];\n    smtpSecList = [\n        {\n            id: '',\n            label: this.translate.instant('lang.none')\n        },\n        {\n            id: 'ssl',\n            label: 'ssl'\n        },\n        {\n            id: 'tls',\n            label: 'tls'\n        }\n    ];\n\n    @ViewChild('checkMailserverContent', { static: true }) checkMailserverContent: MatDrawer;\n\n    constructor(\n        public translate: TranslateService,\n        private _formBuilder: FormBuilder,\n        private notify: NotificationService,\n        public http: HttpClient,\n        private installerService: InstallerService\n    ) {\n        const valEmail: ValidatorFn[] = [Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/), Validators.required];\n\n        this.stepFormGroup = this._formBuilder.group({\n            firstCtrl: ['success', Validators.required],\n            type: ['smtp', Validators.required],\n            host: ['', Validators.required],\n            auth: [true],\n            user: ['', Validators.required],\n            password: ['', Validators.required],\n            secure: ['ssl', Validators.required],\n            port: ['465', Validators.required],\n            charset: ['utf-8', Validators.required],\n            from: ['', valEmail],\n        });\n    }\n\n    ngOnInit(): void {\n        this.stepFormGroup.valueChanges.subscribe(() => {\n            if (this.checkMailserverContent.opened) {\n                this.checkMailserverContent.close();\n                this.emailSendLoading = false;\n                this.emailSendResult = {\n                    icon: 'fa-paper-plane primary',\n                    msg: this.translate.instant('lang.emailSendInProgress'),\n                    debug: ''\n                };\n            }\n        });\n        this.stepFormGroup.controls['type'].valueChanges.pipe(\n            tap((data: any) => {\n                if (['smtp', 'mail'].indexOf(data) === -1) {\n                    this.stepFormGroup.controls['secure'].disable();\n                    this.stepFormGroup.controls['host'].disable();\n                    this.stepFormGroup.controls['port'].disable();\n                    this.stepFormGroup.controls['auth'].disable();\n                    this.stepFormGroup.controls['user'].disable();\n                    this.stepFormGroup.controls['password'].disable();\n                } else {\n                    this.stepFormGroup.controls['secure'].enable();\n                    this.stepFormGroup.controls['host'].enable();\n                    this.stepFormGroup.controls['port'].enable();\n                    this.stepFormGroup.controls['auth'].enable();\n                    if (this.stepFormGroup.controls['auth'].value) {\n                        this.stepFormGroup.controls['user'].enable();\n                        this.stepFormGroup.controls['password'].enable();\n                    }\n                }\n            })\n        ).subscribe();\n        this.stepFormGroup.controls['auth'].valueChanges.pipe(\n            tap((data: any) => {\n                if (!data) {\n                    this.stepFormGroup.controls['user'].disable();\n                    this.stepFormGroup.controls['password'].disable();\n                } else {\n                    this.stepFormGroup.controls['user'].enable();\n                    this.stepFormGroup.controls['password'].enable();\n                }\n            })\n        ).subscribe();\n    }\n\n    testEmailSend() {\n        this.emailSendResult = {\n            icon: 'fa-paper-plane primary',\n            msg: this.translate.instant('lang.emailSendInProgress'),\n            debug: ''\n        };\n        const email = {\n            'sender': { 'email': this.stepFormGroup.controls['from'] },\n            'recipients': [this.recipientTest],\n            'object': '[' + this.translate.instant('lang.doNotReply') + '] ' + this.translate.instant('lang.emailSendTest'),\n            'status': 'EXPRESS',\n            'body': this.translate.instant('lang.emailSendTest'),\n            'isHtml': false\n        };\n        this.emailSendLoading = true;\n\n        this.http.get(`../rest/emails`).pipe(\n            tap((data: any) => {\n                this.emailSendLoading = false;\n                this.emailSendResult = {\n                    icon: 'fa-check green',\n                    msg: this.translate.instant('lang.emailSendSuccess'),\n                    debug: ''\n                };\n            }),\n            catchError((err: any) => {\n                console.log(err);\n\n                this.emailSendLoading = false;\n                this.emailSendResult = {\n                    icon: 'fa-times red',\n                    msg: this.translate.instant('lang.emailSendFailed'),\n                    debug: err.error.errors\n                };\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initStep() {\n        if (this.installerService.isStepAlreadyLaunched('mailserver')) {\n            this.stepFormGroup.disable();\n        }\n    }\n\n    isValidStep() {\n        return this.stepFormGroup === undefined ? false : this.stepFormGroup.controls['firstCtrl'].valid;\n    }\n\n    getFormGroup() {\n        return this.stepFormGroup;\n    }\n\n    checkStep() {\n        return this.stepFormGroup.valid;\n    }\n\n    getInfoToInstall(): StepAction[] {\n        return [];\n        /* return [{\n            idStep : 'mailserver',\n            body: {\n                smtp: this.stepFormGroup.controls['smtp'].value,\n                auth: this.stepFormGroup.controls['auth'].value,\n                user: this.stepFormGroup.controls['user'].value,\n                password: this.stepFormGroup.controls['password'].value,\n                secure: this.stepFormGroup.controls['secure'].value,\n                port: this.stepFormGroup.controls['port'].value,\n                charset: this.stepFormGroup.controls['charset'].value,\n                from: this.stepFormGroup.controls['from'].value\n            },\n            route: '../rest/installer/mailserver',\n            description: this.translate.instant('lang.stepMailServerActionDesc'),\n            installPriority: 3\n        }];*/\n    }\n}\n","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n.stepContent .maarchLogoFull {\\n  width: 300px;\\n  height: 100px;\\n}\\n\\n.stepContent .mat-divider {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.link {\\n  text-decoration: underline;\\n  color: #135f7f !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuc2NzcyIsInNyYy9mcm9udGVuZC9jc3MvdmFycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksWUFBWTtBQUZoQjs7QUFBQTtFQUtRLGNDTlM7RURPVCxtQkFBbUI7RUFDbkIsd0JBQXdCO0VBQ3hCLFVBQVU7QUFEbEI7O0FBUEE7RUFZUSxZQUFZO0VBQ1osYUFBYTtBQURyQjs7QUFaQTtFQWlCUSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0FBRDNCOztBQUtBO0VBQ0ksMEJBQTBCO0VBQzFCLHlCQUEwQjtBQUY5QiIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci93ZWxjb21lL3dlbGNvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi9jc3MvdmFycy5zY3NzJztcblxuLnN0ZXBDb250ZW50IHtcbiAgICAvL21heC13aWR0aDogODUwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgLnN0ZXBDb250ZW50VGl0bGUge1xuICAgICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gICAgXG4gICAgLm1hYXJjaExvZ29GdWxse1xuICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgfVxuICAgIFxuICAgIC5tYXQtZGl2aWRlciB7XG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgfVxufVxuXG4ubGluayB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY29sb3I6ICRwcmltYXJ5ICFpbXBvcnRhbnQ7XG59IiwiJGNvbG9yLW1haW46ICM0RjRGNEY7IC8vIGRlZmF1bHQgY29sb3IgaW4gYXBwbGljYXRpb25cbiRwcmltYXJ5OiAjMTM1ZjdmOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kc2Vjb25kYXJ5OiAjRjk5ODMwOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kYWNjZW50OiAjMDA2ODQxOyAvLyBhY2NlbnQgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb24gKGxpa2Ugc3VjY2VzcyBidXR0b25zKVxuJHdhcm46ICM4ZTNlNTI7IC8vIHdhcm5pbmcgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb25cblxuLy8gV0FSTklORyAhIFlPVSBNVVNUIFJFQ09NUElMQVRFIG1hYXJjaC1tYXRlcmlhbC5zY3NzIElGIFZBTFVFUyBDSEFOR0VTIl19 */\";","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../app-common.module';\nimport { InternationalizationModule } from '@service/translate/internationalization.module';\nimport { InstallerComponent } from './installer.component';\nimport { InstallActionComponent } from './install-action/install-action.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { PrerequisiteComponent } from './prerequisite/prerequisite.component';\nimport { DatabaseComponent } from './database/database.component';\nimport { DocserversComponent } from './docservers/docservers.component';\nimport { CustomizationComponent } from './customization/customization.component';\nimport { UseradminComponent } from './useradmin/useradmin.component';\nimport { MailserverComponent } from './mailserver/mailserver.component';\nimport { InstallerRoutingModule } from './installer-routing.module';\nimport { InstallerService } from './installer.service';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        InternationalizationModule,\n        InstallerRoutingModule\n    ],\n    declarations: [\n        InstallActionComponent,\n        InstallerComponent,\n        WelcomeComponent,\n        PrerequisiteComponent,\n        DatabaseComponent,\n        DocserversComponent,\n        CustomizationComponent,\n        UseradminComponent,\n        MailserverComponent\n    ],\n    entryComponents: [InstallActionComponent],\n    providers: [InstallerService]\n})\nexport class InstallerModule {\n    constructor(translate: TranslateService) {\n        translate.setDefaultLang('fr');\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StepAction } from '../types';\nimport { FunctionsService } from '@service/functions.service';\nimport { InstallerService } from '../installer.service';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-database',\n    templateUrl: './database.component.html',\n    styleUrls: ['./database.component.scss']\n})\nexport class DatabaseComponent implements OnInit {\n\n    stepFormGroup: FormGroup;\n    hide: boolean = true;\n\n    connectionState: boolean = false;\n    dbExist: boolean = false;\n\n    dataFiles: string[] = [];\n\n    @Output() nextStep = new EventEmitter<string>();\n\n    constructor(\n        public translate: TranslateService,\n        public http: HttpClient,\n        private _formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private functionsService: FunctionsService,\n        private installerService: InstallerService\n    ) {\n        const valDbName: ValidatorFn[] = [Validators.pattern(/^[^\\;\\\" \\\\]+$/), Validators.required];\n        const valLoginDb: ValidatorFn[] = [Validators.pattern(/^[^ ]+$/), Validators.required];\n\n        this.stepFormGroup = this._formBuilder.group({\n            dbHostCtrl: ['localhost', Validators.required],\n            dbLoginCtrl: ['', valLoginDb],\n            dbPortCtrl: ['5432', Validators.required],\n            dbPasswordCtrl: ['', valLoginDb],\n            dbNameCtrl: ['', valDbName],\n            dbSampleCtrl: ['data_fr', Validators.required],\n            stateStep: ['', Validators.required]\n        });\n    }\n\n    ngOnInit(): void {\n        this.stepFormGroup.controls['dbHostCtrl'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n        this.stepFormGroup.controls['dbLoginCtrl'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n        this.stepFormGroup.controls['dbPortCtrl'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n        this.stepFormGroup.controls['dbPasswordCtrl'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n        this.stepFormGroup.controls['dbNameCtrl'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n\n        this.getDataFiles();\n    }\n\n    getDataFiles() {\n        this.http.get(`../rest/installer/sqlDataFiles`).pipe(\n            tap((data: any) => {\n                this.dataFiles = data.dataFiles;\n            }),\n            catchError((err: any) => {\n                this.notify.handleSoftErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidConnection() {\n        return false;\n    }\n\n    initStep() {\n        if (this.installerService.isStepAlreadyLaunched('database')) {\n            this.stepFormGroup.disable();\n        }\n    }\n\n    checkConnection() {\n\n        const info = {\n            server: this.stepFormGroup.controls['dbHostCtrl'].value,\n            port: this.stepFormGroup.controls['dbPortCtrl'].value,\n            user: this.stepFormGroup.controls['dbLoginCtrl'].value,\n            password: this.stepFormGroup.controls['dbPasswordCtrl'].value,\n            name: this.stepFormGroup.controls['dbNameCtrl'].value\n        };\n\n        this.http.get(`../rest/installer/databaseConnection`, { observe: 'response', params: info }).pipe(\n            tap((data: any) => {\n                this.dbExist = data.status === 200;\n                this.notify.success(this.translate.instant('lang.rightInformations'));\n                this.stepFormGroup.controls['stateStep'].setValue('success');\n                this.nextStep.emit();\n            }),\n            catchError((err: any) => {\n                this.dbExist = false;\n                if (err.error.errors === 'Given database has tables') {\n                    this.notify.error(this.translate.instant('lang.dbNotEmpty'));\n                } else {\n                    this.notify.error(this.translate.instant('lang.badInformations'));\n                }\n                this.stepFormGroup.markAllAsTouched();\n                this.stepFormGroup.controls['stateStep'].setValue('');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkStep() {\n        return this.stepFormGroup.valid;\n    }\n\n    isValidStep() {\n        if (this.installerService.isStepAlreadyLaunched('database')) {\n            return true;\n        } else {\n            return this.stepFormGroup === undefined ? false : this.stepFormGroup.valid;\n        }\n    }\n\n    isEmptyConnInfo() {\n        return this.stepFormGroup.controls['dbHostCtrl'].invalid ||\n            this.stepFormGroup.controls['dbPortCtrl'].invalid ||\n            this.stepFormGroup.controls['dbLoginCtrl'].invalid ||\n            this.stepFormGroup.controls['dbPasswordCtrl'].invalid ||\n            this.stepFormGroup.controls['dbNameCtrl'].invalid;\n    }\n\n    getFormGroup() {\n        return this.installerService.isStepAlreadyLaunched('database') ? true : this.stepFormGroup;\n    }\n\n    getInfoToInstall(): StepAction[] {\n        return [{\n            idStep : 'database',\n            body: {\n                server: this.stepFormGroup.controls['dbHostCtrl'].value,\n                port: this.stepFormGroup.controls['dbPortCtrl'].value,\n                user: this.stepFormGroup.controls['dbLoginCtrl'].value,\n                password: this.stepFormGroup.controls['dbPasswordCtrl'].value,\n                name: this.stepFormGroup.controls['dbNameCtrl'].value,\n                data: this.stepFormGroup.controls['dbSampleCtrl'].value\n            },\n            route : {\n                method : 'POST',\n                url : '../rest/installer/database'\n            },\n            description: this.translate.instant('lang.stepDatabaseActionDesc'),\n            installPriority: 2\n        }];\n    }\n\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { InstallerService } from '../installer.service';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-docservers',\n    templateUrl: './docservers.component.html',\n    styleUrls: ['./docservers.component.scss']\n})\nexport class DocserversComponent implements OnInit {\n\n    stepFormGroup: FormGroup;\n\n    @Output() nextStep = new EventEmitter<string>();\n\n    constructor(\n        public translate: TranslateService,\n        private _formBuilder: FormBuilder,\n        private notify: NotificationService,\n        public http: HttpClient,\n        private installerService: InstallerService\n    ) {\n        const valPath: ValidatorFn[] = [Validators.pattern(/^[^\\'\\<\\>\\|\\*\\:\\?]+$/), Validators.required];\n\n        this.stepFormGroup = this._formBuilder.group({\n            docserversPath: ['/opt/maarch/docservers/', valPath],\n            stateStep: ['', Validators.required],\n        });\n\n        this.stepFormGroup.controls['docserversPath'].valueChanges.pipe(\n            tap(() => this.stepFormGroup.controls['stateStep'].setValue(''))\n        ).subscribe();\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    isValidStep() {\n        if (this.installerService.isStepAlreadyLaunched('docserver')) {\n            return true;\n        } else {\n            return this.stepFormGroup === undefined ? false : this.stepFormGroup.valid;\n        }\n    }\n\n    initStep() {\n        if (this.installerService.isStepAlreadyLaunched('docserver')) {\n            this.stepFormGroup.disable();\n        }\n    }\n\n    getFormGroup() {\n        return this.installerService.isStepAlreadyLaunched('docserver') ? true : this.stepFormGroup;\n    }\n\n    checkAvailability() {\n        const info = {\n            path: this.stepFormGroup.controls['docserversPath'].value,\n        };\n\n        this.http.get(`../rest/installer/docservers`, { params: info }).pipe(\n            tap((data: any) => {\n                this.notify.success(this.translate.instant('lang.rightInformations'));\n                this.stepFormGroup.controls['stateStep'].setValue('success');\n                this.nextStep.emit();\n            }),\n            catchError((err: any) => {\n                this.notify.error(this.translate.instant('lang.pathUnreacheable'));\n                this.stepFormGroup.controls['stateStep'].setValue('');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getInfoToInstall(): any[] {\n        return [{\n            idStep: 'docserver',\n            body: {\n                path: this.stepFormGroup.controls['docserversPath'].value,\n            },\n            route: {\n                method: 'POST',\n                url: '../rest/installer/docservers'\n            },\n            description: this.translate.instant('lang.stepDocserversActionDesc'),\n            installPriority: 3\n        }];\n    }\n\n}\n","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fa fa-mail-bulk\\\"></i> {{'lang.stepMailServer' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\"\\n        [innerHTML]=\\\"'lang.stepMailServer_desc' | translate\\\">\\n    </div>\\n    <div class=\\\"alert-message alert-message-danger\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\"\\n    [innerHTML]=\\\"'lang.stepMailServer_warning' | translate\\\">\\n</div>\\n    <mat-drawer-container autosize>\\n        <mat-drawer-content>\\n            <div style=\\\"width: 99%;\\\">\\n                <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"display: contents;\\\">\\n                    <mat-form-field>\\n                        <mat-select #smtpType name=\\\"smtpType\\\" [placeholder]=\\\"'lang.configurationType' | translate\\\"\\n                            formControlName=\\\"type\\\" required>\\n                            <mat-option *ngFor=\\\"let type of smtpTypeList\\\" [value]=\\\"type.id\\\">\\n                                {{type.label}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                    <div class=\\\"row\\\" style=\\\"margin:0px;\\\">\\n                        <div class=\\\"col-md-2\\\">\\n                            <mat-form-field>\\n                                <mat-select name=\\\"SMTPSecure\\\" [placeholder]=\\\"'lang.smtpAuth' | translate\\\" formControlName=\\\"secure\\\">\\n                                    <mat-option *ngFor=\\\"let security of smtpSecList\\\" [value]=\\\"security.id\\\">\\n                                        {{security.label}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-md-9\\\">\\n                            <mat-form-field>\\n                                <input matInput name=\\\"host\\\" formControlName=\\\"host\\\" [placeholder]=\\\"'lang.host' | translate\\\" required>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\">\\n                            <mat-form-field>\\n                                <input name=\\\"port\\\" type=\\\"number\\\" matInput formControlName=\\\"port\\\"\\n                                    [placeholder]=\\\"'lang.port' | translate\\\" required>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                    <mat-slide-toggle color=\\\"primary\\\" name=\\\"SMTPAuth\\\" formControlName=\\\"auth\\\">\\n                        {{'lang.enableAuth' | translate}}\\n                    </mat-slide-toggle>\\n                    <mat-form-field>\\n                        <input name=\\\"user\\\" formControlName=\\\"user\\\" matInput placeholder=\\\"{{'lang.id' | translate}}\\\" required>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input name=\\\"password\\\" [type]=\\\"hidePassword ? 'password' : 'text'\\\" formControlName=\\\"password\\\"\\n                            matInput [placeholder]=\\\"'lang.password' | translate\\\" required>\\n                        <mat-icon color=\\\"primary\\\" style=\\\"cursor: pointer;\\\" matSuffix\\n                            (click)=\\\"hidePassword = !hidePassword\\\" class=\\\"fa fa-2x\\\"\\n                            [ngClass]=\\\"[hidePassword ? 'fa-eye-slash' : 'fa-eye']\\\"></mat-icon>\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input name=\\\"mailFrom\\\" formControlName=\\\"from\\\" required matInput [placeholder]=\\\"'lang.mailFrom' | translate\\\">\\n                    </mat-form-field>\\n                </form>\\n            </div>\\n        </mat-drawer-content>\\n        <mat-drawer #checkMailserverContent mode=\\\"side\\\" position=\\\"end\\\" style=\\\"padding:10px;width: 350px;\\\">\\n            <mat-nav-list disableRipple=\\\"true\\\" style=\\\"display: flex;flex-direction: column;\\\">\\n                <h3 mat-subheader>{{'lang.emailSendTest' | translate}}</h3>\\n                <mat-form-field>\\n                    <input name=\\\"recipientTest\\\" matInput placeholder=\\\"{{'lang.mailTo' | translate}}\\\" [(ngModel)]=\\\"recipientTest\\\"\\n                        [disabled]=\\\"emailSendLoading\\\">\\n                    <mat-icon *ngIf=\\\"!emailSendLoading\\\" title=\\\"{{'lang.beginSendTest' | translate}}\\\" (click)=\\\"testEmailSend()\\\"\\n                        color=\\\"primary\\\" style=\\\"cursor: pointer;\\\" matSuffix class=\\\"fa fa-paper-plane fa-2x\\\"></mat-icon>\\n                </mat-form-field>\\n                <mat-list-item *ngIf=\\\"emailSendResult.msg != ''\\\">\\n                    <mat-icon mat-list-icon class=\\\"fas {{emailSendResult.icon}} fa-2x\\\"></mat-icon>\\n                    <p mat-line> {{emailSendResult.msg}} </p>\\n                </mat-list-item>\\n            </mat-nav-list>\\n            <div class=\\\"bash\\\" *ngIf=\\\"this.emailSendResult.msg === ('lang.emailSendFailed' | translate)\\\">\\n                {{this.emailSendResult.debug}}\\n            </div>\\n        </mat-drawer>\\n    </mat-drawer-container>\\n    <div class=\\\"text-center\\\">\\n        <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"checkMailserverContent.open()\\\"\\n            [disabled]=\\\"!stepFormGroup.valid\\\">{{'lang.checkSendmail' | translate}}</button>\\n    </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from '../../../environments/environment';\nimport { catchError, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { AuthService } from '@service/auth.service';\n\n\n@Component({\n    selector: 'app-welcome',\n    templateUrl: './welcome.component.html',\n    styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n    stepFormGroup: FormGroup;\n\n    langs: string[] = [];\n\n    appVersion: string = environment.VERSION.split('.')[0] + '.' + environment.VERSION.split('.')[1];\n\n    steps: any[] = [\n        {\n            icon: 'fas fa-check-square',\n            desc: 'lang.prerequisiteCheck'\n        },\n        {\n            icon: 'fa fa-database',\n            desc: 'lang.databaseCreation'\n        },\n        {\n            icon: 'fa fa-database',\n            desc: 'lang.dataSampleCreation'\n        },\n        {\n            icon: 'fa fa-hdd',\n            desc: 'lang.docserverCreation'\n        },\n        {\n            icon: 'fas fa-tools',\n            desc: 'lang.stepCustomizationActionDesc'\n        },\n        {\n            icon: 'fa fa-user',\n            desc: 'lang.adminUserCreation'\n        },\n    ];\n\n    customs: any = [];\n\n    constructor(\n        public translate: TranslateService,\n        public http: HttpClient,\n        private notify: NotificationService,\n        private _formBuilder: FormBuilder,\n        private authService: AuthService\n    ) { }\n\n    ngOnInit(): void {\n        this.stepFormGroup = this._formBuilder.group({\n            lang: ['fr', Validators.required]\n        });\n\n        this.getLang();\n        if (!this.authService.noInstall) {\n            this.getCustoms();\n        }\n    }\n\n    getLang() {\n        this.http.get('../rest/dev/lang').pipe(\n            tap((data: any) => {\n                this.langs = Object.keys(data.langs).filter(lang => lang !== 'nl');\n            }),\n            catchError((err: any) => {\n                this.notify.handleSoftErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    changeLang(id: string) {\n        this.translate.use(id);\n    }\n\n    getCustoms() {\n        this.http.get('../rest/installer/customs').pipe(\n            tap((data: any) => {\n                this.customs = data.customs;\n            }),\n            catchError((err: any) => {\n                this.notify.handleSoftErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initStep() {\n        return false;\n    }\n\n    getInfoToInstall(): any[] {\n        return [];\n    }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StepAction } from '../types';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { environment } from '../../../environments/environment';\nimport { ScanPipe } from 'ngx-pipes';\nimport { debounceTime, filter, tap, catchError, startWith } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { InstallerService } from '../installer.service';\nimport { of } from 'rxjs';\nimport { DatabaseComponent } from '../database/database.component';\nimport { WelcomeComponent } from '../welcome/welcome.component';\n\ndeclare var tinymce: any;\n\n@Component({\n    selector: 'app-customization',\n    templateUrl: './customization.component.html',\n    styleUrls: ['./customization.component.scss'],\n    providers: [ScanPipe]\n})\nexport class CustomizationComponent implements OnInit {\n\n    @Input() appDatabase: DatabaseComponent;\n    @Input() appWelcome: WelcomeComponent;\n\n    stepFormGroup: FormGroup;\n    readonlyState: boolean = false;\n\n    backgroundList: any[] = [];\n\n    constructor(\n        public translate: TranslateService,\n        private _formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private sanitizer: DomSanitizer,\n        private scanPipe: ScanPipe,\n        public http: HttpClient,\n        private installerService: InstallerService\n    ) {\n        const valIdentifier: ValidatorFn[] = [Validators.pattern(/^[a-zA-Z0-9_\\-]*$/), Validators.required];\n\n        this.stepFormGroup = this._formBuilder.group({\n            firstCtrl: ['success', Validators.required],\n            customId: [null, valIdentifier],\n            appName: [`Maarch Courrier ${environment.VERSION.split('.')[0] + '.' + environment.VERSION.split('.')[1]}`, Validators.required],\n            loginMessage: [`<span style=\"color:#24b0ed\"><strong>Découvrez votre application via</strong></span>&nbsp;<a title=\"le guide de visite\" href=\"https://docs.maarch.org/gitbook/html/MaarchCourrier/${environment.VERSION.split('.')[0] + '.' + environment.VERSION.split('.')[1]}/guu/home.html\" target=\"_blank\"><span style=\"color:#f99830;\"><strong>le guide de visite en ligne</strong></span></a>`],\n            homeMessage: ['<p>D&eacute;couvrez <strong>Maarch Courrier 20.10</strong> avec <a title=\"notre guide de visite\" href=\"https://docs.maarch.org/\" target=\"_blank\"><span style=\"color:#f99830;\"><strong>notre guide de visite en ligne</strong></span></a>.</p>'],\n            bodyLoginBackground: ['assets/bodylogin.jpg'],\n            uploadedLogo: ['../rest/images?image=logo'],\n        });\n        this.backgroundList = Array.from({ length: 16 }).map((_, i) => {\n            return {\n                filename: `${i + 1}.jpg`,\n                url: `assets/${i + 1}.jpg`,\n            };\n        });\n    }\n\n    ngOnInit(): void {\n        this.checkCustomExist();\n        this.stepFormGroup.controls['customId'].valueChanges.pipe(\n            startWith(''),\n            tap(() => {\n                this.stepFormGroup.controls['firstCtrl'].setValue('');\n            }),\n            debounceTime(500),\n            filter((value: any) => value.length > 2),\n            filter(() => this.stepFormGroup.controls['customId'].errors === null || this.stepFormGroup.controls['customId'].errors.pattern === undefined),\n            tap(() => {\n                this.checkCustomExist();\n            }),\n        ).subscribe();\n    }\n\n    initStep() {\n        if (this.stepFormGroup.controls['customId'].value === null) {\n            this.stepFormGroup.controls['customId'].setValue(this.appDatabase.getInfoToInstall()[0].body.name);\n        }\n        if (this.installerService.isStepAlreadyLaunched('createCustom') && this.installerService.isStepAlreadyLaunched('customization')) {\n            this.stepFormGroup.disable();\n            this.readonlyState = true;\n            tinymce.remove();\n            this.initMce(true);\n        } else if (this.installerService.isStepAlreadyLaunched('createCustom')) {\n            this.stepFormGroup.controls['customId'].disable();\n            this.stepFormGroup.controls['appName'].disable();\n            this.stepFormGroup.controls['firstCtrl'].disable();\n        } else if (this.installerService.isStepAlreadyLaunched('customization')) {\n            this.stepFormGroup.controls['loginMessage'].disable();\n            this.stepFormGroup.controls['homeMessage'].disable();\n            this.stepFormGroup.controls['bodyLoginBackground'].disable();\n            this.stepFormGroup.controls['uploadedLogo'].disable();\n            this.readonlyState = true;\n            tinymce.remove();\n            this.initMce(true);\n        } else {\n            this.readonlyState = false;\n            this.initMce();\n        }\n    }\n\n    checkCustomExist() {\n        this.http.get('../rest/installer/custom', { observe: 'response', params: { 'customId': this.stepFormGroup.controls['customId'].value } }).pipe(\n            tap((response: any) => {\n                if (this.stepFormGroup.controls['customId'].errors !== null) {\n                    const error = this.stepFormGroup.controls['customId'].errors;\n                    delete error.customExist;\n                } else {\n                    this.stepFormGroup.controls['firstCtrl'].setValue('success');\n                }\n            }),\n            catchError((err: any) => {\n                const regex = /^Custom already exists/g;\n                const regexInvalid = /^Unauthorized custom name/g;\n                if (err.error.errors.match(regex) !== null) {\n                    this.stepFormGroup.controls['customId'].setErrors({ ...this.stepFormGroup.controls['customId'].errors, customExist: true });\n                    this.stepFormGroup.controls['customId'].markAsTouched();\n                }else if (err.error.errors.match(regexInvalid) !== null) {\n                    this.stepFormGroup.controls['customId'].setErrors({ ...this.stepFormGroup.controls['customId'].errors, invalidCustomName: true });\n                    this.stepFormGroup.controls['customId'].markAsTouched();\n                } else {\n                    this.notify.handleSoftErrors(err);\n                }\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidStep() {\n        if (this.installerService.isStepAlreadyLaunched('createCustom') && this.installerService.isStepAlreadyLaunched('customization')) {\n            return true;\n        } else {\n            return this.stepFormGroup === undefined ? false : this.stepFormGroup.valid;\n        }\n    }\n\n    getFormGroup() {\n        return this.installerService.isStepAlreadyLaunched('createCustom') && this.installerService.isStepAlreadyLaunched('customization') ? true : this.stepFormGroup;\n    }\n\n    initMce(readonly = false) {\n        tinymce.init({\n            selector: 'textarea',\n            base_url: '../node_modules/tinymce/',\n            height: '150',\n            suffix: '.min',\n            language: this.translate.instant('lang.langISO').replace('-', '_'),\n            language_url: `../node_modules/tinymce-i18n/langs/${this.translate.instant('lang.langISO').replace('-', '_')}.js`,\n            menubar: false,\n            statusbar: false,\n            readonly: readonly,\n            plugins: [\n                'autolink'\n            ],\n            external_plugins: {\n                'maarch_b64image': '../../src/frontend/plugins/tinymce/maarch_b64image/plugin.min.js'\n            },\n            toolbar_sticky: true,\n            toolbar_drawer: 'floating',\n            toolbar: !readonly ? 'undo redo | fontselect fontsizeselect | bold italic underline strikethrough forecolor | maarch_b64image | \\\n        alignleft aligncenter alignright alignjustify \\\n        bullist numlist outdent indent | removeformat' : ''\n        });\n    }\n\n    getInfoToInstall(): StepAction[] {\n        return [\n            {\n                idStep: 'createCustom',\n                body: {\n                    lang: this.appWelcome.stepFormGroup.controls['lang'].value,\n                    customId: this.stepFormGroup.controls['customId'].value,\n                    applicationName: this.stepFormGroup.controls['appName'].value,\n                },\n                description: this.translate.instant('lang.stepInstanceActionDesc'),\n                route: {\n                    method: 'POST',\n                    url: '../rest/installer/custom'\n                },\n                installPriority: 1\n            },\n            {\n                idStep: 'customization',\n                body: {\n                    loginMessage: tinymce.get('loginMessage').getContent(),\n                    homeMessage: tinymce.get('homeMessage').getContent(),\n                    bodyLoginBackground: this.stepFormGroup.controls['bodyLoginBackground'].value,\n                    logo: this.stepFormGroup.controls['uploadedLogo'].value,\n                },\n                description: this.translate.instant('lang.stepCustomizationActionDesc'),\n                route: {\n                    method: 'POST',\n                    url: '../rest/installer/customization'\n                },\n                installPriority: 3\n            }\n        ];\n    }\n\n    uploadTrigger(fileInput: any, mode: string) {\n        if (fileInput.target.files && fileInput.target.files[0]) {\n            const res = this.canUploadFile(fileInput.target.files[0], mode);\n            if (res === true) {\n                const reader = new FileReader();\n\n                reader.readAsDataURL(fileInput.target.files[0]);\n                reader.onload = (value: any) => {\n                    if (mode === 'logo') {\n                        this.stepFormGroup.controls['uploadedLogo'].setValue(value.target.result);\n                    } else {\n                        const img = new Image();\n                        img.onload = (imgDim: any) => {\n                            if (imgDim.target.width < 1920 || imgDim.target.height < 1080) {\n                                this.notify.error(this.translate.instant('lang.badImageResolution', {value1: '1920x1080'}));\n                            } else {\n                                this.backgroundList.push({\n                                    filename: value.target.result,\n                                    url: value.target.result,\n                                });\n                                this.stepFormGroup.controls['bodyLoginBackground'].setValue(value.target.result);\n                            }\n                        };\n                        img.src = value.target.result;\n                    }\n                };\n            } else {\n                this.notify.error(res);\n            }\n        }\n    }\n\n    canUploadFile(file: any, mode: string) {\n        const allowedExtension = mode !== 'logo' ? ['image/jpg', 'image/jpeg'] : ['image/svg+xml'];\n\n        if (mode === 'logo') {\n            if (file.size > 5000000) {\n                return this.translate.instant('lang.maxFileSizeExceeded', {value1: '5mo'});\n            } else if (allowedExtension.indexOf(file.type) === -1) {\n                return this.translate.instant('lang.onlyExtensionsAllowed', {value1: allowedExtension.join(', ')});\n            }\n        } else {\n            if (file.size > 10000000) {\n                return this.translate.instant('lang.maxFileSizeExceeded', {value1: '10mo'});\n            } else if (allowedExtension.indexOf(file.type) === -1) {\n                return this.translate.instant('lang.onlyExtensionsAllowed', {value1: allowedExtension.join(', ')});\n            }\n        }\n        return true;\n    }\n\n    logoURL() {\n        return this.sanitizer.bypassSecurityTrustUrl(this.stepFormGroup.controls['uploadedLogo'].value);\n    }\n\n    selectBg(content: string) {\n        if (!this.stepFormGroup.controls['bodyLoginBackground'].disabled) {\n            this.stepFormGroup.controls['bodyLoginBackground'].setValue(content);\n        }\n    }\n\n    clickLogoButton(uploadLogo: any) {\n        if (!this.stepFormGroup.controls['uploadedLogo'].disabled) {\n            uploadLogo.click();\n        }\n    }\n}\n","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fas fa-user\\\"></i> {{'lang.userAdmin' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n        {{'lang.stepUserAdmin_desc' | translate}}\\n    </div>\\n    <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"width: 850px;margin: auto;\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.id' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"login\\\">\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.firstname' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"firstname\\\">\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.lastname' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"lastname\\\">\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.password' | translate}}</mat-label>\\n            <input [type]=\\\"hide ? 'password' : 'text'\\\" matInput formControlName=\\\"password\\\">\\n            <button mat-icon-button matSuffix color=\\\"primary\\\" (click)=\\\"hide = !hide\\\">\\n                <mat-icon class=\\\"fa {{hide ? 'fa-eye-slash' : 'fa-eye'}}\\\"></mat-icon>\\n            </button>\\n            <mat-error>{{'lang.passwordNotMatch' | translate}}</mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.retypeNewPassword' | translate}}</mat-label>\\n            <input [type]=\\\"hide ? 'password' : 'text'\\\" matInput formControlName=\\\"passwordConfirm\\\">\\n            <button mat-icon-button matSuffix color=\\\"primary\\\" (click)=\\\"hide = !hide\\\">\\n                <mat-icon class=\\\"fa {{hide ? 'fa-eye-slash' : 'fa-eye'}}\\\"></mat-icon>\\n            </button>\\n            <mat-error>{{'lang.passwordNotMatch' | translate}}</mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.email' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"email\\\">\\n        </mat-form-field>\\n    </form>\\n</div>\\n\";","import { Component, OnInit, Inject, AfterViewInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { InstallerService } from '../installer.service';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { catchError, tap } from 'rxjs/operators';\nimport { AuthService } from '@service/auth.service';\n\n@Component({\n    selector: 'app-install-action',\n    templateUrl: './install-action.component.html',\n    styleUrls: ['./install-action.component.scss']\n})\nexport class InstallActionComponent implements OnInit, AfterViewInit {\n    steps: any[] = [];\n    customId: string = '';\n\n    // Workaround for angular component issue #13870\n    disableAnimation = true;\n\n    constructor(\n        public translate: TranslateService,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        public dialogRef: MatDialogRef<InstallActionComponent>,\n        public http: HttpClient,\n        private installerService: InstallerService,\n        private notify: NotificationService,\n        private authService: AuthService,\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.initSteps();\n\n    }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => this.disableAnimation = false);\n    }\n\n    async launchInstall() {\n        let res: any;\n        for (let index = 0; index < this.data.length; index++) {\n            this.steps[index].state = 'inProgress';\n            res = await this.doStep(index);\n            if (!res) {\n                break;\n            }\n        }\n    }\n\n    initSteps() {\n        this.data.forEach((step: any, index: number) => {\n            if (index === 0) {\n                this.customId = step.body.customId;\n            } else {\n                step.body.customId = this.customId;\n            }\n            this.steps.push(\n                {\n                    idStep : step.idStep,\n                    label: step.description,\n                    state: '',\n                    msgErr: '',\n                }\n            );\n        });\n    }\n\n    doStep(index: number) {\n        return new Promise((resolve, reject) => {\n            if (this.installerService.isStepAlreadyLaunched(this.data[index].idStep)) {\n                this.steps[index].state = 'OK';\n                resolve(true);\n            } else {\n                this.http[this.data[index].route.method.toLowerCase()](this.data[index].route.url, this.data[index].body).pipe(\n                    tap((data: any) => {\n                        this.steps[index].state = 'OK';\n                        this.installerService.setStep(this.steps[index]);\n                        resolve(true);\n                    }),\n                    catchError((err: any) => {\n                        this.steps[index].state = 'KO';\n                        if (err.error.lang !== undefined) {\n                            this.steps[index].msgErr = this.translate.instant('lang.' + err.error.lang);\n                        } else {\n                            this.steps[index].msgErr = err.error.errors;\n                        }\n                        resolve(false);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    isInstallBegin() {\n        return this.steps.filter(step => step.state === '').length !== this.steps.length;\n    }\n\n    isInstallComplete() {\n        return this.steps.filter(step => step.state === '').length === 0;\n    }\n\n    isInstallError() {\n        return this.steps.filter(step => step.state === 'KO').length > 0;\n    }\n\n    goToInstance() {\n        this.http.request('DELETE', '../rest/installer/lock', { body: { customId: this.customId } }).pipe(\n            tap((res: any) => {\n                this.authService.noInstall = false;\n                window.location.href = res.url;\n                this.dialogRef.close('ok');\n            }),\n            catchError((err: any) => {\n                this.notify.handleSoftErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderService } from '@service/header.service';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatStepper } from '@angular/material/stepper';\nimport { AppService } from '@service/app.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SortPipe } from '../../plugins/sorting.pipe';\nimport { StepAction } from './types';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InstallActionComponent } from './install-action/install-action.component';\nimport { of } from 'rxjs';\nimport { FunctionsService } from '@service/functions.service';\nimport { catchError, filter, tap } from 'rxjs/operators';\nimport { AuthService } from '@service/auth.service';\nimport { PrivilegeService } from '@service/privileges.service';\n\n@Component({\n    templateUrl: './installer.component.html',\n    styleUrls: ['./installer.component.scss'],\n    providers: [\n        {\n            provide: STEPPER_GLOBAL_OPTIONS, useValue: { showError: true },\n        },\n        SortPipe\n    ]\n})\nexport class InstallerComponent implements OnInit, AfterViewInit {\n\n    loading: boolean = true;\n    @ViewChildren('stepContent') stepContent: any;\n    @ViewChild('stepper', { static: false }) stepper: MatStepper;\n\n    constructor(\n        public translate: TranslateService,\n        private router: Router,\n        private headerService: HeaderService,\n        private notify: NotificationService,\n        public appService: AppService,\n        private sortPipe: SortPipe,\n        public dialog: MatDialog,\n        private functionService: FunctionsService,\n        public privilegeService: PrivilegeService,\n        public authService: AuthService,\n    ) { }\n\n    ngOnInit(): void {\n        this.headerService.hideSideBar = true;\n\n        if (!this.authService.isAuth() && !this.authService.noInstall) {\n            this.router.navigate(['/login']);\n            this.notify.error(this.translate.instant('lang.mustConnectToInstall'));\n        } else if (this.authService.getToken() !== null && !this.privilegeService.hasCurrentUserPrivilege('create_custom')) {\n            this.router.navigate(['/login']);\n            this.notify.error(this.translate.instant('lang.mustPrivilegeToInstall'));\n        } else {\n            this.loading = false;\n        }\n    }\n\n\n    ngAfterViewInit(): void {\n        $('.mat-horizontal-stepper-header-container').insertBefore('.bg-head-content');\n        $('.mat-step-icon').css('background-color', 'white');\n        $('.mat-step-icon').css('color', '#135f7f');\n        $('.mat-step-label').css('color', 'white');\n        /*$('.mat-step-label').css('opacity', '0.5');\n        $('.mat-step-label-active').css('opacity', '1');*/\n        /*$('.mat-step-label-selected').css('font-size', '160%');\n        $('.mat-step-label-selected').css('transition', 'all 0.2s');\n        $('.mat-step-label').css('transition', 'all 0.2s');*/\n    }\n\n    isValidStep() {\n        return false;\n    }\n\n    initStep(ev: any) {\n        this.stepContent.toArray()[ev.selectedIndex].initStep();\n    }\n\n    nextStep() {\n        this.stepper.next();\n    }\n\n    gotToLogin() {\n        this.router.navigate(['/login']);\n    }\n\n    endInstall() {\n        let installContent: StepAction[] = [];\n        this.stepContent.toArray().forEach((component: any) => {\n            installContent = installContent.concat(component.getInfoToInstall());\n        });\n\n        installContent = this.sortPipe.transform(installContent, 'installPriority');\n\n        const dialogRef = this.dialog.open(InstallActionComponent, {\n            panelClass: 'maarch-modal',\n            disableClose: true,\n            width: '500px',\n            data: installContent\n        });\n        dialogRef.afterClosed().pipe(\n            filter((result: any) => !this.functionService.empty(result)),\n            tap((result: any) => {\n            }),\n            catchError((err: any) => {\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n}\n","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n.backgroundList {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n  grid-gap: 10px;\\n}\\n\\n.selected {\\n  transition: all 0.3s;\\n  opacity: 1 !important;\\n  border: solid 10px #F99830 !important;\\n}\\n\\n.backgroundItem {\\n  border: solid 0px #F99830;\\n  opacity: 0.5;\\n  transition: all 0.3s;\\n  cursor: pointer;\\n  height: 120px;\\n  background-size: cover !important;\\n}\\n\\n.disabled {\\n  cursor: default !important;\\n}\\n\\n.backgroundItem:not(.disabled):hover {\\n  transition: all 0.3s;\\n  opacity: 1 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL2N1c3RvbWl6YXRpb24vY3VzdG9taXphdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9mcm9udGVuZC9jc3MvdmFycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBRUksWUFBWTtBQUhoQjs7QUFDQTtFQUtRLGNDUFM7RURRVCxtQkFBbUI7RUFDbkIsd0JBQXdCO0VBQ3hCLFVBQVU7QUFGbEI7O0FBTUE7RUFDSSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGNBQWM7QUFIbEI7O0FBTUE7RUFDSSxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHFDQUF3QztBQUg1Qzs7QUFNQTtFQUNJLHlCQzFCZTtFRDJCZixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGVBQWU7RUFDZixhQUFhO0VBQ2IsaUNBQWlDO0FBSHJDOztBQU1BO0VBQ0ksMEJBQTBCO0FBSDlCOztBQU1BO0VBQ0ksb0JBQW9CO0VBQ3BCLHFCQUFxQjtBQUh6QiIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci9jdXN0b21pemF0aW9uL2N1c3RvbWl6YXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi9jc3MvdmFycy5zY3NzJztcblxuXG4uc3RlcENvbnRlbnQge1xuICAgIC8vIG1heC13aWR0aDogODUwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgLnN0ZXBDb250ZW50VGl0bGUge1xuICAgICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG59XG5cbi5iYWNrZ3JvdW5kTGlzdCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCAxZnIpO1xuICAgIGdyaWQtZ2FwOiAxMHB4O1xufVxuXG4uc2VsZWN0ZWQge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IHNvbGlkIDEwcHggJHNlY29uZGFyeSAhaW1wb3J0YW50O1xufVxuXG4uYmFja2dyb3VuZEl0ZW0ge1xuICAgIGJvcmRlcjogc29saWQgMHB4ICRzZWNvbmRhcnk7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBoZWlnaHQ6IDEyMHB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcbn1cblxuLmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IGRlZmF1bHQgIWltcG9ydGFudDtcbn1cblxuLmJhY2tncm91bmRJdGVtOm5vdCguZGlzYWJsZWQpOmhvdmVyIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59IiwiJGNvbG9yLW1haW46ICM0RjRGNEY7IC8vIGRlZmF1bHQgY29sb3IgaW4gYXBwbGljYXRpb25cbiRwcmltYXJ5OiAjMTM1ZjdmOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kc2Vjb25kYXJ5OiAjRjk5ODMwOyAvLyBtYWluIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG4kYWNjZW50OiAjMDA2ODQxOyAvLyBhY2NlbnQgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb24gKGxpa2Ugc3VjY2VzcyBidXR0b25zKVxuJHdhcm46ICM4ZTNlNTI7IC8vIHdhcm5pbmcgY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb25cblxuLy8gV0FSTklORyAhIFlPVSBNVVNUIFJFQ09NUElMQVRFIG1hYXJjaC1tYXRlcmlhbC5zY3NzIElGIFZBTFVFUyBDSEFOR0VTIl19 */\";","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn } from '@angular/forms';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { InstallerService } from '../installer.service';\nimport { StepAction } from '../types';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-useradmin',\n    templateUrl: './useradmin.component.html',\n    styleUrls: ['./useradmin.component.scss']\n})\nexport class UseradminComponent implements OnInit {\n\n    stepFormGroup: FormGroup;\n\n    hide: boolean = true;\n\n    @Output() tiggerInstall = new EventEmitter<string>();\n\n    constructor(\n        public translate: TranslateService,\n        private _formBuilder: FormBuilder,\n        private notify: NotificationService,\n        private installerService: InstallerService\n    ) {\n\n        const valLogin: ValidatorFn[] = [Validators.pattern(/^[\\w.@-]*$/), Validators.required];\n        const valEmail: ValidatorFn[] = [Validators.pattern(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/), Validators.required];\n\n        this.stepFormGroup = this._formBuilder.group({\n            login: ['superadmin', valLogin],\n            firstname: ['Admin', Validators.required],\n            lastname: ['SUPER', Validators.required],\n            password: ['', Validators.required],\n            passwordConfirm: ['', Validators.required],\n            email: ['yourEmail@domain.com', valEmail],\n        });\n    }\n\n    ngOnInit(): void {\n        this.stepFormGroup.controls['password'].valueChanges.pipe(\n            tap((data) => {\n                if (data !== this.stepFormGroup.controls['passwordConfirm'].value) {\n                    this.stepFormGroup.controls['password'].setErrors({ 'incorrect': true });\n                    this.stepFormGroup.controls['passwordConfirm'].setErrors({ 'incorrect': true });\n                    this.stepFormGroup.controls['passwordConfirm'].markAsTouched();\n                } else {\n                    this.stepFormGroup.controls['password'].setErrors(null);\n                    this.stepFormGroup.controls['passwordConfirm'].setErrors(null);\n                }\n            })\n        ).subscribe();\n        this.stepFormGroup.controls['passwordConfirm'].valueChanges.pipe(\n            tap((data) => {\n                if (data !== this.stepFormGroup.controls['password'].value) {\n                    this.stepFormGroup.controls['password'].setErrors({ 'incorrect': true });\n                    this.stepFormGroup.controls['password'].markAsTouched();\n                    this.stepFormGroup.controls['passwordConfirm'].setErrors({ 'incorrect': true });\n                } else {\n                    this.stepFormGroup.controls['password'].setErrors(null);\n                    this.stepFormGroup.controls['passwordConfirm'].setErrors(null);\n                }\n            })\n        ).subscribe();\n    }\n\n    initStep() {\n        if (this.installerService.isStepAlreadyLaunched('userAdmin')) {\n            this.stepFormGroup.disable();\n        }\n    }\n\n    isValidStep() {\n        return this.stepFormGroup === undefined ? false : this.stepFormGroup.valid || this.installerService.isStepAlreadyLaunched('userAdmin');\n    }\n\n    getFormGroup() {\n        return this.installerService.isStepAlreadyLaunched('userAdmin') ? true : this.stepFormGroup;\n    }\n\n    getInfoToInstall(): StepAction[] {\n        return [{\n            idStep: 'userAdmin',\n            body: {\n                login: this.stepFormGroup.controls['login'].value,\n                firstname: this.stepFormGroup.controls['firstname'].value,\n                lastname: this.stepFormGroup.controls['lastname'].value,\n                password: this.stepFormGroup.controls['password'].value,\n                email: this.stepFormGroup.controls['email'].value,\n            },\n            route: {\n                method: 'PUT',\n                url: '../rest/installer/administrator'\n            },\n            description: this.translate.instant('lang.stepUserAdminActionDesc'),\n            installPriority: 3\n        }];\n    }\n\n    launchInstall() {\n        this.tiggerInstall.emit();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InstallerComponent } from './installer.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InstallerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InstallerRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { StepAction } from './types';\n\n@Injectable()\nexport class InstallerService {\n\n    steps: StepAction[] = [];\n\n    constructor() { }\n\n    setStep(step: StepAction) {\n        this.steps.push(step);\n    }\n\n    isStepAlreadyLaunched(IdsStep: string) {\n        return this.steps.filter(step => IdsStep === step.idStep).length > 0;\n    }\n}\n","export default \"::ng-deep.mat-stepper-horizontal {\\n  height: 100% !important;\\n}\\n\\n.container {\\n  padding-left: 80px !important;\\n  padding-right: 80px !important;\\n}\\n\\n.previousStepButton {\\n  position: fixed;\\n  top: 50%;\\n  left: 10px;\\n  transform: translateY(-50%);\\n}\\n\\n.previousStepButton .mat-icon {\\n  font-size: 25px;\\n  height: auto;\\n  width: auto;\\n}\\n\\n.nextStepButton {\\n  position: fixed;\\n  top: 50%;\\n  right: 13px;\\n  transform: translateY(-50%);\\n}\\n\\n.nextStepButton .mat-icon {\\n  font-size: 25px;\\n  height: auto;\\n  width: auto;\\n}\\n\\n/*.mat-stepper-horizontal {\\n    display: flex;\\n    flex-direction: column;\\n\\n\\n    ::ng-deep.mat-step-icon {\\n        background-color: white;\\n        color: #135f7f;\\n    }\\n\\n    ::ng-deep.mat-step-label {\\n        color: white;\\n        opacity: 0.5;\\n    }\\n\\n    ::ng-deep.mat-step-label-active {\\n        opacity: 1;\\n    }\\n}\\n\\n::ng-deep.mat-step-icon {\\n    background-color: white;\\n    color: #135f7f;\\n}\\n\\n::ng-deep.mat-step-label-active {\\n    opacity: 1;\\n}\\n\\n::ng-deep.mat-step-label {\\n    color: white;\\n    opacity: 0.5;\\n}\\n\\n.stepIcon {\\n    font-size: 10px !important;\\n    height: auto !important;\\n    width: auto !important;\\n}\\n\\n::ng-deep.mat-step-label {\\n    transition: all 0.2s;\\n}\\n\\n::ng-deep.mat-step-label-selected {\\n    font-size: 160%;\\n    transition: all 0.2s;\\n}\\n\\n::ng-deep.mat-horizontal-stepper-content {\\n    height: 100%;\\n}\\n\\n::ng-deep.mat-horizontal-content-container {\\n    flex: 1;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n    padding-bottom: 0px !important;\\n}\\n\\n.stepContainer{\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n}\\n\\n.stepContent {\\n    flex: 1;\\n    overflow: auto;\\n\\n    &Title {\\n        margin-bottom: 30px;\\n        border-bottom: solid 1px;\\n        padding: 0;\\n    }\\n}\\n\\n.formStep {\\n    display: contents;\\n}*/\\n\\n::ng-deep.mat-step-icon {\\n  background-color: white;\\n  color: #135f7f;\\n}\\n\\n::ng-deep.mat-step-label-active {\\n  opacity: 1 !important;\\n}\\n\\n::ng-deep.mat-step-label {\\n  color: white;\\n  opacity: 0.5;\\n}\\n\\n.stepIcon {\\n  font-size: 10px !important;\\n  height: auto !important;\\n  width: auto !important;\\n}\\n\\n::ng-deep.mat-step-label {\\n  transition: all 0.2s;\\n}\\n\\n::ng-deep.mat-step-label-selected {\\n  font-size: 160%;\\n  transition: all 0.2s;\\n  opacity: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL2luc3RhbGxlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtFQUNJLDZCQUE2QjtFQUM3Qiw4QkFBOEI7QUFDbEM7O0FBRUE7RUFDSSxlQUFlO0VBQ2YsUUFBUTtFQUNSLFVBQVU7RUFDViwyQkFBMkI7QUFDL0I7O0FBTEE7RUFPUSxlQUFlO0VBQ2YsWUFBVztFQUNYLFdBQVc7QUFFbkI7O0FBRUE7RUFDSSxlQUFlO0VBQ2YsUUFBUTtFQUNSLFdBQVc7RUFDWCwyQkFBMkI7QUFDL0I7O0FBTEE7RUFPUSxlQUFlO0VBQ2YsWUFBVztFQUNYLFdBQVc7QUFFbkI7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnRkU7O0FBQ0Y7RUFDSSx1QkFBdUI7RUFDdkIsY0FBYztBQUNsQjs7QUFFQTtFQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtFQUNJLFlBQVk7RUFDWixZQUFZO0FBQ2hCOztBQUVBO0VBQ0ksMEJBQTBCO0VBQzFCLHVCQUF1QjtFQUN2QixzQkFBc0I7QUFDMUI7O0FBRUE7RUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7RUFDSSxlQUFlO0VBQ2Ysb0JBQW9CO0VBQ3BCLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci9pbnN0YWxsZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAubWF0LXN0ZXBwZXItaG9yaXpvbnRhbCB7XG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi5jb250YWluZXIge1xuICAgIHBhZGRpbmctbGVmdDogODBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6IDgwcHggIWltcG9ydGFudDtcbn1cblxuLnByZXZpb3VzU3RlcEJ1dHRvbiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDEwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuXG4gICAgLm1hdC1pY29uIHtcbiAgICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxufVxuXG4ubmV4dFN0ZXBCdXR0b24ge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDUwJTtcbiAgICByaWdodDogMTNweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG5cbiAgICAubWF0LWljb24ge1xuICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICB9XG59XG4vKi5tYXQtc3RlcHBlci1ob3Jpem9udGFsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cblxuICAgIDo6bmctZGVlcC5tYXQtc3RlcC1pY29uIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGNvbG9yOiAjMTM1ZjdmO1xuICAgIH1cblxuICAgIDo6bmctZGVlcC5tYXQtc3RlcC1sYWJlbCB7XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgb3BhY2l0eTogMC41O1xuICAgIH1cblxuICAgIDo6bmctZGVlcC5tYXQtc3RlcC1sYWJlbC1hY3RpdmUge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWljb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiAjMTM1ZjdmO1xufVxuXG46Om5nLWRlZXAubWF0LXN0ZXAtbGFiZWwtYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAxO1xufVxuXG46Om5nLWRlZXAubWF0LXN0ZXAtbGFiZWwge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBvcGFjaXR5OiAwLjU7XG59XG5cbi5zdGVwSWNvbiB7XG4gICAgZm9udC1zaXplOiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWxhYmVsIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWxhYmVsLXNlbGVjdGVkIHtcbiAgICBmb250LXNpemU6IDE2MCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG59XG5cbjo6bmctZGVlcC5tYXQtaG9yaXpvbnRhbC1zdGVwcGVyLWNvbnRlbnQge1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuOjpuZy1kZWVwLm1hdC1ob3Jpem9udGFsLWNvbnRlbnQtY29udGFpbmVyIHtcbiAgICBmbGV4OiAxO1xuICAgIHBhZGRpbmctbGVmdDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1yaWdodDogMHB4ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufVxuXG4uc3RlcENvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc3RlcENvbnRlbnQge1xuICAgIGZsZXg6IDE7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAmVGl0bGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxufVxuXG4uZm9ybVN0ZXAge1xuICAgIGRpc3BsYXk6IGNvbnRlbnRzO1xufSovXG5cbjo6bmctZGVlcC5tYXQtc3RlcC1pY29uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBjb2xvcjogIzEzNWY3Zjtcbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWxhYmVsLWFjdGl2ZSB7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAubWF0LXN0ZXAtbGFiZWwge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBvcGFjaXR5OiAwLjU7XG59XG5cbi5zdGVwSWNvbiB7XG4gICAgZm9udC1zaXplOiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWxhYmVsIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cblxuOjpuZy1kZWVwLm1hdC1zdGVwLWxhYmVsLXNlbGVjdGVkIHtcbiAgICBmb250LXNpemU6IDE2MCU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgb3BhY2l0eTogMTtcbn0iXX0= */\";","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL2RvY3NlcnZlcnMvZG9jc2VydmVycy5jb21wb25lbnQuc2NzcyIsInNyYy9mcm9udGVuZC9jc3MvdmFycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksWUFBWTtBQUZoQjs7QUFBQTtFQUlRLGNDTFM7RURNVCxtQkFBbUI7RUFDbkIsd0JBQXdCO0VBQ3hCLFVBQVU7QUFBbEIiLCJmaWxlIjoic3JjL2Zyb250ZW5kL2FwcC9pbnN0YWxsZXIvZG9jc2VydmVycy9kb2NzZXJ2ZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vY3NzL3ZhcnMuc2Nzcyc7XG5cbi5zdGVwQ29udGVudCB7XG4gICAgLy8gbWF4LXdpZHRoOiA4NTBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgLnN0ZXBDb250ZW50VGl0bGUge1xuICAgICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICB9XG59XG5cbiIsIiRjb2xvci1tYWluOiAjNEY0RjRGOyAvLyBkZWZhdWx0IGNvbG9yIGluIGFwcGxpY2F0aW9uXG4kcHJpbWFyeTogIzEzNWY3ZjsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJHNlY29uZGFyeTogI0Y5OTgzMDsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJGFjY2VudDogIzAwNjg0MTsgLy8gYWNjZW50IGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uIChsaWtlIHN1Y2Nlc3MgYnV0dG9ucylcbiR3YXJuOiAjOGUzZTUyOyAvLyB3YXJuaW5nIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG5cbi8vIFdBUk5JTkcgISBZT1UgTVVTVCBSRUNPTVBJTEFURSBtYWFyY2gtbWF0ZXJpYWwuc2NzcyBJRiBWQUxVRVMgQ0hBTkdFUyJdfQ== */\";","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from '@service/notification/notification.service';\nimport { of } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '../../../environments/environment';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-prerequisite',\n    templateUrl: './prerequisite.component.html',\n    styleUrls: ['./prerequisite.component.scss']\n})\nexport class PrerequisiteComponent implements OnInit {\n\n    stepFormGroup: FormGroup;\n\n    prerequisites: any = {};\n\n    packagesList: any = {\n        general: [\n            {\n                label: 'phpVersionValid',\n                required: true\n            },\n            {\n                label: 'writable',\n                required: true\n            },\n        ],\n        tools: [\n            {\n                label: 'unoconv',\n                required: true\n            },\n            {\n                label: 'netcatOrNmap',\n                required: true\n            },\n            {\n                label: 'pgsql',\n                required: true\n            },\n            {\n                label: 'curl',\n                required: true\n            },\n            {\n                label: 'zip',\n                required: true\n            },\n            {\n                label: 'wkhtmlToPdf',\n                required: true\n            },\n            {\n                label: 'imagick',\n                required: true\n            },\n\n        ],\n        phpExtensions: [\n            {\n                label: 'fileinfo',\n                required: true\n            }, {\n                label: 'pdoPgsql',\n                required: true\n            },\n            {\n                label: 'gd',\n                required: true\n            },\n            {\n                label: 'mbstring',\n                required: true\n            },\n            {\n                label: 'json',\n                required: true\n            },\n            {\n                label: 'gettext',\n                required: true\n            },\n            {\n                label: 'xml',\n                required: true\n            },\n        ],\n        phpConfiguration: [\n            {\n                label: 'errorReporting',\n                required: true\n            },\n            {\n                label: 'displayErrors',\n                required: true\n            }\n        ],\n    };\n\n    docMaarchUrl: string = `https://docs.maarch.org/gitbook/html/MaarchCourrier/${environment.VERSION.split('.')[0] + '.' + environment.VERSION.split('.')[1]}/guat/guat_prerequisites/home.html`;\n\n    @ViewChildren('packageItem') packageItem: QueryList<any>;\n\n    constructor(\n        public translate: TranslateService,\n        public http: HttpClient,\n        private notify: NotificationService,\n        private _formBuilder: FormBuilder\n    ) { }\n\n    ngOnInit(): void {\n        this.stepFormGroup = this._formBuilder.group({\n            firstCtrl: ['', Validators.required]\n        });\n        this.getStepData();\n    }\n\n    getStepData() {\n        this.http.get(`../rest/installer/prerequisites`).pipe(\n            tap((data: any) => {\n                this.prerequisites = data.prerequisites;\n                Object.keys(this.packagesList).forEach(group => {\n                    this.packagesList[group].forEach((item: any, key: number) => {\n                        this.packagesList[group][key].state = this.prerequisites[this.packagesList[group][key].label] ? 'ok' : 'ko';\n                        if (this.packagesList[group][key].label === 'phpVersionValid') {\n                            this.translate.setTranslation(this.translate.getDefaultLang(), {\n                                lang: {\n                                    install_phpVersionValid_desc: this.translate.instant('lang.currentVersion') + ' : ' + this.prerequisites['phpVersion']\n                                }\n                            }, true);\n                        }\n                    });\n                });\n                this.stepFormGroup.controls['firstCtrl'].setValue(this.checkStep());\n                this.stepFormGroup.controls['firstCtrl'].markAsUntouched();\n            }),\n            catchError((err: any) => {\n                this.notify.handleSoftErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    initStep() {\n        let i = 0;\n        Object.keys(this.packagesList).forEach(group => {\n            this.packagesList[group].forEach((item: any, key: number) => {\n                if (this.packagesList[group][key].state === 'ko') {\n                    this.packageItem.toArray().filter((itemKo: any) => itemKo._elementRef.nativeElement.id === this.packagesList[group][key].label)[0].toggle();\n                }\n                i++;\n            });\n        });\n    }\n\n    checkStep() {\n        let state = 'success';\n        Object.keys(this.packagesList).forEach((group: any) => {\n            this.packagesList[group].forEach((item: any) => {\n                if (item.state === 'ko') {\n                    state = '';\n                }\n            });\n        });\n        return state;\n    }\n\n    isValidStep() {\n        return this.stepFormGroup === undefined ? false : this.stepFormGroup.controls['firstCtrl'].value === 'success';\n    }\n\n    getFormGroup() {\n        return this.stepFormGroup;\n    }\n\n    getInfoToInstall(): any[] {\n        return [];\n    }\n}\n","export default \"<div class=\\\"mat-dialog-content-container\\\">\\n    <div mat-dialog-content [@.disabled]=\\\"disableAnimation\\\">\\n        <mat-accordion>\\n            <mat-expansion-panel hideToggle expanded>\\n                <div class=\\\"launch-action\\\">\\n                    <h2 class=\\\"text-center\\\" color=\\\"primary\\\">{{'lang.almostThere' | translate}}</h2>\\n                    <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\"\\n                        (click)=\\\"installStepAction.open();launchInstall()\\\" style=\\\"font-size: 25px;padding: 20px;\\\">\\n                        <i class=\\\" far fa-hdd\\\"></i> {{'lang.launchInstall' | translate}}\\n                    </button>\\n                </div>\\n            </mat-expansion-panel>\\n            <mat-expansion-panel #installStepAction [expanded]=\\\"false\\\">\\n                <mat-list-item *ngFor=\\\"let step of steps\\\">\\n                    <div mat-line class=\\\"step\\\" [class.endStep]=\\\"step.state==='OK' || step.state==='KO'\\\"\\n                        [class.currentStep]=\\\"step.state==='inProgress'\\\"><span class=\\\"stepLabel\\\">{{step.label}}</span>\\n                        <ng-container *ngIf=\\\"step.state==='inProgress'\\\">...</ng-container>&nbsp;\\n                        <i *ngIf=\\\"step.state==='OK'\\\" class=\\\"fa fa-check\\\" style=\\\"color: green\\\"></i>\\n                        <i *ngIf=\\\"step.state==='KO'\\\" class=\\\"fa fa-times\\\" style=\\\"color: red\\\"></i>\\n                        <div *ngIf=\\\"step.msgErr!==''\\\" class=\\\"alert-message alert-message-danger\\\" role=\\\"alert\\\"\\n                            style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n                            {{step.msgErr}}\\n                        </div>\\n                    </div>\\n                </mat-list-item>\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n    </div>\\n    <ng-container *ngIf=\\\"isInstallComplete() || isInstallError() || !isInstallBegin()\\\">\\n        <span class=\\\"divider-modal\\\"></span>\\n        <div mat-dialog-actions class=\\\"actions\\\">\\n            <button *ngIf=\\\"!isInstallError() && isInstallComplete()\\\" mat-raised-button mat-button color=\\\"primary\\\"\\n                (click)=\\\"goToInstance()\\\">{{'lang.goToNewInstance' | translate}}</button>\\n            <button *ngIf=\\\"isInstallError() || !isInstallBegin()\\\" mat-raised-button mat-button [mat-dialog-close]=\\\"\\\">{{'lang.cancel' | translate}}</button>\\n        </div>\\n    </ng-container>\\n</div>\";","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n.packageItem {\\n  flex: 1 !important;\\n}\\n\\n.iconCheckPackage {\\n  background: white;\\n  font-size: 15px !important;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 10px;\\n  border-radius: 20px;\\n  height: 35px;\\n  width: 35px;\\n}\\n\\n.icon_ok {\\n  color: green;\\n}\\n\\n.icon_ok:before {\\n  content: \\\"\\\\f111\\\";\\n}\\n\\n.icon_warning {\\n  color: orange;\\n}\\n\\n.icon_warning:before {\\n  content: \\\"\\\\f111\\\";\\n}\\n\\n.icon_ko {\\n  color: red;\\n}\\n\\n.icon_ko:before {\\n  content: \\\"\\\\f111\\\";\\n}\\n\\n.link {\\n  text-decoration: underline;\\n  color: #135f7f !important;\\n}\\n\\n.packageName {\\n  font-size: 120% !important;\\n  white-space: normal !important;\\n}\\n\\n.packageName i {\\n  cursor: help;\\n  opacity: 0.5;\\n  color: #135f7f;\\n}\\n\\n::ng-deep.tooltip-red {\\n  background: #b71c1c;\\n  font-size: 14px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL3ByZXJlcXVpc2l0ZS9wcmVyZXF1aXNpdGUuY29tcG9uZW50LnNjc3MiLCJzcmMvZnJvbnRlbmQvY3NzL3ZhcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLFlBQVk7QUFGaEI7O0FBQUE7RUFLUSxjQ05TO0VET1QsbUJBQW1CO0VBQ25CLHdCQUF3QjtFQUN4QixVQUFVO0FBRGxCOztBQUtBO0VBQ0ksa0JBQWtCO0FBRnRCOztBQUtBO0VBQ0ksaUJBQWlCO0VBQ2pCLDBCQUEwQjtFQUMxQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixXQUFXO0FBRmY7O0FBS0E7RUFDSSxZQUFZO0FBRmhCOztBQUtBO0VBQ0ksZ0JBQWdCO0FBRnBCOztBQUtBO0VBQ0ksYUFBYTtBQUZqQjs7QUFLQTtFQUNJLGdCQUFnQjtBQUZwQjs7QUFNQTtFQUNJLFVBQVU7QUFIZDs7QUFNQTtFQUNJLGdCQUFnQjtBQUhwQjs7QUFNQTtFQUNJLDBCQUEwQjtFQUMxQix5QkFBMEI7QUFIOUI7O0FBTUE7RUFDSSwwQkFBMEI7RUFDMUIsOEJBQThCO0FBSGxDOztBQUNBO0VBSVEsWUFBWTtFQUNaLFlBQVk7RUFDWixjQ2pFUztBRGdFakI7O0FBS0E7RUFDSSxtQkFBbUI7RUFDbkIsZUFBZTtBQUZuQiIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci9wcmVyZXF1aXNpdGUvcHJlcmVxdWlzaXRlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vLi4vLi4vY3NzL3ZhcnMuc2Nzcyc7XG5cbi5zdGVwQ29udGVudCB7XG4gICAgLy8gbWF4LXdpZHRoOiA4NTBweDtcbiAgICBtYXJnaW46IGF1dG87XG5cbiAgICAuc3RlcENvbnRlbnRUaXRsZSB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4O1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLnBhY2thZ2VJdGVtIHtcbiAgICBmbGV4OiAxICFpbXBvcnRhbnQ7XG59XG5cbi5pY29uQ2hlY2tQYWNrYWdlIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDE1cHggIWltcG9ydGFudDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMzVweDtcbn1cblxuLmljb25fb2sge1xuICAgIGNvbG9yOiBncmVlbjtcbn1cblxuLmljb25fb2s6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjExMVwiO1xufVxuXG4uaWNvbl93YXJuaW5nIHtcbiAgICBjb2xvcjogb3JhbmdlO1xufVxuXG4uaWNvbl93YXJuaW5nOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXGYxMTFcIjtcbn1cblxuXG4uaWNvbl9rbyB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuLmljb25fa286YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlxcZjExMVwiO1xufVxuXG4ubGluayB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY29sb3I6ICRwcmltYXJ5ICFpbXBvcnRhbnQ7XG59XG5cbi5wYWNrYWdlTmFtZSB7XG4gICAgZm9udC1zaXplOiAxMjAlICFpbXBvcnRhbnQ7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbCAhaW1wb3J0YW50O1xuICAgIGkge1xuICAgICAgICBjdXJzb3I6IGhlbHA7XG4gICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIH1cbn1cblxuOjpuZy1kZWVwLnRvb2x0aXAtcmVkIHtcbiAgICBiYWNrZ3JvdW5kOiAjYjcxYzFjO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAiLCIkY29sb3ItbWFpbjogIzRGNEY0RjsgLy8gZGVmYXVsdCBjb2xvciBpbiBhcHBsaWNhdGlvblxuJHByaW1hcnk6ICMxMzVmN2Y7IC8vIG1haW4gY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb25cbiRzZWNvbmRhcnk6ICNGOTk4MzA7IC8vIG1haW4gY29sb3IgdGhlbWUgb2YgYXBwbGljYXRpb25cbiRhY2NlbnQ6ICMwMDY4NDE7IC8vIGFjY2VudCBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvbiAobGlrZSBzdWNjZXNzIGJ1dHRvbnMpXG4kd2FybjogIzhlM2U1MjsgLy8gd2FybmluZyBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuXG4vLyBXQVJOSU5HICEgWU9VIE1VU1QgUkVDT01QSUxBVEUgbWFhcmNoLW1hdGVyaWFsLnNjc3MgSUYgVkFMVUVTIENIQU5HRVMiXX0= */\";","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fa fa-database\\\"></i> {{'lang.database' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n        {{'lang.stepDatabase_desc' | translate}}\\n    </div>\\n    <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"width: 850px;margin: auto;\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.host' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"dbHostCtrl\\\" required>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.port' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"dbPortCtrl\\\"  required>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.user' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"dbLoginCtrl\\\" required>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.password' | translate}}</mat-label>\\n            <input [type]=\\\"hide ? 'password' : 'text'\\\" matInput formControlName=\\\"dbPasswordCtrl\\\" required>\\n            <button mat-icon-button matSuffix color=\\\"primary\\\" (click)=\\\"hide = !hide\\\">\\n                <mat-icon class=\\\"fa {{hide ? 'fa-eye-slash' : 'fa-eye'}}\\\"></mat-icon>\\n            </button>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>{{'lang.dbName' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"dbNameCtrl\\\" maxlength=\\\"50\\\" required>\\n        </mat-form-field>\\n        <div class=\\\"alert-message alert-message-info\\\" *ngIf=\\\"dbExist\\\" role=\\\"alert\\\" style=\\\"margin-top: 0px;min-width: 100%;\\\">\\n            {{'lang.stepEmptyDb' | translate}}\\n        </div>\\n        <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"never\\\">\\n            <mat-label>{{'lang.dbSample' | translate}}</mat-label>\\n            <mat-select formControlName=\\\"dbSampleCtrl\\\">\\n                <mat-option *ngFor=\\\"let sample of dataFiles\\\" [value]=\\\"sample\\\">\\n                    {{sample}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <div style=\\\"text-align:center;\\\">\\n            <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"checkConnection()\\\" [disabled]=\\\"isEmptyConnInfo() || stepFormGroup.controls['dbHostCtrl'].disabled\\\">\\n                {{'lang.checkInformations' | translate}}\\n            </button>\\n        </div>\\n    </form>\\n</div>\";","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL3VzZXJhZG1pbi91c2VyYWRtaW4uY29tcG9uZW50LnNjc3MiLCJzcmMvZnJvbnRlbmQvY3NzL3ZhcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLFlBQVk7QUFGaEI7O0FBQUE7RUFLUSxjQ05TO0VET1QsbUJBQW1CO0VBQ25CLHdCQUF3QjtFQUN4QixVQUFVO0FBRGxCIiwiZmlsZSI6InNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL3VzZXJhZG1pbi91c2VyYWRtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLi8uLi8uLi9jc3MvdmFycy5zY3NzJztcblxuLnN0ZXBDb250ZW50IHtcbiAgICAvLyBtYXgtd2lkdGg6IDg1MHB4O1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgIC5zdGVwQ29udGVudFRpdGxlIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHg7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxufSIsIiRjb2xvci1tYWluOiAjNEY0RjRGOyAvLyBkZWZhdWx0IGNvbG9yIGluIGFwcGxpY2F0aW9uXG4kcHJpbWFyeTogIzEzNWY3ZjsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJHNlY29uZGFyeTogI0Y5OTgzMDsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJGFjY2VudDogIzAwNjg0MTsgLy8gYWNjZW50IGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uIChsaWtlIHN1Y2Nlc3MgYnV0dG9ucylcbiR3YXJuOiAjOGUzZTUyOyAvLyB3YXJuaW5nIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG5cbi8vIFdBUk5JTkcgISBZT1UgTVVTVCBSRUNPTVBJTEFURSBtYWFyY2gtbWF0ZXJpYWwuc2NzcyBJRiBWQUxVRVMgQ0hBTkdFUyJdfQ== */\";","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fas fa-check-square\\\"></i> {{'lang.prerequisite' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n        {{'lang.stepPrerequisite_desc' | translate}} : <a href=\\\"{{docMaarchUrl}}\\\" target=\\\"_blank\\\" class=\\\"link\\\">{{docMaarchUrl}}</a>\\n    </div>\\n    <mat-list style=\\\"background: white;\\\" *ngFor=\\\"let groupPackage of packagesList | keyvalue\\\">\\n        <div mat-subheader>{{'lang.' + groupPackage.key | translate}}</div>\\n        <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"50px\\\">\\n            <mat-grid-tile *ngFor=\\\"let package of packagesList[groupPackage.key]\\\">\\n                <mat-list-item>\\n                    <mat-icon mat-list-icon class=\\\"fa iconCheckPackage icon_{{package.state}}\\\"></mat-icon>\\n                    <div mat-line class=\\\"packageName\\\">\\n                        {{'lang.install_' + package.label | translate}} <i #packageItem=\\\"matTooltip\\\" [id]=\\\"package.label\\\" class=\\\"fa fa-info-circle\\\" \\n                        [matTooltip]=\\\"'lang.install_'+package.label+'_desc' | translate\\\"\\n                        [matTooltipClass]=\\\"package.state !== 'ok' ? 'tooltip-red' : ''\\\" matTooltipPosition=\\\"right\\\"></i>\\n                    </div>\\n                </mat-list-item>  \\n            </mat-grid-tile>\\n          </mat-grid-list>\\n    </mat-list>\\n    <div style=\\\"text-align: center;\\\">\\n        <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"getStepData()\\\">{{'lang.updateInformations' | translate}}</button>\\n    </div>\\n</div>\\n\";","export default \".stepContent {\\n  margin: auto;\\n}\\n\\n.stepContent .stepContentTitle {\\n  color: #135f7f;\\n  margin-bottom: 30px;\\n  border-bottom: solid 1px;\\n  padding: 0;\\n}\\n\\n.backgroundList {\\n  display: grid;\\n  grid-template-columns: repeat(5, 1fr);\\n  grid-gap: 10px;\\n}\\n\\n.selected {\\n  transition: all 0.3s;\\n  opacity: 1 !important;\\n  border: solid 10px #F99830 !important;\\n}\\n\\n.backgroundItem {\\n  border: solid 0px #F99830;\\n  opacity: 0.5;\\n  transition: all 0.3s;\\n  cursor: pointer;\\n  height: 120px;\\n  background-size: cover !important;\\n}\\n\\n.backgroundItem:hover {\\n  transition: all 0.3s;\\n  opacity: 1 !important;\\n}\\n\\n.bash {\\n  background: #34495e;\\n  height: 310px;\\n  border-radius: 5px;\\n  top: 40px;\\n  display: absolute;\\n  color: #fff;\\n  padding: 10px;\\n  margin: 10px;\\n}\\n\\nmat-drawer-container {\\n  background: none !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL21haWxzZXJ2ZXIvbWFpbHNlcnZlci5jb21wb25lbnQuc2NzcyIsInNyYy9mcm9udGVuZC9jc3MvdmFycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBRUksWUFBWTtBQUhoQjs7QUFDQTtFQUtRLGNDUFM7RURRVCxtQkFBbUI7RUFDbkIsd0JBQXdCO0VBQ3hCLFVBQVU7QUFGbEI7O0FBTUE7RUFDSSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGNBQWM7QUFIbEI7O0FBTUE7RUFDSSxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHFDQUF3QztBQUg1Qzs7QUFNQTtFQUNJLHlCQzFCZTtFRDJCZixZQUFZO0VBQ1osb0JBQW9CO0VBQ3BCLGVBQWU7RUFDZixhQUFhO0VBQ2IsaUNBQWlDO0FBSHJDOztBQU1BO0VBQ0ksb0JBQW9CO0VBQ3BCLHFCQUFxQjtBQUh6Qjs7QUFNQTtFQUNJLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsV0FBVztFQUNYLGFBQWE7RUFDYixZQUFZO0FBSGhCOztBQU1BO0VBQ0ksMkJBQTJCO0FBSC9CIiwiZmlsZSI6InNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL21haWxzZXJ2ZXIvbWFpbHNlcnZlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJy4uLy4uLy4uL2Nzcy92YXJzLnNjc3MnO1xuXG5cbi5zdGVwQ29udGVudCB7XG4gICAgLy8gbWF4LXdpZHRoOiA4NTBweDtcbiAgICBtYXJnaW46IGF1dG87XG5cbiAgICAuc3RlcENvbnRlbnRUaXRsZSB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4O1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbn1cblxuLmJhY2tncm91bmRMaXN0IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDUsIDFmcik7XG4gICAgZ3JpZC1nYXA6IDEwcHg7XG59XG5cbi5zZWxlY3RlZCB7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogc29saWQgMTBweCAkc2Vjb25kYXJ5ICFpbXBvcnRhbnQ7XG59XG5cbi5iYWNrZ3JvdW5kSXRlbSB7XG4gICAgYm9yZGVyOiBzb2xpZCAwcHggJHNlY29uZGFyeTtcbiAgICBvcGFjaXR5OiAwLjU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xufVxuXG4uYmFja2dyb3VuZEl0ZW06aG92ZXIge1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbn1cblxuLmJhc2gge1xuICAgIGJhY2tncm91bmQ6ICMzNDQ5NWU7XG4gICAgaGVpZ2h0OiAzMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgdG9wOiA0MHB4O1xuICAgIGRpc3BsYXk6IGFic29sdXRlO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG5tYXQtZHJhd2VyLWNvbnRhaW5lciB7XG4gICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xufSIsIiRjb2xvci1tYWluOiAjNEY0RjRGOyAvLyBkZWZhdWx0IGNvbG9yIGluIGFwcGxpY2F0aW9uXG4kcHJpbWFyeTogIzEzNWY3ZjsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJHNlY29uZGFyeTogI0Y5OTgzMDsgLy8gbWFpbiBjb2xvciB0aGVtZSBvZiBhcHBsaWNhdGlvblxuJGFjY2VudDogIzAwNjg0MTsgLy8gYWNjZW50IGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uIChsaWtlIHN1Y2Nlc3MgYnV0dG9ucylcbiR3YXJuOiAjOGUzZTUyOyAvLyB3YXJuaW5nIGNvbG9yIHRoZW1lIG9mIGFwcGxpY2F0aW9uXG5cbi8vIFdBUk5JTkcgISBZT1UgTVVTVCBSRUNPTVBJTEFURSBtYWFyY2gtbWF0ZXJpYWwuc2NzcyBJRiBWQUxVRVMgQ0hBTkdFUyJdfQ== */\";","export default \"<mat-sidenav-container autosize class=\\\"maarch-container\\\">\\n    <mat-sidenav-content>\\n        <div class=\\\"bg-head\\\">\\n            <div class=\\\"bg-head-content\\\" [class.fullContainer]=\\\"appService.getViewMode()\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"container\\\" [class.fullContainer]=\\\"appService.getViewMode()\\\">\\n            <div class=\\\"container-content\\\" style=\\\"overflow: hidden;\\\">\\n                <mat-horizontal-stepper [@.disabled]=\\\"true\\\" *ngIf=\\\"!loading\\\" linear #stepper style=\\\"height: 100vh;overflow: auto;\\\" (selectionChange)=\\\"initStep($event)\\\">\\n                    <mat-step label=\\\"install\\\">\\n                        <ng-template matStepLabel>Installation</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-welcome #stepContent #appWelcome></app-welcome>\\n                            </div>\\n                            <button *ngIf=\\\"!authService.noInstall\\\" mat-fab [title]=\\\"'lang.home' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\" (click)=\\\"gotToLogin()\\\">\\n                                <mat-icon class=\\\"fas fa-home\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab matStepperNext [title]=\\\"'lang.next' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-right\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"appPrerequisite.getFormGroup()\\\">\\n                        <ng-template matStepLabel>{{'lang.prerequisite' | translate}}</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-prerequisite #appPrerequisite #stepContent></app-prerequisite>\\n                            </div>\\n                            <button mat-fab matStepperPrevious [title]=\\\"'lang.previous' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-left\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab matStepperNext [title]=\\\"'lang.next' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"primary\\\" [disabled]=\\\"!appPrerequisite.isValidStep()\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-right\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"appDatabase.getFormGroup()\\\">\\n                        <ng-template matStepLabel>{{'lang.database' | translate}}</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-database #appDatabase #stepContent (nextStep)=\\\"nextStep()\\\"></app-database>\\n                            </div>\\n                            <button mat-fab matStepperPrevious [title]=\\\"'lang.previous' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-left\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab matStepperNext [title]=\\\"'lang.next' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"primary\\\" [disabled]=\\\"!appDatabase.isValidStep()\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-right\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"appDocservers.getFormGroup()\\\">\\n                        <ng-template matStepLabel>{{'lang.docserver' | translate}}</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-docservers #appDocservers #stepContent (nextStep)=\\\"nextStep()\\\"></app-docservers>\\n                            </div>\\n                            <button mat-fab matStepperPrevious [title]=\\\"'lang.previous' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-left\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab matStepperNext [title]=\\\"'lang.next' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"primary\\\" [disabled]=\\\"!appDocservers.isValidStep()\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-right\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"appCustomization.getFormGroup()\\\">\\n                        <ng-template matStepLabel>{{'lang.customization' | translate}}</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-customization #appCustomization #stepContent [appDatabase]=\\\"appDatabase\\\" [appWelcome]=\\\"appWelcome\\\"></app-customization>\\n                            </div>\\n                            <button mat-fab matStepperPrevious [title]=\\\"'lang.previous' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-left\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab matStepperNext [title]=\\\"'lang.next' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"primary\\\" [disabled]=\\\"!appCustomization.isValidStep()\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-right\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"appUseradmin.getFormGroup()\\\">\\n                        <ng-template matStepLabel>{{'lang.userAdmin' | translate}}</ng-template>\\n                        <div class=\\\"stepContainer\\\">\\n                            <div class=\\\"stepContent\\\">\\n                                <app-useradmin #appUseradmin #stepContent (tiggerInstall)=\\\"endInstall()\\\"></app-useradmin>\\n                            </div>\\n                            <button mat-fab matStepperPrevious [title]=\\\"'lang.previous' | translate\\\" class=\\\"previousStepButton\\\" color=\\\"primary\\\">\\n                                <mat-icon class=\\\"fa fa-arrow-left\\\"></mat-icon>\\n                            </button>\\n                            <button mat-fab [title]=\\\"'lang.beginInstall' | translate\\\" class=\\\"nextStepButton\\\" color=\\\"accent\\\" [disabled]=\\\"!appUseradmin.isValidStep()\\\" (click)=\\\"endInstall()\\\">\\n                                <mat-icon class=\\\"fas fa-check-double\\\"></mat-icon>\\n                            </button>\\n                        </div>\\n                    </mat-step>\\n                    <ng-template matStepperIcon=\\\"edit\\\">\\n                        <mat-icon class=\\\"fa fa-check stepIcon\\\"></mat-icon>\\n                    </ng-template>\\n                \\n                    <ng-template matStepperIcon=\\\"done\\\">\\n                        <mat-icon class=\\\"fa fa-check stepIcon\\\"></mat-icon>\\n                    </ng-template>\\n                \\n                    <ng-template matStepperIcon=\\\"error\\\">\\n                        <mat-icon class=\\\"fa fa-times stepIcon\\\" style=\\\"color: red;font-size: 15px !important;\\\"></mat-icon>\\n                    </ng-template>\\n                </mat-horizontal-stepper>\\n            </div>\\n        </div>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\";","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\"><i class=\\\"fa fa-hdd\\\"></i> {{'lang.docserver' | translate}}</h2>\\n    <div class=\\\"alert-message alert-message-info\\\" role=\\\"alert\\\" style=\\\"margin-top: 30px;min-width: 100%;\\\">\\n        {{'lang.stepDocserver_desc' | translate}}\\n    </div>\\n    <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"width: 850px;margin: auto;\\\">\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"color: initial;\\\">\\n            <mat-label>{{'lang.docserverPath' | translate}}</mat-label>\\n            <input matInput formControlName=\\\"docserversPath\\\">\\n            <span matSuffix>/__CUSTOM_iD__/</span>\\n        </mat-form-field>\\n        <div style=\\\"text-align: center;\\\">\\n            <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"checkAvailability()\\\" [disabled]=\\\"!this.stepFormGroup.controls['docserversPath'].valid\\\">{{'lang.checkInformations' | translate}}</button>\\n        </div>\\n    </form>\\n</div>\";","export default \".step {\\n  opacity: 0.5;\\n  transition: all 0.2s;\\n}\\n\\n.step .stepLabel {\\n  transition: all 0.2s;\\n}\\n\\n.currentStep {\\n  opacity: 1;\\n  transition: all 0.2s;\\n}\\n\\n.currentStep .stepLabel {\\n  font-size: 150%;\\n  transition: all 0.2s;\\n}\\n\\n.endStep {\\n  opacity: 1;\\n}\\n\\n.mat-expansion-panel {\\n  box-shadow: none;\\n}\\n\\n.launch-action {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mcm9udGVuZC9hcHAvaW5zdGFsbGVyL2luc3RhbGwtYWN0aW9uL2luc3RhbGwtYWN0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLG9CQUFvQjtBQUN4Qjs7QUFIQTtFQUtRLG9CQUFvQjtBQUU1Qjs7QUFFQTtFQUNJLFVBQVU7RUFPVixvQkFBb0I7QUFMeEI7O0FBSEE7RUFJUSxlQUFlO0VBQ2Ysb0JBQW9CO0FBRzVCOztBQUdBO0VBQ0ksVUFBVTtBQUFkOztBQUdBO0VBQ0ksZ0JBQWdCO0FBQXBCOztBQUdBO0VBQ0ksYUFBYTtFQUNiLHNCQUFzQjtBQUExQiIsImZpbGUiOiJzcmMvZnJvbnRlbmQvYXBwL2luc3RhbGxlci9pbnN0YWxsLWFjdGlvbi9pbnN0YWxsLWFjdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdGVwIHtcbiAgICBvcGFjaXR5OiAwLjU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG5cbiAgICAuc3RlcExhYmVsIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgfVxufVxuXG4uY3VycmVudFN0ZXAge1xuICAgIG9wYWNpdHk6IDE7XG5cbiAgICAuc3RlcExhYmVsIHtcbiAgICAgICAgZm9udC1zaXplOiAxNTAlO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICB9XG5cbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbn1cblxuLmVuZFN0ZXAge1xuICAgIG9wYWNpdHk6IDE7XG59XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xufVxuXG4ubGF1bmNoLWFjdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSJdfQ== */\";","export default \"<div class=\\\"stepContent\\\">\\n    <h2 class=\\\"stepContentTitle\\\">{{'lang.welcomeApp' | translate:{value1: appVersion} }} !</h2>\\n    <div style=\\\"text-align: center;\\\">\\n        <mat-icon class=\\\"maarchLogoFull\\\" svgIcon=\\\"maarchLogoFull\\\"></mat-icon>\\n    </div>\\n    <form [formGroup]=\\\"stepFormGroup\\\" style=\\\"width: 850px;margin: auto;\\\">\\n        <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"never\\\">\\n            <mat-label>{{'lang.chooseAppLanguage' | translate}} : </mat-label>\\n            <mat-select formControlName=\\\"lang\\\"  (selectionChange)=\\\"changeLang($event.value)\\\" required>\\n                <mat-option *ngFor=\\\"let language of langs\\\" [value]=\\\"language\\\">\\n                    {{'lang.' + language + 'Full' | translate}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </form>\\n    <mat-divider></mat-divider>\\n    <ng-container *ngIf=\\\"customs.length > 0\\\">\\n        <mat-list>\\n            <div mat-subheader>{{'lang.instancesList' | translate}} :\\n            </div>\\n            <mat-list-item *ngFor=\\\"let custom of customs\\\">\\n                <mat-icon mat-list-icon color=\\\"primary\\\" class=\\\"fas fa-box-open\\\"></mat-icon>\\n                <div mat-line>{{custom.label}} <small style=\\\"color: #666\\\">{{custom.id}}</small></div>\\n            </mat-list-item>\\n        </mat-list>\\n        <mat-divider></mat-divider>\\n    </ng-container>\\n    <mat-list>\\n        <div mat-subheader>{{'lang.installDescription' | translate}} :\\n        </div>\\n        <mat-list-item *ngFor=\\\"let step of steps\\\">\\n            <mat-icon mat-list-icon color=\\\"primary\\\" [class]=\\\"step.icon\\\"></mat-icon>\\n            <div mat-line>{{step.desc | translate}}</div>\\n        </mat-list-item>\\n    </mat-list>\\n    <mat-divider></mat-divider>\\n    <p>\\n        {{'lang.externalInfoSite' | translate}} :\\n    </p>\\n    <a mat-raised-button color=\\\"primary\\\" href=\\\"https://community.maarch.org/\\\" target=\\\"_blank\\\">\\n        community.maarch.org\\n    </a>\\n    {{'lang.or' | translate}}\\n    <a mat-raised-button color=\\\"primary\\\" href=\\\"http://www.maarch.com\\\" target=\\\"_blank\\\">\\n        www.maarch.com\\n    </a>\\n    <p style=\\\"font-style: italic;padding-top: 30px;text-align: right;\\\" [innerHTML]=\\\"'lang.maarchLicenceInstall' | translate\\\"></p>\\n</div>\";"]}