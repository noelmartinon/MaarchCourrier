import { AfterViewInit, ViewContainerRef, TemplateRef, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import { JoyrideStepsContainerService } from '../services/joyride-steps-container.service';
import { Router } from '@angular/router';
import { DomRefService } from '../services/dom.service';
import { TemplatesService } from '../services/templates.service';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare const NO_POSITION = "NO_POSITION";
export declare class JoyrideDirective implements AfterViewInit, OnChanges, OnDestroy {
    private readonly joyrideStepsContainer;
    private viewContainerRef;
    private readonly domService;
    private readonly router;
    private readonly templateService;
    private platformId;
    name: string;
    nextStep?: string;
    title?: string | Observable<string>;
    text?: string | Observable<string>;
    stepPosition?: string;
    stepContent?: TemplateRef<any>;
    stepContentParams?: Object;
    prevTemplate?: TemplateRef<any>;
    nextTemplate?: TemplateRef<any>;
    doneTemplate?: TemplateRef<any>;
    counterTemplate?: TemplateRef<any>;
    prev?: EventEmitter<any>;
    next?: EventEmitter<any>;
    done?: EventEmitter<any>;
    private windowRef;
    private step;
    private subscriptions;
    constructor(joyrideStepsContainer: JoyrideStepsContainerService, viewContainerRef: ViewContainerRef, domService: DomRefService, router: Router, templateService: TemplatesService, platformId: Object);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private isElementFixed;
    private setAsyncFields;
    private isAncestorsFixed;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<JoyrideDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<JoyrideDirective, "joyrideStep, [joyrideStep]", never, { "stepPosition": "stepPosition"; "name": "joyrideStep"; "nextStep": "nextStep"; "title": "title"; "text": "text"; "stepContent": "stepContent"; "stepContentParams": "stepContentParams"; "prevTemplate": "prevTemplate"; "nextTemplate": "nextTemplate"; "doneTemplate": "doneTemplate"; "counterTemplate": "counterTemplate"; }, { "prev": "prev"; "next": "next"; "done": "done"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam95cmlkZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiam95cmlkZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBWaWV3Q29udGFpbmVyUmVmLCBUZW1wbGF0ZVJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBKb3lyaWRlU3RlcHNDb250YWluZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvam95cmlkZS1zdGVwcy1jb250YWluZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IERvbVJlZlNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9kb20uc2VydmljZSc7XHJcbmltcG9ydCB7IFRlbXBsYXRlc1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy90ZW1wbGF0ZXMuc2VydmljZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuZXhwb3J0IGRlY2xhcmUgY29uc3QgTk9fUE9TSVRJT04gPSBcIk5PX1BPU0lUSU9OXCI7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEpveXJpZGVEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IGpveXJpZGVTdGVwc0NvbnRhaW5lcjtcclxuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgZG9tU2VydmljZTtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgcm91dGVyO1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSB0ZW1wbGF0ZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBuZXh0U3RlcD86IHN0cmluZztcclxuICAgIHRpdGxlPzogc3RyaW5nIHwgT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG4gICAgdGV4dD86IHN0cmluZyB8IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAgIHN0ZXBQb3NpdGlvbj86IHN0cmluZztcclxuICAgIHN0ZXBDb250ZW50PzogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHN0ZXBDb250ZW50UGFyYW1zPzogT2JqZWN0O1xyXG4gICAgcHJldlRlbXBsYXRlPzogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIG5leHRUZW1wbGF0ZT86IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBkb25lVGVtcGxhdGU/OiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgY291bnRlclRlbXBsYXRlPzogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHByZXY/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIG5leHQ/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGRvbmU/OiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIHByaXZhdGUgd2luZG93UmVmO1xyXG4gICAgcHJpdmF0ZSBzdGVwO1xyXG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zO1xyXG4gICAgY29uc3RydWN0b3Ioam95cmlkZVN0ZXBzQ29udGFpbmVyOiBKb3lyaWRlU3RlcHNDb250YWluZXJTZXJ2aWNlLCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBkb21TZXJ2aWNlOiBEb21SZWZTZXJ2aWNlLCByb3V0ZXI6IFJvdXRlciwgdGVtcGxhdGVTZXJ2aWNlOiBUZW1wbGF0ZXNTZXJ2aWNlLCBwbGF0Zm9ybUlkOiBPYmplY3QpO1xyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIHByaXZhdGUgaXNFbGVtZW50Rml4ZWQ7XHJcbiAgICBwcml2YXRlIHNldEFzeW5jRmllbGRzO1xyXG4gICAgcHJpdmF0ZSBpc0FuY2VzdG9yc0ZpeGVkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG4iXX0=