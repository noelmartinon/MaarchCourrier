import { __decorate } from "tslib";
import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";
import { JoyrideDirective } from './directives/joyride.directive';
import { JoyrideService } from './services/joyride.service';
import { JoyrideStepComponent } from "./components/step/joyride-step.component";
import { JoyrideButtonComponent } from "./components/button/button.component";
import { JoyrideCloseButtonComponent } from "./components/close-button/close-button.component";
import { JoyrideStepService } from "./services/joyride-step.service";
import { JoyrideBackdropService } from "./services/joyride-backdrop.service";
import { JoyrideArrowComponent } from "./components/arrow/arrow.component";
import { EventListenerService } from "./services/event-listener.service";
import { JoyrideStepsContainerService } from "./services/joyride-steps-container.service";
import { DocumentService } from "./services/document.service";
import { JoyrideOptionsService } from './services/joyride-options.service';
import { StepDrawerService } from './services/step-drawer.service';
import { DomRefService } from './services/dom.service';
import { LoggerService } from './services/logger.service';
import { RouterModule } from "@angular/router";
import { TemplatesService } from "./services/templates.service";
export var routerModuleForChild = RouterModule.forChild([]);
var JoyrideModule = /** @class */ (function () {
    function JoyrideModule() {
    }
    JoyrideModule_1 = JoyrideModule;
    JoyrideModule.forRoot = function () {
        return {
            ngModule: JoyrideModule_1,
            providers: [
                JoyrideService,
                JoyrideStepService,
                JoyrideStepsContainerService,
                JoyrideBackdropService,
                EventListenerService,
                DocumentService,
                JoyrideOptionsService,
                StepDrawerService,
                DomRefService,
                LoggerService,
                TemplatesService
            ]
        };
    };
    JoyrideModule.forChild = function () {
        return {
            ngModule: JoyrideModule_1,
            providers: []
        };
    };
    var JoyrideModule_1;
    JoyrideModule = JoyrideModule_1 = __decorate([
        NgModule({
            imports: [CommonModule, routerModuleForChild],
            declarations: [
                JoyrideDirective,
                JoyrideStepComponent,
                JoyrideArrowComponent,
                JoyrideButtonComponent,
                JoyrideCloseButtonComponent
            ],
            entryComponents: [JoyrideStepComponent],
            exports: [
                JoyrideDirective
            ]
        })
    ], JoyrideModule);
    return JoyrideModule;
}());
export { JoyrideModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam95cmlkZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtam95cmlkZS8iLCJzb3VyY2VzIjpbImxpYi9qb3lyaWRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMvRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMxRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFaEUsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQTZCLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7QUFnQnhGO0lBQUE7SUF5QkEsQ0FBQztzQkF6QlksYUFBYTtJQUNmLHFCQUFPLEdBQWQ7UUFDSSxPQUFPO1lBQ0gsUUFBUSxFQUFFLGVBQWE7WUFDdkIsU0FBUyxFQUFFO2dCQUNQLGNBQWM7Z0JBQ2Qsa0JBQWtCO2dCQUNsQiw0QkFBNEI7Z0JBQzVCLHNCQUFzQjtnQkFDdEIsb0JBQW9CO2dCQUNwQixlQUFlO2dCQUNmLHFCQUFxQjtnQkFDckIsaUJBQWlCO2dCQUNqQixhQUFhO2dCQUNiLGFBQWE7Z0JBQ2IsZ0JBQWdCO2FBQ25CO1NBQ0osQ0FBQTtJQUNMLENBQUM7SUFDTSxzQkFBUSxHQUFmO1FBQ0ksT0FBTztZQUNILFFBQVEsRUFBRSxlQUFhO1lBQ3ZCLFNBQVMsRUFBRSxFQUFFO1NBQ2hCLENBQUE7SUFDTCxDQUFDOztJQXhCUSxhQUFhO1FBZHpCLFFBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsQ0FBQztZQUM3QyxZQUFZLEVBQUU7Z0JBQ1YsZ0JBQWdCO2dCQUNoQixvQkFBb0I7Z0JBQ3BCLHFCQUFxQjtnQkFDckIsc0JBQXNCO2dCQUN0QiwyQkFBMkI7YUFDOUI7WUFDRCxlQUFlLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztZQUN2QyxPQUFPLEVBQUU7Z0JBQ0wsZ0JBQWdCO2FBQ25CO1NBQ0osQ0FBQztPQUNXLGFBQWEsQ0F5QnpCO0lBQUQsb0JBQUM7Q0FBQSxBQXpCRCxJQXlCQztTQXpCWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHsgSm95cmlkZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9qb3lyaWRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBKb3lyaWRlU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvam95cmlkZS5zZXJ2aWNlJztcbmltcG9ydCB7IEpveXJpZGVTdGVwQ29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9zdGVwL2pveXJpZGUtc3RlcC5jb21wb25lbnRcIjtcbmltcG9ydCB7IEpveXJpZGVCdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2J1dHRvbi9idXR0b24uY29tcG9uZW50XCI7XG5pbXBvcnQgeyBKb3lyaWRlQ2xvc2VCdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRzL2Nsb3NlLWJ1dHRvbi9jbG9zZS1idXR0b24uY29tcG9uZW50XCI7XG5pbXBvcnQgeyBKb3lyaWRlU3RlcFNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9qb3lyaWRlLXN0ZXAuc2VydmljZVwiO1xuaW1wb3J0IHsgSm95cmlkZUJhY2tkcm9wU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL2pveXJpZGUtYmFja2Ryb3Auc2VydmljZVwiO1xuaW1wb3J0IHsgSm95cmlkZUFycm93Q29tcG9uZW50IH0gZnJvbSBcIi4vY29tcG9uZW50cy9hcnJvdy9hcnJvdy5jb21wb25lbnRcIjtcbmltcG9ydCB7IEV2ZW50TGlzdGVuZXJTZXJ2aWNlIH0gZnJvbSBcIi4vc2VydmljZXMvZXZlbnQtbGlzdGVuZXIuc2VydmljZVwiO1xuaW1wb3J0IHsgSm95cmlkZVN0ZXBzQ29udGFpbmVyU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL2pveXJpZGUtc3RlcHMtY29udGFpbmVyLnNlcnZpY2VcIjtcbmltcG9ydCB7IERvY3VtZW50U2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL2RvY3VtZW50LnNlcnZpY2VcIjtcbmltcG9ydCB7IEpveXJpZGVPcHRpb25zU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvam95cmlkZS1vcHRpb25zLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcERyYXdlclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3N0ZXAtZHJhd2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRG9tUmVmU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZG9tLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9nZ2VyU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvbG9nZ2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgVGVtcGxhdGVzU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VzL3RlbXBsYXRlcy5zZXJ2aWNlXCI7XG5cbmV4cG9ydCBjb25zdCByb3V0ZXJNb2R1bGVGb3JDaGlsZDogTW9kdWxlV2l0aFByb3ZpZGVyczxhbnk+ID0gUm91dGVyTW9kdWxlLmZvckNoaWxkKFtdKTtcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCByb3V0ZXJNb2R1bGVGb3JDaGlsZF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIEpveXJpZGVEaXJlY3RpdmUsXG4gICAgICAgIEpveXJpZGVTdGVwQ29tcG9uZW50LFxuICAgICAgICBKb3lyaWRlQXJyb3dDb21wb25lbnQsXG4gICAgICAgIEpveXJpZGVCdXR0b25Db21wb25lbnQsXG4gICAgICAgIEpveXJpZGVDbG9zZUJ1dHRvbkNvbXBvbmVudFxuICAgIF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbSm95cmlkZVN0ZXBDb21wb25lbnRdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgSm95cmlkZURpcmVjdGl2ZVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgSm95cmlkZU1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxKb3lyaWRlTW9kdWxlPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogSm95cmlkZU1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIEpveXJpZGVTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIEpveXJpZGVTdGVwU2VydmljZSxcbiAgICAgICAgICAgICAgICBKb3lyaWRlU3RlcHNDb250YWluZXJTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIEpveXJpZGVCYWNrZHJvcFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgRXZlbnRMaXN0ZW5lclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgRG9jdW1lbnRTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIEpveXJpZGVPcHRpb25zU2VydmljZSxcbiAgICAgICAgICAgICAgICBTdGVwRHJhd2VyU2VydmljZSxcbiAgICAgICAgICAgICAgICBEb21SZWZTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIExvZ2dlclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgVGVtcGxhdGVzU2VydmljZVxuICAgICAgICAgICAgXVxuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBmb3JDaGlsZCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEpveXJpZGVNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBKb3lyaWRlTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXVxuICAgICAgICB9XG4gICAgfVxufVxuIl19