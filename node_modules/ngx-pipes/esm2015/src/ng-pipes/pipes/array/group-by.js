import { Pipe } from '@angular/core';
import { extractDeepPropertyByMapKey, isFunction } from '../helpers/helpers';
export class GroupByPipe {
    transform(input, discriminator = [], delimiter = '|') {
        if (!Array.isArray(input)) {
            return input;
        }
        return this.groupBy(input, discriminator, delimiter);
    }
    groupBy(list, discriminator, delimiter) {
        return list.reduce((acc, payload) => {
            const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);
            acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];
            return acc;
        }, {});
    }
    extractKeyByDiscriminator(discriminator, payload, delimiter) {
        if (isFunction(discriminator)) {
            return discriminator(payload);
        }
        if (Array.isArray(discriminator)) {
            return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);
        }
        return extractDeepPropertyByMapKey(payload, discriminator);
    }
}
GroupByPipe.decorators = [
    { type: Pipe, args: [{ name: 'groupBy' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtYnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbmctcGlwZXMvcGlwZXMvYXJyYXkvZ3JvdXAtYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRzdFLE1BQU0sT0FBTyxXQUFXO0lBQ3RCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsZ0JBQXFCLEVBQUUsRUFBRSxZQUFvQixHQUFHO1FBQ3BFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3pCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRU8sT0FBTyxDQUFDLElBQVcsRUFBRSxhQUFrQixFQUFFLFNBQWlCO1FBQ2hFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQVEsRUFBRSxPQUFlLEVBQUUsRUFBRTtZQUMvQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztZQUU5RSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7WUFFNUUsT0FBTyxHQUFHLENBQUM7UUFDYixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDVCxDQUFDO0lBRU8seUJBQXlCLENBQUMsYUFBa0IsRUFBRSxPQUFlLEVBQUUsU0FBaUI7UUFDdEYsSUFBSSxVQUFVLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDN0IsT0FBa0IsYUFBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzNDO1FBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ2hDLE9BQU8sYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLDJCQUEyQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUN4RjtRQUVELE9BQU8sMkJBQTJCLENBQUMsT0FBTyxFQUFVLGFBQWEsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7OztZQTlCRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZXh0cmFjdERlZXBQcm9wZXJ0eUJ5TWFwS2V5LCBpc0Z1bmN0aW9uIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcblxuQFBpcGUoeyBuYW1lOiAnZ3JvdXBCeScgfSlcbmV4cG9ydCBjbGFzcyBHcm91cEJ5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0oaW5wdXQ6IGFueSwgZGlzY3JpbWluYXRvcjogYW55ID0gW10sIGRlbGltaXRlcjogc3RyaW5nID0gJ3wnKTogYW55IHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZ3JvdXBCeShpbnB1dCwgZGlzY3JpbWluYXRvciwgZGVsaW1pdGVyKTtcbiAgfVxuXG4gIHByaXZhdGUgZ3JvdXBCeShsaXN0OiBhbnlbXSwgZGlzY3JpbWluYXRvcjogYW55LCBkZWxpbWl0ZXI6IHN0cmluZykge1xuICAgIHJldHVybiBsaXN0LnJlZHVjZSgoYWNjOiBhbnksIHBheWxvYWQ6IHN0cmluZykgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gdGhpcy5leHRyYWN0S2V5QnlEaXNjcmltaW5hdG9yKGRpc2NyaW1pbmF0b3IsIHBheWxvYWQsIGRlbGltaXRlcik7XG5cbiAgICAgIGFjY1trZXldID0gQXJyYXkuaXNBcnJheShhY2Nba2V5XSkgPyBhY2Nba2V5XS5jb25jYXQoW3BheWxvYWRdKSA6IFtwYXlsb2FkXTtcblxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG4gIH1cblxuICBwcml2YXRlIGV4dHJhY3RLZXlCeURpc2NyaW1pbmF0b3IoZGlzY3JpbWluYXRvcjogYW55LCBwYXlsb2FkOiBzdHJpbmcsIGRlbGltaXRlcjogc3RyaW5nKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24oZGlzY3JpbWluYXRvcikpIHtcbiAgICAgIHJldHVybiAoPEZ1bmN0aW9uPmRpc2NyaW1pbmF0b3IpKHBheWxvYWQpO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KGRpc2NyaW1pbmF0b3IpKSB7XG4gICAgICByZXR1cm4gZGlzY3JpbWluYXRvci5tYXAoayA9PiBleHRyYWN0RGVlcFByb3BlcnR5QnlNYXBLZXkocGF5bG9hZCwgaykpLmpvaW4oZGVsaW1pdGVyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXh0cmFjdERlZXBQcm9wZXJ0eUJ5TWFwS2V5KHBheWxvYWQsIDxzdHJpbmc+ZGlzY3JpbWluYXRvcik7XG4gIH1cbn1cbiJdfQ==