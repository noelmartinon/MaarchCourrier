import { __decorate } from "tslib";
import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
let BytesPipe = class BytesPipe {
    constructor() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    transform(value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];
        const calc = value / (format.max / 1024);
        const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return `${num} ${format.type}`;
    }
};
BytesPipe = __decorate([
    Pipe({ name: 'bytes' })
], BytesPipe);
export { BytesPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvbmctcGlwZXMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHakYsSUFBYSxTQUFTLEdBQXRCLE1BQWEsU0FBUztJQUF0QjtRQUNVLGVBQVUsR0FBeUM7WUFDekQsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7WUFDeEIsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDNUIsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDL0IsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7U0FDbEMsQ0FBQztJQWFKLENBQUM7SUFYQyxTQUFTLENBQUMsS0FBYSxFQUFFLFNBQThCO1FBQ3JELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUVELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZHLE1BQU0sSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFNUUsT0FBTyxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQztDQUNGLENBQUE7QUFuQlksU0FBUztJQURyQixJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7R0FDWCxTQUFTLENBbUJyQjtTQW5CWSxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYXBwbHlQcmVjaXNpb24sIGlzTnVtYmVyRmluaXRlLCBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL2hlbHBlcnMvaGVscGVycyc7XG5cbkBQaXBlKHsgbmFtZTogJ2J5dGVzJyB9KVxuZXhwb3J0IGNsYXNzIEJ5dGVzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBwcml2YXRlIGRpY3Rpb25hcnk6IEFycmF5PHsgbWF4OiBudW1iZXI7IHR5cGU6IHN0cmluZyB9PiA9IFtcbiAgICB7IG1heDogMTAyNCwgdHlwZTogJ0InIH0sXG4gICAgeyBtYXg6IDEwNDg1NzYsIHR5cGU6ICdLQicgfSxcbiAgICB7IG1heDogMTA3Mzc0MTgyNCwgdHlwZTogJ01CJyB9LFxuICAgIHsgbWF4OiAxLjA5OTUxMTZlMTIsIHR5cGU6ICdHQicgfSxcbiAgXTtcblxuICB0cmFuc2Zvcm0odmFsdWU6IG51bWJlciwgcHJlY2lzaW9uPzogbnVtYmVyIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgbnVtYmVyIHtcbiAgICBpZiAoIWlzTnVtYmVyRmluaXRlKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIE5hTjtcbiAgICB9XG5cbiAgICBjb25zdCBmb3JtYXQgPSB0aGlzLmRpY3Rpb25hcnkuZmluZChkID0+IHZhbHVlIDwgZC5tYXgpIHx8IHRoaXMuZGljdGlvbmFyeVt0aGlzLmRpY3Rpb25hcnkubGVuZ3RoIC0gMV07XG4gICAgY29uc3QgY2FsYyA9IHZhbHVlIC8gKGZvcm1hdC5tYXggLyAxMDI0KTtcbiAgICBjb25zdCBudW0gPSBpc1VuZGVmaW5lZChwcmVjaXNpb24pID8gY2FsYyA6IGFwcGx5UHJlY2lzaW9uKGNhbGMsIHByZWNpc2lvbik7XG5cbiAgICByZXR1cm4gYCR7bnVtfSAke2Zvcm1hdC50eXBlfWA7XG4gIH1cbn1cbiJdfQ==