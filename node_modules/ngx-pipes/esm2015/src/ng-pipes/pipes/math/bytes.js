import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
export class BytesPipe {
    constructor() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    transform(value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];
        const calc = value / (format.max / 1024);
        const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return `${num} ${format.type}`;
    }
}
BytesPipe.decorators = [
    { type: Pipe, args: [{ name: 'bytes' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbmctcGlwZXMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsY0FBYyxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUdqRixNQUFNLE9BQU8sU0FBUztJQUR0QjtRQUVVLGVBQVUsR0FBeUM7WUFDekQsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7WUFDeEIsRUFBRSxHQUFHLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDNUIsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDL0IsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7U0FDbEMsQ0FBQztJQWFKLENBQUM7SUFYQyxTQUFTLENBQUMsS0FBYSxFQUFFLFNBQThCO1FBQ3JELElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDMUIsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUVELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZHLE1BQU0sSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDekMsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFFNUUsT0FBTyxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDakMsQ0FBQzs7O1lBbkJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhcHBseVByZWNpc2lvbiwgaXNOdW1iZXJGaW5pdGUsIGlzVW5kZWZpbmVkIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJztcblxuQFBpcGUoeyBuYW1lOiAnYnl0ZXMnIH0pXG5leHBvcnQgY2xhc3MgQnl0ZXNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHByaXZhdGUgZGljdGlvbmFyeTogQXJyYXk8eyBtYXg6IG51bWJlcjsgdHlwZTogc3RyaW5nIH0+ID0gW1xuICAgIHsgbWF4OiAxMDI0LCB0eXBlOiAnQicgfSxcbiAgICB7IG1heDogMTA0ODU3NiwgdHlwZTogJ0tCJyB9LFxuICAgIHsgbWF4OiAxMDczNzQxODI0LCB0eXBlOiAnTUInIH0sXG4gICAgeyBtYXg6IDEuMDk5NTExNmUxMiwgdHlwZTogJ0dCJyB9LFxuICBdO1xuXG4gIHRyYW5zZm9ybSh2YWx1ZTogbnVtYmVyLCBwcmVjaXNpb24/OiBudW1iZXIgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCBudW1iZXIge1xuICAgIGlmICghaXNOdW1iZXJGaW5pdGUodmFsdWUpKSB7XG4gICAgICByZXR1cm4gTmFOO1xuICAgIH1cblxuICAgIGNvbnN0IGZvcm1hdCA9IHRoaXMuZGljdGlvbmFyeS5maW5kKGQgPT4gdmFsdWUgPCBkLm1heCkgfHwgdGhpcy5kaWN0aW9uYXJ5W3RoaXMuZGljdGlvbmFyeS5sZW5ndGggLSAxXTtcbiAgICBjb25zdCBjYWxjID0gdmFsdWUgLyAoZm9ybWF0Lm1heCAvIDEwMjQpO1xuICAgIGNvbnN0IG51bSA9IGlzVW5kZWZpbmVkKHByZWNpc2lvbikgPyBjYWxjIDogYXBwbHlQcmVjaXNpb24oY2FsYywgcHJlY2lzaW9uKTtcblxuICAgIHJldHVybiBgJHtudW19ICR7Zm9ybWF0LnR5cGV9YDtcbiAgfVxufVxuIl19