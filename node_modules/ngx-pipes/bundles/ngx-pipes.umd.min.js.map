{"version":3,"sources":["../../src/ng-pipes/pipes/array/diff.ts","../../src/ng-pipes/pipes/array/initial.ts","../../src/ng-pipes/pipes/array/flatten.ts","../../src/ng-pipes/pipes/array/intersection.ts","../../node_modules/tslib/tslib.es6.js","../../src/ng-pipes/pipes/helpers/helpers.ts","../../src/ng-pipes/pipes/array/reverse.ts","../../src/ng-pipes/pipes/array/tail.ts","../../src/ng-pipes/pipes/array/truthify.ts","../../src/ng-pipes/pipes/array/union.ts","../../src/ng-pipes/pipes/array/unique.ts","../../src/ng-pipes/pipes/array/without.ts","../../src/ng-pipes/pipes/array/pluck.ts","../../src/ng-pipes/pipes/array/shuffle.ts","../../src/ng-pipes/pipes/array/every.ts","../../src/ng-pipes/pipes/array/some.ts","../../src/ng-pipes/pipes/array/sample.ts","../../src/ng-pipes/pipes/array/group-by.ts","../../src/ng-pipes/pipes/array/filter-by.ts","../../src/ng-pipes/pipes/array/order-by.ts","../../src/ng-pipes/pipes/array/group-by-impure.ts","../../src/ng-pipes/pipes/array/filter-by-impure.ts","../../src/ng-pipes/pipes/array/order-by-impure.ts","../../src/ng-pipes/pipes/array/range.ts","../../src/ng-pipes/pipes/array/chunk.ts","../../src/ng-pipes/pipes/array/from-pairs.ts","../../src/ng-pipes/pipes/array/index.ts","../../src/ng-pipes/pipes/object/keys.ts","../../src/ng-pipes/pipes/object/values.ts","../../src/ng-pipes/pipes/object/pairs.ts","../../src/ng-pipes/pipes/object/pick.ts","../../src/ng-pipes/pipes/object/omit.ts","../../src/ng-pipes/pipes/object/invert.ts","../../src/ng-pipes/pipes/object/invert-by.ts","../../src/ng-pipes/pipes/object/diff-obj.ts","../../src/ng-pipes/pipes/object/index.ts","../../src/ng-pipes/pipes/string/a-or-an.ts","../../src/ng-pipes/pipes/string/ucwords.ts","../../src/ng-pipes/pipes/string/ltrim.ts","../../src/ng-pipes/pipes/string/repeat.ts","../../src/ng-pipes/pipes/string/rtrim.ts","../../src/ng-pipes/pipes/string/scan.ts","../../src/ng-pipes/pipes/string/shorten.ts","../../src/ng-pipes/pipes/string/strip-tags.ts","../../src/ng-pipes/pipes/string/trim.ts","../../src/ng-pipes/pipes/string/ucfirst.ts","../../src/ng-pipes/pipes/string/slugify.ts","../../src/ng-pipes/pipes/string/camelize.ts","../../src/ng-pipes/pipes/string/latinise.ts","../../src/ng-pipes/pipes/string/lines.ts","../../src/ng-pipes/pipes/string/underscore.ts","../../src/ng-pipes/pipes/string/match.ts","../../src/ng-pipes/pipes/string/test.ts","../../src/ng-pipes/pipes/string/lpad.ts","../../src/ng-pipes/pipes/string/rpad.ts","../../src/ng-pipes/pipes/string/pluralize.ts","../../src/ng-pipes/pipes/string/wrap.ts","../../src/ng-pipes/pipes/string/index.ts","../../src/ng-pipes/pipes/math/max.ts","../../src/ng-pipes/pipes/math/min.ts","../../src/ng-pipes/pipes/math/percentage.ts","../../src/ng-pipes/pipes/math/sum.ts","../../src/ng-pipes/pipes/math/floor.ts","../../src/ng-pipes/pipes/math/round.ts","../../src/ng-pipes/pipes/math/sqrt.ts","../../src/ng-pipes/pipes/math/pow.ts","../../src/ng-pipes/pipes/math/ceil.ts","../../src/ng-pipes/pipes/math/degrees.ts","../../src/ng-pipes/pipes/math/bytes.ts","../../src/ng-pipes/pipes/math/radians.ts","../../src/ng-pipes/pipes/math/index.ts","../../src/ng-pipes/pipes/boolean/is-defined.ts","../../src/ng-pipes/pipes/boolean/is-null.ts","../../src/ng-pipes/pipes/boolean/is-undefined.ts","../../src/ng-pipes/pipes/boolean/is-string.ts","../../src/ng-pipes/pipes/boolean/is-function.ts","../../src/ng-pipes/pipes/boolean/is-number.ts","../../src/ng-pipes/pipes/boolean/is-array.ts","../../src/ng-pipes/pipes/boolean/is-object.ts","../../src/ng-pipes/pipes/boolean/is-greater-equal-than.ts","../../src/ng-pipes/pipes/boolean/is-greater-than.ts","../../src/ng-pipes/pipes/boolean/is-less-equal-than.ts","../../src/ng-pipes/pipes/boolean/is-equal-to.ts","../../src/ng-pipes/pipes/boolean/is-not-equal-to.ts","../../src/ng-pipes/pipes/boolean/is-identical-to.ts","../../src/ng-pipes/pipes/boolean/is-not-identical-to.ts","../../src/ng-pipes/pipes/boolean/is-less-than.ts","../../src/ng-pipes/pipes/boolean/index.ts","../../src/ng-pipes/pipes/date/time-ago.ts","../../src/ng-pipes/pipes/date/index.ts","../../src/ng-pipes/ng-pipes.module.ts"],"names":["DiffPipe","prototype","transform","input","args","_i","arguments","length","Array","isArray","reduce","d","c","filter","e","indexOf","Pipe","name","InitialPipe","num","slice","FlattenPipe","shallow","concat","apply","this","flatten","array","_this","arr","elm","IntersectionPipe","n","extendStatics","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__read","o","m","Symbol","iterator","r","i","call","ar","next","done","push","value","error","__spread","isUndefined","isFunction","isNumber","isString","isObject","isNumberFinite","isFinite","isVowel","letter","ucFirst","text","_a","split","part","toLowerCase","map","word","toUpperCase","join","applyPrecision","precision","Math","round","tho","pow","extractDeepPropertyByMapKey","obj","keys","head","shift","prop","key","undefined","getKeysTwoObjects","other","index","ReversePipe","reverse","TailPipe","TrurthifyPipe","UnionPipe","newArr","currArr","noDupArr","curr","UniquePipe","propertyName","uniques","JSON","stringify","WithoutPipe","PluckPipe","pure","ShufflePipe","shuffled","j","floor","random","EveryPipe","predicate","every","SomePipe","some","SamplePipe","len","sample","tmp","l","splice","GroupByPipe","discriminator","delimiter","groupBy","list","acc","payload","extractKeyByDiscriminator","k","FilterByPipe","props","search","strict","terms","String","term","tail","pop","extractDeepPropertyByParentMapKey","parent","str","strValue","OrderByPipe","config","out","sort","a","extractFromConfig","asc","pos","orderCompare","sign","simpleSort","bind","localeCompare","first","second","substr","replace","GroupByImpurePipe","_super","FilterByImpurePipe","OrderByImpurePipe","RangePipe","start","count","step","fill","v","ChunkPipe","size","chunk","ceil","_","begin","FromPairsPipe","val","ARRAY_PIPES","NgModule","declarations","imports","exports","KeysPipe","ValuesPipe","PairsPipe","entries","PickPipe","assign","OmitPipe","InvertPipe","InvertByPipe","cb","DiffObjPipe","original","diff","isDeepEqual","OBJECT_PIPES","AorAnPipe","irregularMap","herb","honor","honorable","hour","mba","msc","m.sc.","unicorn","stringEntity","firstWord","trim","toLocaleLowerCase","UcWordsPipe","sub","LeftTrimPipe","chars","RegExp","RepeatPipe","separator","RangeError","repeat","RightTrimPipe","ScanPipe","match","ShortenPipe","suffix","wordBreak","StripTagsPipe","allowedTags","TrimPipe","UcFirstPipe","SlugifyPipe","CamelizePipe","LatinisePipe","latinMap","Á","Ă","Ắ","Ặ","Ằ","Ẳ","Ẵ","Ǎ","Â","Ấ","Ậ","Ầ","Ẩ","Ẫ","Ä","Ǟ","Ȧ","Ǡ","Ạ","Ȁ","À","Ả","Ȃ","Ā","Ą","Å","Ǻ","Ḁ","Ⱥ","Ã","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ḃ","Ḅ","Ɓ","Ḇ","Ƀ","Ƃ","Ć","Č","Ç","Ḉ","Ĉ","Ċ","Ƈ","Ȼ","Ď","Ḑ","Ḓ","Ḋ","Ḍ","Ɗ","Ḏ","ǲ","ǅ","Đ","Ƌ","Ǳ","Ǆ","É","Ĕ","Ě","Ȩ","Ḝ","Ê","Ế","Ệ","Ề","Ể","Ễ","Ḙ","Ë","Ė","Ẹ","Ȅ","È","Ẻ","Ȇ","Ē","Ḗ","Ḕ","Ę","Ɇ","Ẽ","Ḛ","Ꝫ","Ḟ","Ƒ","Ǵ","Ğ","Ǧ","Ģ","Ĝ","Ġ","Ɠ","Ḡ","Ǥ","Ḫ","Ȟ","Ḩ","Ĥ","Ⱨ","Ḧ","Ḣ","Ḥ","Ħ","Í","Ĭ","Ǐ","Î","Ï","Ḯ","İ","Ị","Ȉ","Ì","Ỉ","Ȋ","Ī","Į","Ɨ","Ĩ","Ḭ","Ꝺ","Ꝼ","Ᵹ","Ꞃ","Ꞅ","Ꞇ","Ꝭ","Ĵ","Ɉ","Ḱ","Ǩ","Ķ","Ⱪ","Ꝃ","Ḳ","Ƙ","Ḵ","Ꝁ","Ꝅ","Ĺ","Ƚ","Ľ","Ļ","Ḽ","Ḷ","Ḹ","Ⱡ","Ꝉ","Ḻ","Ŀ","Ɫ","ǈ","Ł","Ǉ","Ḿ","Ṁ","Ṃ","Ɱ","Ń","Ň","Ņ","Ṋ","Ṅ","Ṇ","Ǹ","Ɲ","Ṉ","Ƞ","ǋ","Ñ","Ǌ","Ó","Ŏ","Ǒ","Ô","Ố","Ộ","Ồ","Ổ","Ỗ","Ö","Ȫ","Ȯ","Ȱ","Ọ","Ő","Ȍ","Ò","Ỏ","Ơ","Ớ","Ợ","Ờ","Ở","Ỡ","Ȏ","Ꝋ","Ꝍ","Ō","Ṓ","Ṑ","Ɵ","Ǫ","Ǭ","Ø","Ǿ","Õ","Ṍ","Ṏ","Ȭ","Ƣ","Ꝏ","Ɛ","Ɔ","Ȣ","Ṕ","Ṗ","Ꝓ","Ƥ","Ꝕ","Ᵽ","Ꝑ","Ꝙ","Ꝗ","Ŕ","Ř","Ŗ","Ṙ","Ṛ","Ṝ","Ȑ","Ȓ","Ṟ","Ɍ","Ɽ","Ꜿ","Ǝ","Ś","Ṥ","Š","Ṧ","Ş","Ŝ","Ș","Ṡ","Ṣ","Ṩ","ẞ","Ť","Ţ","Ṱ","Ț","Ⱦ","Ṫ","Ṭ","Ƭ","Ṯ","Ʈ","Ŧ","Ɐ","Ꞁ","Ɯ","Ʌ","Ꜩ","Ú","Ŭ","Ǔ","Û","Ṷ","Ü","Ǘ","Ǚ","Ǜ","Ǖ","Ṳ","Ụ","Ű","Ȕ","Ù","Ủ","Ư","Ứ","Ự","Ừ","Ử","Ữ","Ȗ","Ū","Ṻ","Ų","Ů","Ũ","Ṹ","Ṵ","Ꝟ","Ṿ","Ʋ","Ṽ","Ꝡ","Ẃ","Ŵ","Ẅ","Ẇ","Ẉ","Ẁ","Ⱳ","Ẍ","Ẋ","Ý","Ŷ","Ÿ","Ẏ","Ỵ","Ỳ","Ƴ","Ỷ","Ỿ","Ȳ","Ɏ","Ỹ","Ź","Ž","Ẑ","Ⱬ","Ż","Ẓ","Ȥ","Ẕ","Ƶ","Ĳ","Œ","ᴀ","ᴁ","ʙ","ᴃ","ᴄ","ᴅ","ᴇ","ꜰ","ɢ","ʛ","ʜ","ɪ","ʁ","ᴊ","ᴋ","ʟ","ᴌ","ᴍ","ɴ","ᴏ","ɶ","ᴐ","ᴕ","ᴘ","ʀ","ᴎ","ᴙ","ꜱ","ᴛ","ⱻ","ᴚ","ᴜ","ᴠ","ᴡ","ʏ","ᴢ","á","ă","ắ","ặ","ằ","ẳ","ẵ","ǎ","â","ấ","ậ","ầ","ẩ","ẫ","ä","ǟ","ȧ","ǡ","ạ","ȁ","à","ả","ȃ","ā","ą","ᶏ","ẚ","å","ǻ","ḁ","ⱥ","ã","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ḃ","ḅ","ɓ","ḇ","ᵬ","ᶀ","ƀ","ƃ","ɵ","ć","č","ç","ḉ","ĉ","ɕ","ċ","ƈ","ȼ","ď","ḑ","ḓ","ȡ","ḋ","ḍ","ɗ","ᶑ","ḏ","ᵭ","ᶁ","đ","ɖ","ƌ","ı","ȷ","ɟ","ʄ","ǳ","ǆ","é","ĕ","ě","ȩ","ḝ","ê","ế","ệ","ề","ể","ễ","ḙ","ë","ė","ẹ","ȅ","è","ẻ","ȇ","ē","ḗ","ḕ","ⱸ","ę","ᶒ","ɇ","ẽ","ḛ","ꝫ","ḟ","ƒ","ᵮ","ᶂ","ǵ","ğ","ǧ","ģ","ĝ","ġ","ɠ","ḡ","ᶃ","ǥ","ḫ","ȟ","ḩ","ĥ","ⱨ","ḧ","ḣ","ḥ","ɦ","ẖ","ħ","ƕ","í","ĭ","ǐ","î","ï","ḯ","ị","ȉ","ì","ỉ","ȋ","ī","į","ᶖ","ɨ","ĩ","ḭ","ꝺ","ꝼ","ᵹ","ꞃ","ꞅ","ꞇ","ꝭ","ǰ","ĵ","ʝ","ɉ","ḱ","ǩ","ķ","ⱪ","ꝃ","ḳ","ƙ","ḵ","ᶄ","ꝁ","ꝅ","ĺ","ƚ","ɬ","ľ","ļ","ḽ","ȴ","ḷ","ḹ","ⱡ","ꝉ","ḻ","ŀ","ɫ","ᶅ","ɭ","ł","ǉ","ſ","ẜ","ẛ","ẝ","ḿ","ṁ","ṃ","ɱ","ᵯ","ᶆ","ń","ň","ņ","ṋ","ȵ","ṅ","ṇ","ǹ","ɲ","ṉ","ƞ","ᵰ","ᶇ","ɳ","ñ","ǌ","ó","ŏ","ǒ","ô","ố","ộ","ồ","ổ","ỗ","ö","ȫ","ȯ","ȱ","ọ","ő","ȍ","ò","ỏ","ơ","ớ","ợ","ờ","ở","ỡ","ȏ","ꝋ","ꝍ","ⱺ","ō","ṓ","ṑ","ǫ","ǭ","ø","ǿ","õ","ṍ","ṏ","ȭ","ƣ","ꝏ","ɛ","ᶓ","ɔ","ᶗ","ȣ","ṕ","ṗ","ꝓ","ƥ","ᵱ","ᶈ","ꝕ","ᵽ","ꝑ","ꝙ","ʠ","ɋ","ꝗ","ŕ","ř","ŗ","ṙ","ṛ","ṝ","ȑ","ɾ","ᵳ","ȓ","ṟ","ɼ","ᵲ","ᶉ","ɍ","ɽ","ↄ","ꜿ","ɘ","ɿ","ś","ṥ","š","ṧ","ş","ŝ","ș","ṡ","ṣ","ṩ","ʂ","ᵴ","ᶊ","ȿ","ɡ","ß","ᴑ","ᴓ","ᴝ","ť","ţ","ṱ","ț","ȶ","ẗ","ⱦ","ṫ","ṭ","ƭ","ṯ","ᵵ","ƫ","ʈ","ŧ","ᵺ","ɐ","ᴂ","ǝ","ᵷ","ɥ","ʮ","ʯ","ᴉ","ʞ","ꞁ","ɯ","ɰ","ᴔ","ɹ","ɻ","ɺ","ⱹ","ʇ","ʌ","ʍ","ʎ","ꜩ","ú","ŭ","ǔ","û","ṷ","ü","ǘ","ǚ","ǜ","ǖ","ṳ","ụ","ű","ȕ","ù","ủ","ư","ứ","ự","ừ","ử","ữ","ȗ","ū","ṻ","ų","ᶙ","ů","ũ","ṹ","ṵ","ᵫ","ꝸ","ⱴ","ꝟ","ṿ","ʋ","ᶌ","ⱱ","ṽ","ꝡ","ẃ","ŵ","ẅ","ẇ","ẉ","ẁ","ⱳ","ẘ","ẍ","ẋ","ᶍ","ý","ŷ","ÿ","ẏ","ỵ","ỳ","ƴ","ỷ","ỿ","ȳ","ẙ","ɏ","ỹ","ź","ž","ẑ","ʑ","ⱬ","ż","ẓ","ȥ","ẕ","ᵶ","ᶎ","ʐ","ƶ","ɀ","ﬀ","ﬃ","ﬄ","ﬁ","ﬂ","ĳ","œ","ﬆ","ₐ","ₑ","ᵢ","ⱼ","ₒ","ᵣ","ᵤ","ᵥ","ₓ","LinesPipe","UnderscorePipe","MatchPipe","pattern","flags","TestPipe","test","LeftPadPipe","padCharacter","RightPadPipe","MakePluralStringPipe","addendum","alga","alumna","alumnus","analysis","antenna","appendix","aquarium","arch","axe","axis","bacillus","bacterium","basis","batch","beach","beau","bison","brush","buffalo","bureau","bus","cactus","calf","chateau","cherry","child","church","circus","cod","corps","corpus","crisis","criterion","curriculum","datum","deer","diagnosis","die","domino","dwarf","echo","elf","ellipsis","embargo","emphasis","erratum","fax","fireman","fish","flush","focus","foot","formula","fungus","genus","goose","grafito","half","hero","hoax","hoof","hypothesis","kiss","knife","leaf","life","loaf","louse","man","mango","matrix","means","medium","memorandum","millennium","moose","mosquito","motto","mouse","nebula","neurosis","nucleus","oasis","octopus","ovum","ox","paralysis","parenthesis","person","phenomenon","plateau","potato","quiz","radius","reflex","runner-up","scampo","scarf","scissors","scratch","self","series","sheaf","sheep","shelf","son-in-law","species","splash","stimulus","stitch","stratum","syllabus","symposium","synopsis","synthesis","tableau","tax","that","thesis","thief","tomato","tooth","tornado","torpedo","vertebra","veto","vita","volcano","waltz","wash","watch","wharf","wife","wolf","woman","zero","singularEntity","quantity","lastWord","toLocaleUpperCase","WrapPipe","prefix","STRING_PIPES","MaxPipe","max","MinPipe","min","PercentagePipe","total","isNaN","percent","SumPipe","sum","FloorPipe","RoundPipe","SqrtPipe","sqrt","PowerPipe","power","CeilPipe","DegreesPipe","radians","PI","NaN","BytesPipe","dictionary","type","format","find","calc","RadiansPipe","degrees","MATH_PIPES","IsDefinedPipe","IsNullPipe","IsUndefinedPipe","IsStringPipe","IsFunctionPipe","IsNumberPipe","IsArrayPipe","IsObjectPipe","IsGreaterEqualThanPipe","IsGreaterThanPipe","IsLessEqualThanPipe","IsEqualToPipe","IsNotEqualToPipe","IsIdenticalToPipe","IsNotIdenticalToPipe","IsLessThanPipe","BOOLEAN_PIPES","TimeAgoPipe","inputDate","getTime","toDate","past","now","Date","MAPPER","ms","div","YEAR_MS","unit","single","many","DATE_PIPES","NgArrayPipesModule","NgStringPipesModule","NgMathPipesModule","NgBooleanPipesModule","NgObjectPipesModule","NgDatePipesModule"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'diff' })\nexport class DiffPipe implements PipeTransform {\n  transform(input: any[], ...args: any[]): any[];\n  transform<T>(input: T, ...args: any[]): T;\n\n  transform(input: any, ...args: any[]): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    // tslint:disable-next-line no-bitwise\n    return args.reduce((d, c) => d.filter((e: any) => !~c.indexOf(e)), input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'initial' })\nexport class InitialPipe implements PipeTransform {\n  transform(input: any[], num: number): any[];\n  transform(input: any): any;\n\n  transform(input: any, num: number = 0): any[] {\n    return Array.isArray(input) ? input.slice(0, input.length - num) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'flatten' })\nexport class FlattenPipe implements PipeTransform {\n  transform(input: any[], shallow?: boolean): any[];\n  transform<T>(input: T, shallow?: boolean): T;\n\n  transform(input: any, shallow: boolean = false): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    return shallow ? [].concat.apply([], input) : this.flatten(input);\n  }\n\n  private flatten(array: any[]): any[] {\n    return array.reduce((arr: any[], elm: any) => {\n      if (Array.isArray(elm)) {\n        return arr.concat(this.flatten(elm));\n      }\n\n      return arr.concat(elm);\n    }, []);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'intersection' })\nexport class IntersectionPipe implements PipeTransform {\n  transform(input: any[], ...args: any[]): any[];\n  transform<T>(input: T, ...args: any[]): T;\n\n  transform(input: any, ...args: any[]): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    // tslint:disable-next-line no-bitwise\n    return args.reduce((n, c) => n.filter((e: any) => !!~c.indexOf(e)), input);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isUndefined(value: any) {\n  return typeof value === 'undefined';\n}\n\nexport function isNull(value: any) {\n  return value === null;\n}\n\nexport function isFunction(value: any) {\n  return typeof value === 'function';\n}\n\nexport function isNumber(value: any) {\n  return typeof value === 'number';\n}\n\nexport function isString(value: any) {\n  return typeof value === 'string';\n}\n\nexport function isBoolean(value: any) {\n  return typeof value === 'boolean';\n}\n\nexport function isObject(value: any) {\n  return value !== null && typeof value === 'object';\n}\n\nexport function isNumberFinite(value: any) {\n  return isNumber(value) && isFinite(value);\n}\n\nexport function isVowel(letter: string): boolean {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n\n  return vowels.indexOf(letter) !== -1;\n}\n\nexport function ucFirst(text: string) {\n  const [part, ...split] = text.split(/\\s/g);\n\n  const ucd = part\n    .toLowerCase()\n    .split(/(?=['|-])/g)\n    .map(\n      (word: any) =>\n      word.indexOf('-') + word.indexOf(\"'\") > -2\n        ? word.slice(0, 2).toUpperCase() + word.slice(2)\n        : word.slice(0, 1).toUpperCase() + word.slice(1)\n    )\n    .join('');\n\n  return [ucd, ...split].join(' ');\n}\n\nexport function applyPrecision(num: number, precision: number) {\n  if (precision <= 0) {\n    return Math.round(num);\n  }\n\n  const tho = 10 ** precision;\n\n  return Math.round(num * tho) / tho;\n}\n\nexport function extractDeepPropertyByMapKey(obj: any, map: string): any {\n  const keys = map.split('.');\n  const head = keys.shift();\n\n  return keys.reduce((prop: any, key: string) => {\n    return !isUndefined(prop) && !isNull(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;\n  }, obj[head || '']);\n}\n\nexport function extractDeepPropertyByParentMapKey(obj: any, map: string): any {\n  const keys = map.split('.');\n  const tail = keys.pop();\n  const props = extractDeepPropertyByMapKey(obj, keys.join('.'));\n\n  return { props, tail };\n}\n\nexport function getKeysTwoObjects(obj: any, other: any): any {\n  return [...Object.keys(obj), ...Object.keys(other)].filter((key, index, array) => array.indexOf(key) === index);\n}\n\nexport function isDeepEqual(obj: any, other: any): any {\n  if (!isObject(obj) || !isObject(other)) {\n    return obj === other;\n  }\n\n  return getKeysTwoObjects(obj, other).every(\n    (key: any): boolean => {\n      if (!isObject(obj[key]) && !isObject(other[key])) {\n        return obj[key] === other[key];\n      }\n      if (!isObject(obj[key]) || !isObject(other[key])) {\n        return false;\n      }\n\n      return isDeepEqual(obj[key], other[key]);\n    }\n  );\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'reverse' })\nexport class ReversePipe implements PipeTransform {\n  transform(input: any): any {\n    if (isString(input)) {\n      return input\n        .split('')\n        .reverse()\n        .join('');\n    }\n\n    return Array.isArray(input) ? input.slice().reverse() : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'tail' })\nexport class TailPipe implements PipeTransform {\n  transform(input: any[], num?: number): any[];\n  transform<T>(input: T, num?: number): T;\n\n  transform(input: any, num: number = 0): any {\n    return Array.isArray(input) ? input.slice(num) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'truthify' })\nexport class TrurthifyPipe implements PipeTransform {\n  transform(input: any[]): any[];\n  transform<T>(input: T): T;\n\n  transform(input: any): any {\n    return Array.isArray(input) ? input.filter(e => !!e) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'union' })\nexport class UnionPipe implements PipeTransform {\n  transform(input: any[], args?: any[]): any[];\n  transform<T>(input: T, args?: any[]): T;\n\n  transform(input: any, args: any[] = []): any {\n    if (!Array.isArray(input) || !Array.isArray(args)) {\n      return input;\n    }\n\n    return args.reduce((newArr, currArr) => {\n      return newArr.concat(\n        currArr.reduce((noDupArr: any[], curr: any) => {\n          // tslint:disable-next-line:no-bitwise\n          return !~noDupArr.indexOf(curr) && !~newArr.indexOf(curr) ? noDupArr.concat([curr]) : noDupArr;\n        }, [])\n      );\n    }, input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isObject, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'unique' })\nexport class UniquePipe implements PipeTransform {\n  transform(input: any[], args?: string | undefined): any[];\n  transform<T>(input: T, args?: string | undefined): T;\n\n  transform(input: any, propertyName?: string | undefined): any {\n    const uniques: boolean[] = [];\n\n    return Array.isArray(input)\n      ? isUndefined(propertyName)\n        ? input.filter((e, i) => input.indexOf(e) === i)\n        : input.filter((e, i) => {\n            let value = extractDeepPropertyByMapKey(e, propertyName);\n            value = isObject(value) ? JSON.stringify(value) : value;\n\n            if (isUndefined(value) || uniques[value]) {\n              return false;\n            }\n\n            uniques[value] = true;\n\n            return true;\n          })\n      : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'without' })\nexport class WithoutPipe implements PipeTransform {\n  transform(input: any[], args?: any[]): any[];\n  transform(input: any, args?: any[]): any;\n\n  transform(input: any, args: any[] = []): any[] {\n    return Array.isArray(input)\n      ? // tslint:disable-next-line:no-bitwise\n        input.filter(e => !~args.indexOf(e))\n      : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pluck', pure: false })\nexport class PluckPipe implements PipeTransform {\n  transform(input: any[], map: string): any[];\n  transform(input: any, map: string): any;\n  transform<T>(input: T, map: string): T;\n\n  transform(input: any, map: string): any {\n    if (Array.isArray(input)) {\n      return input.map(e => extractDeepPropertyByMapKey(e, map));\n    }\n\n    return isObject(input) ? extractDeepPropertyByMapKey(input, map) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'shuffle' })\nexport class ShufflePipe implements PipeTransform {\n  transform(input: any[]): any[];\n  transform<T>(input: T): T;\n\n  // Using a version of the Fisher-Yates shuffle algorithm\n  // https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n  transform(input: any): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const shuffled = [...input];\n    const n = input.length - 1;\n    for (let i = 0; i < n; ++i) {\n      const j = Math.floor(Math.random() * (n - i + 1)) + i;\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n\n    return shuffled;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'every' })\nexport class EveryPipe implements PipeTransform {\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): boolean | any[] {\n    return Array.isArray(input) ? input.every(predicate) : false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'some' })\nexport class SomePipe implements PipeTransform {\n  transform(input: any[], predicate: (value: any, index: number, array: any[]) => boolean): boolean;\n  transform<T>(input: T, predicate: (value: any, index: number, array: any[]) => boolean): T;\n\n  transform(input: any, predicate: (value: any, index: number, array: any[]) => boolean): any {\n    return Array.isArray(input) ? input.some(predicate) : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sample' })\nexport class SamplePipe implements PipeTransform {\n  transform(input: any[], len?: number): any[];\n  transform<T>(input: T, len?: number): T;\n\n  transform(input: any, len: number = 1): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    let sample: any[] = [];\n    const tmp = [...input];\n    const l = len < tmp.length ? len : tmp.length;\n    for (let i = 0; i < l; ++i) {\n      sample = sample.concat(tmp.splice(Math.floor(Math.random() * tmp.length), 1));\n    }\n\n    return sample;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isFunction } from '../helpers/helpers';\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n  transform(input: any, discriminator: any = [], delimiter: string = '|'): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    return this.groupBy(input, discriminator, delimiter);\n  }\n\n  private groupBy(list: any[], discriminator: any, delimiter: string) {\n    return list.reduce((acc: any, payload: string) => {\n      const key = this.extractKeyByDiscriminator(discriminator, payload, delimiter);\n\n      acc[key] = Array.isArray(acc[key]) ? acc[key].concat([payload]) : [payload];\n\n      return acc;\n    }, {});\n  }\n\n  private extractKeyByDiscriminator(discriminator: any, payload: string, delimiter: string) {\n    if (isFunction(discriminator)) {\n      return (<Function>discriminator)(payload);\n    }\n\n    if (Array.isArray(discriminator)) {\n      return discriminator.map(k => extractDeepPropertyByMapKey(payload, k)).join(delimiter);\n    }\n\n    return extractDeepPropertyByMapKey(payload, <string>discriminator);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  extractDeepPropertyByMapKey,\n  extractDeepPropertyByParentMapKey,\n  isBoolean,\n  isNumberFinite,\n  isString,\n  isUndefined,\n} from '../helpers/helpers';\n\n// tslint:disable no-bitwise\n@Pipe({ name: 'filterBy' })\nexport class FilterByPipe implements PipeTransform {\n  transform(input: any[], props: Array<string>, search?: any, strict?: boolean): any[];\n  transform<T>(input: T, props: Array<string>, search?: any, strict?: boolean): T;\n  transform(input: any, props: Array<string>, search: any = '', strict: boolean = false): any {\n    if (\n      !Array.isArray(input) ||\n      (!Array.isArray(search) && !isString(search) && !isNumberFinite(search) && !isBoolean(search))\n    ) {\n      return input;\n    }\n\n    const terms = String(search)\n      .toLowerCase()\n      .split(',');\n\n    return input.filter(obj => {\n      return props.some(prop => {\n        return terms.some(term => {\n          const value = extractDeepPropertyByMapKey(obj, prop);\n          /* tslint:disable */\n          const { props, tail } = extractDeepPropertyByParentMapKey(obj, prop);\n\n          if (isUndefined(value) && !isUndefined(props) && Array.isArray(props)) {\n            return props.some(parent => {\n              const str = String(parent[tail]).toLowerCase();\n\n              return strict ? str === term : !!~str.indexOf(term);\n            });\n          }\n\n          if (isUndefined(value)) {\n            return false;\n          }\n\n          const strValue: string = String(value).toLowerCase();\n\n          return strict ? term === strValue : !!~strValue.indexOf(term);\n        });\n      });\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { extractDeepPropertyByMapKey, isString, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'orderBy' })\nexport class OrderByPipe implements PipeTransform {\n  transform(input: any[], config?: any): any[];\n  transform<T>(input: T, config?: any): T;\n\n  transform(input: any, config?: any): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    const out = [...input];\n\n    // sort by multiple properties\n    if (Array.isArray(config)) {\n      return out.sort((a, b) => {\n        const l = config.length;\n        for (let i = 0; i < l; ++i) {\n          const [prop, asc] = OrderByPipe.extractFromConfig(config[i]);\n          const pos = OrderByPipe.orderCompare(prop, asc, a, b);\n          if (pos !== 0) {\n            return pos;\n          }\n        }\n\n        return 0;\n      });\n    }\n\n    // sort by a single property value\n    if (isString(config)) {\n      const [prop, asc, sign] = OrderByPipe.extractFromConfig(config);\n\n      if (config.length === 1) {\n        // tslint:disable-next-line:switch-default\n        switch (sign) {\n          case '+':\n            return out.sort(OrderByPipe.simpleSort.bind(this));\n          case '-':\n            return out.sort(OrderByPipe.simpleSort.bind(this)).reverse();\n        }\n      }\n\n      return out.sort(OrderByPipe.orderCompare.bind(this, prop, asc));\n    }\n\n    // default sort by value\n    return out.sort(OrderByPipe.simpleSort.bind(this));\n  }\n\n  private static simpleSort(a: any, b: any) {\n    return isString(a) && isString(b) ? a.toLowerCase().localeCompare(b.toLowerCase()) : a - b;\n  }\n\n  private static orderCompare(prop: string, asc: boolean, a: any, b: any) {\n    const first = extractDeepPropertyByMapKey(a, prop);\n    const second = extractDeepPropertyByMapKey(b, prop);\n\n    if (first === second) {\n      return 0;\n    }\n\n    if (isUndefined(first) || first === '') {\n      return 1;\n    }\n\n    if (isUndefined(second) || second === '') {\n      return -1;\n    }\n\n    if (isString(first) && isString(second)) {\n      const pos = first.toLowerCase().localeCompare(second.toLowerCase());\n\n      return asc ? pos : -pos;\n    }\n\n    return asc ? first - second : second - first;\n  }\n\n  private static extractFromConfig(config: any) {\n    const sign = config.substr(0, 1);\n    const prop = config.replace(/^[-+]/, '');\n    const asc = sign !== '-';\n\n    return [prop, asc, sign];\n  }\n}\n","import { Pipe } from '@angular/core';\nimport { GroupByPipe } from './group-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'groupByImpure', pure: false })\nexport class GroupByImpurePipe extends GroupByPipe {}\n","import { Pipe } from '@angular/core';\nimport { FilterByPipe } from './filter-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'filterByImpure', pure: false })\nexport class FilterByImpurePipe extends FilterByPipe {}\n","import { Pipe } from '@angular/core';\nimport { OrderByPipe } from './order-by';\n\n// tslint:disable use-pipe-transform-interface\n@Pipe({ name: 'orderByImpure', pure: false })\nexport class OrderByImpurePipe extends OrderByPipe {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'range' })\nexport class RangePipe implements PipeTransform {\n  transform(start: number = 1, count: number = 0, step: number = 1): any {\n    return Array(count)\n      .fill('')\n      .map((v, i) => step * i + start);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'chunk' })\nexport class ChunkPipe implements PipeTransform {\n  transform(input: any, size: number = 1): any {\n    if (isString(input)) {\n      return this.chunk(input\n        .split(''), size);\n    }\n\n    return Array.isArray(input) ? this.chunk(input, size) : input;\n  }\n\n  private chunk(input: any[], size: number) {\n    return Array(Math.ceil(input.length / size))\n      .fill([])\n      .map((_, index) => index * size)\n      .map(begin => input.slice(begin, begin + size));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fromPairs' })\nexport class FromPairsPipe implements PipeTransform {\n  transform(input: any): any {\n    if (!Array.isArray(input)) {\n      return input;\n    }\n\n    return input.reduce((obj, arr) => {\n      if (!Array.isArray(arr)) {\n        return obj;\n      }\n\n      const [prop, val] = arr;\n\n      obj[prop] = val;\n\n      return obj;\n    }, {});\n  }\n}\n","import { DiffPipe } from './diff';\nimport { InitialPipe } from './initial';\nimport { FlattenPipe } from './flatten';\nimport { IntersectionPipe } from './intersection';\nimport { ReversePipe } from './reverse';\nimport { TailPipe } from './tail';\nimport { TrurthifyPipe } from './truthify';\nimport { UnionPipe } from './union';\nimport { UniquePipe } from './unique';\nimport { WithoutPipe } from './without';\nimport { PluckPipe } from './pluck';\nimport { ShufflePipe } from './shuffle';\nimport { EveryPipe } from './every';\nimport { SomePipe } from './some';\nimport { SamplePipe } from './sample';\nimport { GroupByPipe } from './group-by';\nimport { FilterByPipe } from './filter-by';\nimport { OrderByPipe } from './order-by';\nimport { NgModule } from '@angular/core';\nimport { GroupByImpurePipe } from './group-by-impure';\nimport { FilterByImpurePipe } from './filter-by-impure';\nimport { OrderByImpurePipe } from './order-by-impure';\nimport { RangePipe } from './range';\nimport { ChunkPipe } from './chunk';\nimport { FromPairsPipe } from './from-pairs';\n\nconst ARRAY_PIPES = [\n  DiffPipe,\n  FlattenPipe,\n  InitialPipe,\n  IntersectionPipe,\n  ReversePipe,\n  TailPipe,\n  TrurthifyPipe,\n  UnionPipe,\n  UniquePipe,\n  WithoutPipe,\n  PluckPipe,\n  ShufflePipe,\n  EveryPipe,\n  SomePipe,\n  SamplePipe,\n  GroupByPipe,\n  GroupByImpurePipe,\n  FilterByPipe,\n  FilterByImpurePipe,\n  OrderByPipe,\n  OrderByImpurePipe,\n  RangePipe,\n  ChunkPipe,\n  FromPairsPipe\n];\n\n@NgModule({\n  declarations: ARRAY_PIPES,\n  imports: [],\n  exports: ARRAY_PIPES,\n})\nexport class NgArrayPipesModule {}\n\nexport { DiffPipe } from './diff';\nexport { InitialPipe } from './initial';\nexport { FlattenPipe } from './flatten';\nexport { IntersectionPipe } from './intersection';\nexport { ReversePipe } from './reverse';\nexport { TailPipe } from './tail';\nexport { TrurthifyPipe } from './truthify';\nexport { UnionPipe } from './union';\nexport { UniquePipe } from './unique';\nexport { WithoutPipe } from './without';\nexport { PluckPipe } from './pluck';\nexport { ShufflePipe } from './shuffle';\nexport { EveryPipe } from './every';\nexport { SomePipe } from './some';\nexport { SamplePipe } from './sample';\nexport { GroupByPipe } from './group-by';\nexport { FilterByPipe } from './filter-by';\nexport { OrderByPipe } from './order-by';\nexport { GroupByImpurePipe } from './group-by-impure';\nexport { FilterByImpurePipe } from './filter-by-impure';\nexport { OrderByImpurePipe } from './order-by-impure';\nexport { RangePipe } from './range';\nexport { ChunkPipe } from './chunk';\nexport { FromPairsPipe } from './from-pairs';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'keys' })\nexport class KeysPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'values' })\nexport class ValuesPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).map(k => obj[k]);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pairs' })\nexport class PairsPipe implements PipeTransform {\n  transform(obj: any): any[] {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.entries(obj);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'pick' })\nexport class PickPipe implements PipeTransform {\n  transform(obj: any, ...args: Array<string>): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return args.reduce((o, k) => {\n      return Object.assign(o, { [k]: obj[k] });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'omit' })\nexport class OmitPipe implements PipeTransform {\n  transform(obj: any, ...args: Array<string>): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return (\n      Object.keys(obj)\n        // tslint:disable-next-line:no-bitwise\n        .filter(k => !~args.indexOf(k))\n        .reduce((o, k) => {\n          return Object.assign(o, { [k]: obj[k] });\n        }, {})\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'invert' })\nexport class InvertPipe implements PipeTransform {\n  transform(obj: any): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((o, k) => {\n      return Object.assign(o, { [obj[k]]: k });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'invertBy' })\nexport class InvertByPipe implements PipeTransform {\n  transform(obj: any, cb?: Function): Object {\n    if (Array.isArray(obj) || !isObject(obj)) {\n      return obj;\n    }\n\n    return Object.keys(obj).reduce((o: any, k: string) => {\n      const key = cb ? cb(obj[k]) : obj[k];\n\n      return Array.isArray(o[key]) ? (o[key].push(k), o) : Object.assign(o, { [key]: [k] });\n    }, {});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { getKeysTwoObjects, isDeepEqual, isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'diffObj' })\nexport class DiffObjPipe implements PipeTransform {\n  transform(obj: any, original: any = {}): any {\n    if (Array.isArray(obj) || Array.isArray(original) || !isObject(obj) || !isObject(original)) {\n      return {};\n    }\n\n    return getKeysTwoObjects(obj, original).reduce((diff: any, key: any) => {\n      if (!isDeepEqual(original[key], obj[key])) {\n        diff[key] = obj[key];\n      }\n\n      return diff;\n    }, {});\n  }\n}\n","import { KeysPipe } from './keys';\nimport { ValuesPipe } from './values';\nimport { PairsPipe } from './pairs';\nimport { PickPipe } from './pick';\nimport { OmitPipe } from './omit';\nimport { InvertPipe } from './invert';\nimport { InvertByPipe } from './invert-by';\nimport { DiffObjPipe } from './diff-obj';\nimport { NgModule } from '@angular/core';\n\nconst OBJECT_PIPES = [KeysPipe, ValuesPipe, PairsPipe, PickPipe, InvertPipe, InvertByPipe, OmitPipe, DiffObjPipe];\n\n@NgModule({\n  declarations: OBJECT_PIPES,\n  imports: [],\n  exports: OBJECT_PIPES,\n})\nexport class NgObjectPipesModule {}\n\nexport { KeysPipe } from './keys';\nexport { ValuesPipe } from './values';\nexport { PairsPipe } from './pairs';\nexport { PickPipe } from './pick';\nexport { OmitPipe } from './omit';\nexport { InvertPipe } from './invert';\nexport { InvertByPipe } from './invert-by';\nexport { DiffObjPipe } from './diff-obj';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isVowel } from '../helpers/helpers';\n\n@Pipe({\n  name: 'aOrAn',\n})\n/**\n * Takes a string and returns the string prepended by 'a' or 'an'.\n * Uses both naive and holdout-list approaches.\n * @constructor\n * @param {string} stringEntity - Entity to prepend 'a' or 'an' to.\n */\nexport class AorAnPipe implements PipeTransform {\n  private irregularMap: any = {\n    herb: 'an',\n    honor: 'an',\n    honorable: 'an',\n    hour: 'an',\n    mba: 'an',\n    msc: 'an',\n    'm.sc.': 'an',\n    unicorn: 'a',\n  };\n  transform(stringEntity: string): string {\n    if (!stringEntity || stringEntity === '') {\n      return '';\n    } else {\n      const firstWord = stringEntity.trim().split(' ')[0];\n      if (this.irregularMap[firstWord.toLocaleLowerCase()]) {\n        return `${this.irregularMap[firstWord.toLocaleLowerCase()]} ${stringEntity}`;\n      } else {\n        return isVowel(stringEntity[0]) ? `an ${stringEntity}` : `a ${stringEntity}`;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, ucFirst } from '../helpers/helpers';\n\n@Pipe({ name: 'ucwords' })\nexport class UcWordsPipe implements PipeTransform {\n  transform(input: string): string;\n  transform(input: any): any;\n\n  transform(text: any): string {\n    if (isString(text)) {\n      return text\n        .split(' ')\n        .map((sub: any) => ucFirst(sub))\n        .join(' ');\n    }\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'ltrim' })\nexport class LeftTrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+`), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'repeat' })\nexport class RepeatPipe implements PipeTransform {\n  transform(str: string, n: number = 1, separator: string = ''): string {\n    if (n <= 0) {\n      throw new RangeError();\n    }\n\n    return n === 1 ? str : this.repeat(str, n - 1, separator);\n  }\n\n  private repeat(str: string, n: number, separator: string): string {\n    return isString(str) ? (n === 0 ? str : str + separator + this.repeat(str, n - 1, separator)) : str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'rtrim' })\nexport class RightTrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`[${chars}]+$`), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'scan' })\nexport class ScanPipe implements PipeTransform {\n  transform(text: string, args: string[] = []): string {\n    return isString(text)\n      ? text.replace(/\\{(\\d+)}/g, (match, index) => (!isUndefined(args[index]) ? args[index] : match))\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'shorten' })\nexport class ShortenPipe implements PipeTransform {\n  transform(input: string, length?: number, suffix?: string, wordBreak?: boolean): string;\n  transform(input: any, length?: number, suffix?: string, wordBreak?: boolean): any;\n\n  transform(text: any, length: number = 0, suffix: string = '', wordBreak: boolean = true): string {\n    if (!isString(text)) {\n      return text;\n    }\n\n    if (text.length > length) {\n      if (wordBreak) {\n        return text.slice(0, length) + suffix;\n      }\n\n      // tslint:disable-next-line:no-bitwise\n      if (!!~text.indexOf(' ', length)) {\n        return text.slice(0, text.indexOf(' ', length)) + suffix;\n      }\n    }\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'stripTags' })\nexport class StripTagsPipe implements PipeTransform {\n  transform(text: string, ...allowedTags: any[]): string {\n    return allowedTags.length > 0\n      ? text.replace(new RegExp(`<(?!\\/?(${allowedTags.join('|')})\\s*\\/?)[^>]+>`, 'g'), '')\n      : text.replace(/<(?:.|\\s)*?>/g, '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'trim' })\nexport class TrimPipe implements PipeTransform {\n  transform(text: string, chars: string = '\\\\s'): string {\n    return isString(text) ? text.replace(new RegExp(`^[${chars}]+|[${chars}]+$`, 'g'), '') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString, ucFirst } from '../helpers/helpers';\n\n@Pipe({ name: 'ucfirst' })\nexport class UcFirstPipe implements PipeTransform {\n  transform(input: string): string;\n  transform(input: any): any;\n\n  transform(text: any): string {\n    return isString(text) ? ucFirst(text) : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'slugify' })\nexport class SlugifyPipe implements PipeTransform {\n  transform(str: string): string {\n    return isString(str)\n      ? str\n          .toLowerCase()\n          .trim()\n          .replace(/[^\\w\\-]+/g, ' ')\n          .replace(/\\s+/g, '-')\n      : str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'camelize' })\nexport class CamelizePipe implements PipeTransform {\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return text\n      .toLowerCase()\n      .split(/[-_\\s]/g)\n      .filter((v: string) => !!v)\n      .map((word: string, key: any) => {\n        return !key ? word : word.slice(0, 1).toUpperCase() + word.slice(1);\n      })\n      .join('');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'latinise' })\nexport class LatinisePipe implements PipeTransform {\n  // Source: http://semplicewebsites.com/removing-accents-javascript\n  // tslint:disable-next-line whitespace max-line-length object-literal-key-quotes\n  private latinMap: any = {\n    'Á': 'A',\n    'Ă': 'A',\n    'Ắ': 'A',\n    'Ặ': 'A',\n    'Ằ': 'A',\n    'Ẳ': 'A',\n    'Ẵ': 'A',\n    'Ǎ': 'A',\n    'Â': 'A',\n    'Ấ': 'A',\n    'Ậ': 'A',\n    'Ầ': 'A',\n    'Ẩ': 'A',\n    'Ẫ': 'A',\n    'Ä': 'A',\n    'Ǟ': 'A',\n    'Ȧ': 'A',\n    'Ǡ': 'A',\n    'Ạ': 'A',\n    'Ȁ': 'A',\n    'À': 'A',\n    'Ả': 'A',\n    'Ȃ': 'A',\n    'Ā': 'A',\n    'Ą': 'A',\n    'Å': 'A',\n    'Ǻ': 'A',\n    'Ḁ': 'A',\n    'Ⱥ': 'A',\n    'Ã': 'A',\n    'Ꜳ': 'AA',\n    'Æ': 'AE',\n    'Ǽ': 'AE',\n    'Ǣ': 'AE',\n    'Ꜵ': 'AO',\n    'Ꜷ': 'AU',\n    'Ꜹ': 'AV',\n    'Ꜻ': 'AV',\n    'Ꜽ': 'AY',\n    'Ḃ': 'B',\n    'Ḅ': 'B',\n    'Ɓ': 'B',\n    'Ḇ': 'B',\n    'Ƀ': 'B',\n    'Ƃ': 'B',\n    'Ć': 'C',\n    'Č': 'C',\n    'Ç': 'C',\n    'Ḉ': 'C',\n    'Ĉ': 'C',\n    'Ċ': 'C',\n    'Ƈ': 'C',\n    'Ȼ': 'C',\n    'Ď': 'D',\n    'Ḑ': 'D',\n    'Ḓ': 'D',\n    'Ḋ': 'D',\n    'Ḍ': 'D',\n    'Ɗ': 'D',\n    'Ḏ': 'D',\n    'ǲ': 'D',\n    'ǅ': 'D',\n    'Đ': 'D',\n    'Ƌ': 'D',\n    'Ǳ': 'DZ',\n    'Ǆ': 'DZ',\n    'É': 'E',\n    'Ĕ': 'E',\n    'Ě': 'E',\n    'Ȩ': 'E',\n    'Ḝ': 'E',\n    'Ê': 'E',\n    'Ế': 'E',\n    'Ệ': 'E',\n    'Ề': 'E',\n    'Ể': 'E',\n    'Ễ': 'E',\n    'Ḙ': 'E',\n    'Ë': 'E',\n    'Ė': 'E',\n    'Ẹ': 'E',\n    'Ȅ': 'E',\n    'È': 'E',\n    'Ẻ': 'E',\n    'Ȇ': 'E',\n    'Ē': 'E',\n    'Ḗ': 'E',\n    'Ḕ': 'E',\n    'Ę': 'E',\n    'Ɇ': 'E',\n    'Ẽ': 'E',\n    'Ḛ': 'E',\n    'Ꝫ': 'ET',\n    'Ḟ': 'F',\n    'Ƒ': 'F',\n    'Ǵ': 'G',\n    'Ğ': 'G',\n    'Ǧ': 'G',\n    'Ģ': 'G',\n    'Ĝ': 'G',\n    'Ġ': 'G',\n    'Ɠ': 'G',\n    'Ḡ': 'G',\n    'Ǥ': 'G',\n    'Ḫ': 'H',\n    'Ȟ': 'H',\n    'Ḩ': 'H',\n    'Ĥ': 'H',\n    'Ⱨ': 'H',\n    'Ḧ': 'H',\n    'Ḣ': 'H',\n    'Ḥ': 'H',\n    'Ħ': 'H',\n    'Í': 'I',\n    'Ĭ': 'I',\n    'Ǐ': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ḯ': 'I',\n    'İ': 'I',\n    'Ị': 'I',\n    'Ȉ': 'I',\n    'Ì': 'I',\n    'Ỉ': 'I',\n    'Ȋ': 'I',\n    'Ī': 'I',\n    'Į': 'I',\n    'Ɨ': 'I',\n    'Ĩ': 'I',\n    'Ḭ': 'I',\n    'Ꝺ': 'D',\n    'Ꝼ': 'F',\n    'Ᵹ': 'G',\n    'Ꞃ': 'R',\n    'Ꞅ': 'S',\n    'Ꞇ': 'T',\n    'Ꝭ': 'IS',\n    'Ĵ': 'J',\n    'Ɉ': 'J',\n    'Ḱ': 'K',\n    'Ǩ': 'K',\n    'Ķ': 'K',\n    'Ⱪ': 'K',\n    'Ꝃ': 'K',\n    'Ḳ': 'K',\n    'Ƙ': 'K',\n    'Ḵ': 'K',\n    'Ꝁ': 'K',\n    'Ꝅ': 'K',\n    'Ĺ': 'L',\n    'Ƚ': 'L',\n    'Ľ': 'L',\n    'Ļ': 'L',\n    'Ḽ': 'L',\n    'Ḷ': 'L',\n    'Ḹ': 'L',\n    'Ⱡ': 'L',\n    'Ꝉ': 'L',\n    'Ḻ': 'L',\n    'Ŀ': 'L',\n    'Ɫ': 'L',\n    'ǈ': 'L',\n    'Ł': 'L',\n    'Ǉ': 'LJ',\n    'Ḿ': 'M',\n    'Ṁ': 'M',\n    'Ṃ': 'M',\n    'Ɱ': 'M',\n    'Ń': 'N',\n    'Ň': 'N',\n    'Ņ': 'N',\n    'Ṋ': 'N',\n    'Ṅ': 'N',\n    'Ṇ': 'N',\n    'Ǹ': 'N',\n    'Ɲ': 'N',\n    'Ṉ': 'N',\n    'Ƞ': 'N',\n    'ǋ': 'N',\n    'Ñ': 'N',\n    'Ǌ': 'NJ',\n    'Ó': 'O',\n    'Ŏ': 'O',\n    'Ǒ': 'O',\n    'Ô': 'O',\n    'Ố': 'O',\n    'Ộ': 'O',\n    'Ồ': 'O',\n    'Ổ': 'O',\n    'Ỗ': 'O',\n    'Ö': 'O',\n    'Ȫ': 'O',\n    'Ȯ': 'O',\n    'Ȱ': 'O',\n    'Ọ': 'O',\n    'Ő': 'O',\n    'Ȍ': 'O',\n    'Ò': 'O',\n    'Ỏ': 'O',\n    'Ơ': 'O',\n    'Ớ': 'O',\n    'Ợ': 'O',\n    'Ờ': 'O',\n    'Ở': 'O',\n    'Ỡ': 'O',\n    'Ȏ': 'O',\n    'Ꝋ': 'O',\n    'Ꝍ': 'O',\n    'Ō': 'O',\n    'Ṓ': 'O',\n    'Ṑ': 'O',\n    'Ɵ': 'O',\n    'Ǫ': 'O',\n    'Ǭ': 'O',\n    'Ø': 'O',\n    'Ǿ': 'O',\n    'Õ': 'O',\n    'Ṍ': 'O',\n    'Ṏ': 'O',\n    'Ȭ': 'O',\n    'Ƣ': 'OI',\n    'Ꝏ': 'OO',\n    'Ɛ': 'E',\n    'Ɔ': 'O',\n    'Ȣ': 'OU',\n    'Ṕ': 'P',\n    'Ṗ': 'P',\n    'Ꝓ': 'P',\n    'Ƥ': 'P',\n    'Ꝕ': 'P',\n    'Ᵽ': 'P',\n    'Ꝑ': 'P',\n    'Ꝙ': 'Q',\n    'Ꝗ': 'Q',\n    'Ŕ': 'R',\n    'Ř': 'R',\n    'Ŗ': 'R',\n    'Ṙ': 'R',\n    'Ṛ': 'R',\n    'Ṝ': 'R',\n    'Ȑ': 'R',\n    'Ȓ': 'R',\n    'Ṟ': 'R',\n    'Ɍ': 'R',\n    'Ɽ': 'R',\n    'Ꜿ': 'C',\n    'Ǝ': 'E',\n    'Ś': 'S',\n    'Ṥ': 'S',\n    'Š': 'S',\n    'Ṧ': 'S',\n    'Ş': 'S',\n    'Ŝ': 'S',\n    'Ș': 'S',\n    'Ṡ': 'S',\n    'Ṣ': 'S',\n    'Ṩ': 'S',\n    'ẞ': 'SS',\n    'Ť': 'T',\n    'Ţ': 'T',\n    'Ṱ': 'T',\n    'Ț': 'T',\n    'Ⱦ': 'T',\n    'Ṫ': 'T',\n    'Ṭ': 'T',\n    'Ƭ': 'T',\n    'Ṯ': 'T',\n    'Ʈ': 'T',\n    'Ŧ': 'T',\n    'Ɐ': 'A',\n    'Ꞁ': 'L',\n    'Ɯ': 'M',\n    'Ʌ': 'V',\n    'Ꜩ': 'TZ',\n    'Ú': 'U',\n    'Ŭ': 'U',\n    'Ǔ': 'U',\n    'Û': 'U',\n    'Ṷ': 'U',\n    'Ü': 'U',\n    'Ǘ': 'U',\n    'Ǚ': 'U',\n    'Ǜ': 'U',\n    'Ǖ': 'U',\n    'Ṳ': 'U',\n    'Ụ': 'U',\n    'Ű': 'U',\n    'Ȕ': 'U',\n    'Ù': 'U',\n    'Ủ': 'U',\n    'Ư': 'U',\n    'Ứ': 'U',\n    'Ự': 'U',\n    'Ừ': 'U',\n    'Ử': 'U',\n    'Ữ': 'U',\n    'Ȗ': 'U',\n    'Ū': 'U',\n    'Ṻ': 'U',\n    'Ų': 'U',\n    'Ů': 'U',\n    'Ũ': 'U',\n    'Ṹ': 'U',\n    'Ṵ': 'U',\n    'Ꝟ': 'V',\n    'Ṿ': 'V',\n    'Ʋ': 'V',\n    'Ṽ': 'V',\n    'Ꝡ': 'VY',\n    'Ẃ': 'W',\n    'Ŵ': 'W',\n    'Ẅ': 'W',\n    'Ẇ': 'W',\n    'Ẉ': 'W',\n    'Ẁ': 'W',\n    'Ⱳ': 'W',\n    'Ẍ': 'X',\n    'Ẋ': 'X',\n    'Ý': 'Y',\n    'Ŷ': 'Y',\n    'Ÿ': 'Y',\n    'Ẏ': 'Y',\n    'Ỵ': 'Y',\n    'Ỳ': 'Y',\n    'Ƴ': 'Y',\n    'Ỷ': 'Y',\n    'Ỿ': 'Y',\n    'Ȳ': 'Y',\n    'Ɏ': 'Y',\n    'Ỹ': 'Y',\n    'Ź': 'Z',\n    'Ž': 'Z',\n    'Ẑ': 'Z',\n    'Ⱬ': 'Z',\n    'Ż': 'Z',\n    'Ẓ': 'Z',\n    'Ȥ': 'Z',\n    'Ẕ': 'Z',\n    'Ƶ': 'Z',\n    'Ĳ': 'IJ',\n    'Œ': 'OE',\n    'ᴀ': 'A',\n    'ᴁ': 'AE',\n    'ʙ': 'B',\n    'ᴃ': 'B',\n    'ᴄ': 'C',\n    'ᴅ': 'D',\n    'ᴇ': 'E',\n    'ꜰ': 'F',\n    'ɢ': 'G',\n    'ʛ': 'G',\n    'ʜ': 'H',\n    'ɪ': 'I',\n    'ʁ': 'R',\n    'ᴊ': 'J',\n    'ᴋ': 'K',\n    'ʟ': 'L',\n    'ᴌ': 'L',\n    'ᴍ': 'M',\n    'ɴ': 'N',\n    'ᴏ': 'O',\n    'ɶ': 'OE',\n    'ᴐ': 'O',\n    'ᴕ': 'OU',\n    'ᴘ': 'P',\n    'ʀ': 'R',\n    'ᴎ': 'N',\n    'ᴙ': 'R',\n    'ꜱ': 'S',\n    'ᴛ': 'T',\n    'ⱻ': 'E',\n    'ᴚ': 'R',\n    'ᴜ': 'U',\n    'ᴠ': 'V',\n    'ᴡ': 'W',\n    'ʏ': 'Y',\n    'ᴢ': 'Z',\n    'á': 'a',\n    'ă': 'a',\n    'ắ': 'a',\n    'ặ': 'a',\n    'ằ': 'a',\n    'ẳ': 'a',\n    'ẵ': 'a',\n    'ǎ': 'a',\n    'â': 'a',\n    'ấ': 'a',\n    'ậ': 'a',\n    'ầ': 'a',\n    'ẩ': 'a',\n    'ẫ': 'a',\n    'ä': 'a',\n    'ǟ': 'a',\n    'ȧ': 'a',\n    'ǡ': 'a',\n    'ạ': 'a',\n    'ȁ': 'a',\n    'à': 'a',\n    'ả': 'a',\n    'ȃ': 'a',\n    'ā': 'a',\n    'ą': 'a',\n    'ᶏ': 'a',\n    'ẚ': 'a',\n    'å': 'a',\n    'ǻ': 'a',\n    'ḁ': 'a',\n    'ⱥ': 'a',\n    'ã': 'a',\n    'ꜳ': 'aa',\n    'æ': 'ae',\n    'ǽ': 'ae',\n    'ǣ': 'ae',\n    'ꜵ': 'ao',\n    'ꜷ': 'au',\n    'ꜹ': 'av',\n    'ꜻ': 'av',\n    'ꜽ': 'ay',\n    'ḃ': 'b',\n    'ḅ': 'b',\n    'ɓ': 'b',\n    'ḇ': 'b',\n    'ᵬ': 'b',\n    'ᶀ': 'b',\n    'ƀ': 'b',\n    'ƃ': 'b',\n    'ɵ': 'o',\n    'ć': 'c',\n    'č': 'c',\n    'ç': 'c',\n    'ḉ': 'c',\n    'ĉ': 'c',\n    'ɕ': 'c',\n    'ċ': 'c',\n    'ƈ': 'c',\n    'ȼ': 'c',\n    'ď': 'd',\n    'ḑ': 'd',\n    'ḓ': 'd',\n    'ȡ': 'd',\n    'ḋ': 'd',\n    'ḍ': 'd',\n    'ɗ': 'd',\n    'ᶑ': 'd',\n    'ḏ': 'd',\n    'ᵭ': 'd',\n    'ᶁ': 'd',\n    'đ': 'd',\n    'ɖ': 'd',\n    'ƌ': 'd',\n    'ı': 'i',\n    'ȷ': 'j',\n    'ɟ': 'j',\n    'ʄ': 'j',\n    'ǳ': 'dz',\n    'ǆ': 'dz',\n    'é': 'e',\n    'ĕ': 'e',\n    'ě': 'e',\n    'ȩ': 'e',\n    'ḝ': 'e',\n    'ê': 'e',\n    'ế': 'e',\n    'ệ': 'e',\n    'ề': 'e',\n    'ể': 'e',\n    'ễ': 'e',\n    'ḙ': 'e',\n    'ë': 'e',\n    'ė': 'e',\n    'ẹ': 'e',\n    'ȅ': 'e',\n    'è': 'e',\n    'ẻ': 'e',\n    'ȇ': 'e',\n    'ē': 'e',\n    'ḗ': 'e',\n    'ḕ': 'e',\n    'ⱸ': 'e',\n    'ę': 'e',\n    'ᶒ': 'e',\n    'ɇ': 'e',\n    'ẽ': 'e',\n    'ḛ': 'e',\n    'ꝫ': 'et',\n    'ḟ': 'f',\n    'ƒ': 'f',\n    'ᵮ': 'f',\n    'ᶂ': 'f',\n    'ǵ': 'g',\n    'ğ': 'g',\n    'ǧ': 'g',\n    'ģ': 'g',\n    'ĝ': 'g',\n    'ġ': 'g',\n    'ɠ': 'g',\n    'ḡ': 'g',\n    'ᶃ': 'g',\n    'ǥ': 'g',\n    'ḫ': 'h',\n    'ȟ': 'h',\n    'ḩ': 'h',\n    'ĥ': 'h',\n    'ⱨ': 'h',\n    'ḧ': 'h',\n    'ḣ': 'h',\n    'ḥ': 'h',\n    'ɦ': 'h',\n    'ẖ': 'h',\n    'ħ': 'h',\n    'ƕ': 'hv',\n    'í': 'i',\n    'ĭ': 'i',\n    'ǐ': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ḯ': 'i',\n    'ị': 'i',\n    'ȉ': 'i',\n    'ì': 'i',\n    'ỉ': 'i',\n    'ȋ': 'i',\n    'ī': 'i',\n    'į': 'i',\n    'ᶖ': 'i',\n    'ɨ': 'i',\n    'ĩ': 'i',\n    'ḭ': 'i',\n    'ꝺ': 'd',\n    'ꝼ': 'f',\n    'ᵹ': 'g',\n    'ꞃ': 'r',\n    'ꞅ': 's',\n    'ꞇ': 't',\n    'ꝭ': 'is',\n    'ǰ': 'j',\n    'ĵ': 'j',\n    'ʝ': 'j',\n    'ɉ': 'j',\n    'ḱ': 'k',\n    'ǩ': 'k',\n    'ķ': 'k',\n    'ⱪ': 'k',\n    'ꝃ': 'k',\n    'ḳ': 'k',\n    'ƙ': 'k',\n    'ḵ': 'k',\n    'ᶄ': 'k',\n    'ꝁ': 'k',\n    'ꝅ': 'k',\n    'ĺ': 'l',\n    'ƚ': 'l',\n    'ɬ': 'l',\n    'ľ': 'l',\n    'ļ': 'l',\n    'ḽ': 'l',\n    'ȴ': 'l',\n    'ḷ': 'l',\n    'ḹ': 'l',\n    'ⱡ': 'l',\n    'ꝉ': 'l',\n    'ḻ': 'l',\n    'ŀ': 'l',\n    'ɫ': 'l',\n    'ᶅ': 'l',\n    'ɭ': 'l',\n    'ł': 'l',\n    'ǉ': 'lj',\n    'ſ': 's',\n    'ẜ': 's',\n    'ẛ': 's',\n    'ẝ': 's',\n    'ḿ': 'm',\n    'ṁ': 'm',\n    'ṃ': 'm',\n    'ɱ': 'm',\n    'ᵯ': 'm',\n    'ᶆ': 'm',\n    'ń': 'n',\n    'ň': 'n',\n    'ņ': 'n',\n    'ṋ': 'n',\n    'ȵ': 'n',\n    'ṅ': 'n',\n    'ṇ': 'n',\n    'ǹ': 'n',\n    'ɲ': 'n',\n    'ṉ': 'n',\n    'ƞ': 'n',\n    'ᵰ': 'n',\n    'ᶇ': 'n',\n    'ɳ': 'n',\n    'ñ': 'n',\n    'ǌ': 'nj',\n    'ó': 'o',\n    'ŏ': 'o',\n    'ǒ': 'o',\n    'ô': 'o',\n    'ố': 'o',\n    'ộ': 'o',\n    'ồ': 'o',\n    'ổ': 'o',\n    'ỗ': 'o',\n    'ö': 'o',\n    'ȫ': 'o',\n    'ȯ': 'o',\n    'ȱ': 'o',\n    'ọ': 'o',\n    'ő': 'o',\n    'ȍ': 'o',\n    'ò': 'o',\n    'ỏ': 'o',\n    'ơ': 'o',\n    'ớ': 'o',\n    'ợ': 'o',\n    'ờ': 'o',\n    'ở': 'o',\n    'ỡ': 'o',\n    'ȏ': 'o',\n    'ꝋ': 'o',\n    'ꝍ': 'o',\n    'ⱺ': 'o',\n    'ō': 'o',\n    'ṓ': 'o',\n    'ṑ': 'o',\n    'ǫ': 'o',\n    'ǭ': 'o',\n    'ø': 'o',\n    'ǿ': 'o',\n    'õ': 'o',\n    'ṍ': 'o',\n    'ṏ': 'o',\n    'ȭ': 'o',\n    'ƣ': 'oi',\n    'ꝏ': 'oo',\n    'ɛ': 'e',\n    'ᶓ': 'e',\n    'ɔ': 'o',\n    'ᶗ': 'o',\n    'ȣ': 'ou',\n    'ṕ': 'p',\n    'ṗ': 'p',\n    'ꝓ': 'p',\n    'ƥ': 'p',\n    'ᵱ': 'p',\n    'ᶈ': 'p',\n    'ꝕ': 'p',\n    'ᵽ': 'p',\n    'ꝑ': 'p',\n    'ꝙ': 'q',\n    'ʠ': 'q',\n    'ɋ': 'q',\n    'ꝗ': 'q',\n    'ŕ': 'r',\n    'ř': 'r',\n    'ŗ': 'r',\n    'ṙ': 'r',\n    'ṛ': 'r',\n    'ṝ': 'r',\n    'ȑ': 'r',\n    'ɾ': 'r',\n    'ᵳ': 'r',\n    'ȓ': 'r',\n    'ṟ': 'r',\n    'ɼ': 'r',\n    'ᵲ': 'r',\n    'ᶉ': 'r',\n    'ɍ': 'r',\n    'ɽ': 'r',\n    'ↄ': 'c',\n    'ꜿ': 'c',\n    'ɘ': 'e',\n    'ɿ': 'r',\n    'ś': 's',\n    'ṥ': 's',\n    'š': 's',\n    'ṧ': 's',\n    'ş': 's',\n    'ŝ': 's',\n    'ș': 's',\n    'ṡ': 's',\n    'ṣ': 's',\n    'ṩ': 's',\n    'ʂ': 's',\n    'ᵴ': 's',\n    'ᶊ': 's',\n    'ȿ': 's',\n    'ɡ': 'g',\n    'ß': 'ss',\n    'ᴑ': 'o',\n    'ᴓ': 'o',\n    'ᴝ': 'u',\n    'ť': 't',\n    'ţ': 't',\n    'ṱ': 't',\n    'ț': 't',\n    'ȶ': 't',\n    'ẗ': 't',\n    'ⱦ': 't',\n    'ṫ': 't',\n    'ṭ': 't',\n    'ƭ': 't',\n    'ṯ': 't',\n    'ᵵ': 't',\n    'ƫ': 't',\n    'ʈ': 't',\n    'ŧ': 't',\n    'ᵺ': 'th',\n    'ɐ': 'a',\n    'ᴂ': 'ae',\n    'ǝ': 'e',\n    'ᵷ': 'g',\n    'ɥ': 'h',\n    'ʮ': 'h',\n    'ʯ': 'h',\n    'ᴉ': 'i',\n    'ʞ': 'k',\n    'ꞁ': 'l',\n    'ɯ': 'm',\n    'ɰ': 'm',\n    'ᴔ': 'oe',\n    'ɹ': 'r',\n    'ɻ': 'r',\n    'ɺ': 'r',\n    'ⱹ': 'r',\n    'ʇ': 't',\n    'ʌ': 'v',\n    'ʍ': 'w',\n    'ʎ': 'y',\n    'ꜩ': 'tz',\n    'ú': 'u',\n    'ŭ': 'u',\n    'ǔ': 'u',\n    'û': 'u',\n    'ṷ': 'u',\n    'ü': 'u',\n    'ǘ': 'u',\n    'ǚ': 'u',\n    'ǜ': 'u',\n    'ǖ': 'u',\n    'ṳ': 'u',\n    'ụ': 'u',\n    'ű': 'u',\n    'ȕ': 'u',\n    'ù': 'u',\n    'ủ': 'u',\n    'ư': 'u',\n    'ứ': 'u',\n    'ự': 'u',\n    'ừ': 'u',\n    'ử': 'u',\n    'ữ': 'u',\n    'ȗ': 'u',\n    'ū': 'u',\n    'ṻ': 'u',\n    'ų': 'u',\n    'ᶙ': 'u',\n    'ů': 'u',\n    'ũ': 'u',\n    'ṹ': 'u',\n    'ṵ': 'u',\n    'ᵫ': 'ue',\n    'ꝸ': 'um',\n    'ⱴ': 'v',\n    'ꝟ': 'v',\n    'ṿ': 'v',\n    'ʋ': 'v',\n    'ᶌ': 'v',\n    'ⱱ': 'v',\n    'ṽ': 'v',\n    'ꝡ': 'vy',\n    'ẃ': 'w',\n    'ŵ': 'w',\n    'ẅ': 'w',\n    'ẇ': 'w',\n    'ẉ': 'w',\n    'ẁ': 'w',\n    'ⱳ': 'w',\n    'ẘ': 'w',\n    'ẍ': 'x',\n    'ẋ': 'x',\n    'ᶍ': 'x',\n    'ý': 'y',\n    'ŷ': 'y',\n    'ÿ': 'y',\n    'ẏ': 'y',\n    'ỵ': 'y',\n    'ỳ': 'y',\n    'ƴ': 'y',\n    'ỷ': 'y',\n    'ỿ': 'y',\n    'ȳ': 'y',\n    'ẙ': 'y',\n    'ɏ': 'y',\n    'ỹ': 'y',\n    'ź': 'z',\n    'ž': 'z',\n    'ẑ': 'z',\n    'ʑ': 'z',\n    'ⱬ': 'z',\n    'ż': 'z',\n    'ẓ': 'z',\n    'ȥ': 'z',\n    'ẕ': 'z',\n    'ᵶ': 'z',\n    'ᶎ': 'z',\n    'ʐ': 'z',\n    'ƶ': 'z',\n    'ɀ': 'z',\n    'ﬀ': 'ff',\n    'ﬃ': 'ffi',\n    'ﬄ': 'ffl',\n    'ﬁ': 'fi',\n    'ﬂ': 'fl',\n    'ĳ': 'ij',\n    'œ': 'oe',\n    'ﬆ': 'st',\n    'ₐ': 'a',\n    'ₑ': 'e',\n    'ᵢ': 'i',\n    'ⱼ': 'j',\n    'ₒ': 'o',\n    'ᵣ': 'r',\n    'ᵤ': 'u',\n    'ᵥ': 'v',\n    'ₓ': 'x',\n  };\n\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    return isString(text)\n      ? text.replace(/[^A-Za-z0-9]/g, (key: string) => {\n          return this.latinMap[key] || key;\n        })\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'lines' })\nexport class LinesPipe implements PipeTransform {\n  transform(text: any, chars: string = '\\\\s'): Array<string> | any {\n    return isString(text) ? text.replace(/\\r\\n/g, '\\n').split('\\n') : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'underscore' })\nexport class UnderscorePipe implements PipeTransform {\n  transform(input: string, chars?: string): string;\n  transform(input: any, chars?: string): any;\n\n  transform(text: any, chars: string = '\\\\s'): string {\n    return isString(text)\n      ? text\n          .trim()\n          .replace(/\\s+/g, '')\n          .replace(/[A-Z]/g, (c: string, k: any) => {\n            return k ? `_${c.toLowerCase()}` : c.toLowerCase();\n          })\n      : text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'match' })\nexport class MatchPipe implements PipeTransform {\n  transform(text: string, pattern: string, flags?: string): RegExpMatchArray | null;\n  transform<T>(text: T, pattern: string, flags?: string): T;\n\n  transform(text: any, pattern: string, flags?: string): any {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return text.match(new RegExp(pattern, flags));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'test' })\nexport class TestPipe implements PipeTransform {\n  transform(text: string, pattern: string, flags?: string): boolean;\n  transform<T>(text: T, pattern: string, flags?: string): T;\n\n  transform(text: any, pattern: string, flags?: string): any {\n    if (!isString(text)) {\n      return text;\n    }\n\n    return new RegExp(pattern, flags).test(text);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'lpad' })\nexport class LeftPadPipe implements PipeTransform {\n  transform(str: string, length: number, padCharacter: string = ' '): string {\n    if (!isString(str) || str.length >= length) {\n      return str;\n    }\n    while (str.length < length) {\n      str = padCharacter + str;\n    }\n\n    return str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'rpad' })\nexport class RightPadPipe implements PipeTransform {\n  transform(str: string, length: number = 1, padCharacter: string = ' '): string {\n    if (!isString(str) || str.length >= length) {\n      return str;\n    }\n    while (str.length < length) {\n      str = str + padCharacter;\n    }\n\n    return str;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isVowel } from '../helpers/helpers';\n\n@Pipe({\n  name: 'makePluralString',\n})\n\n/**\n * Takes a singular entity string and pluralizes it.\n * Uses both naive and holdout-list approaches.\n * If several words appear in the string, only the last word is pluralized -- this\n * means that if \"your story\" was passed in, \"your stories\" would be passed out.\n *\n * @param {string} singularEntity - Entity to pluralize. Pass as a singular ('story' or 'house').\n *          NOTE: The last word is examined. So you can pass in e.g. 'my story'.\n * @param {number} [quantity=0] quantity - How many of the entity are there? If left blank, this will\n *          pluralize the string (e.g. 'story' -> 'stories', 'house' -> 'houses'). If given a value,\n *          this will pluralize appropriately (e.g. ('story', 1) -> 'story', ('story', 2) -> 'stories').\n */\nexport class MakePluralStringPipe implements PipeTransform {\n  private irregularMap: any = {\n    addendum: 'addenda',\n    alga: 'algae',\n    alumna: 'alumnae',\n    alumnus: 'alumni',\n    analysis: 'analyses',\n    antenna: 'antennae',\n    appendix: 'appendices',\n    aquarium: 'aquaria',\n    arch: 'arches',\n    axe: 'axes',\n    axis: 'axes',\n    bacillus: 'bacilli',\n    bacterium: 'bacteria',\n    basis: 'bases',\n    batch: 'batches',\n    beach: 'beaches',\n    beau: 'beaux',\n    bison: 'bison',\n    brush: 'brushes',\n    buffalo: 'buffaloes',\n    bureau: 'bureaus',\n    bus: 'busses',\n    cactus: 'cacti',\n    calf: 'calves',\n    chateau: 'chateaux',\n    cherry: 'cherries',\n    child: 'children',\n    church: 'churches',\n    circus: 'circuses',\n    cod: 'cod',\n    corps: 'corps',\n    corpus: 'corpora',\n    crisis: 'crises',\n    criterion: 'criteria',\n    curriculum: 'curricula',\n    datum: 'data',\n    deer: 'deer',\n    diagnosis: 'diagnoses',\n    die: 'dice',\n    domino: 'dominoes',\n    dwarf: 'dwarves',\n    echo: 'echoes',\n    elf: 'elves',\n    ellipsis: 'ellipses',\n    embargo: 'embargoes',\n    emphasis: 'emphases',\n    erratum: 'errata',\n    fax: 'faxes',\n    fireman: 'firemen',\n    fish: 'fish',\n    flush: 'flushes',\n    focus: 'foci',\n    foot: 'feet',\n    formula: 'formulas',\n    fungus: 'fungi',\n    genus: 'genera',\n    goose: 'geese',\n    grafito: 'grafiti',\n    half: 'halves',\n    hero: 'heroes',\n    hoax: 'hoaxes',\n    hoof: 'hooves',\n    hypothesis: 'hypotheses',\n    index: 'indices',\n    kiss: 'kisses',\n    knife: 'knives',\n    leaf: 'leaves',\n    life: 'lives',\n    loaf: 'loaves',\n    louse: 'lice',\n    man: 'men',\n    mango: 'mangoes',\n    matrix: 'matrices',\n    means: 'means',\n    medium: 'media',\n    memorandum: 'memoranda',\n    millennium: 'milennia',\n    moose: 'moose',\n    mosquito: 'mosquitoes',\n    motto: 'mottoes',\n    mouse: 'mice',\n    nebula: 'nebulae',\n    neurosis: 'neuroses',\n    nucleus: 'nuclei',\n    oasis: 'oases',\n    octopus: 'octopodes',\n    ovum: 'ova',\n    ox: 'oxen',\n    paralysis: 'paralyses',\n    parenthesis: 'parentheses',\n    person: 'people',\n    phenomenon: 'phenomena',\n    plateau: 'plateaux',\n    potato: 'potatoes',\n    quiz: 'quizzes',\n    radius: 'radii',\n    reflex: 'reflexes',\n    'runner-up': 'runners-up',\n    scampo: 'scampi',\n    scarf: 'scarves',\n    scissors: 'scissors',\n    scratch: 'scratches',\n    self: 'selves',\n    series: 'series',\n    sheaf: 'sheaves',\n    sheep: 'sheep',\n    shelf: 'shelves',\n    'son-in-law': 'sons-in-law',\n    species: 'species',\n    splash: 'splashes',\n    stimulus: 'stimuli',\n    stitch: 'stitches',\n    stratum: 'strata',\n    syllabus: 'syllabi',\n    symposium: 'symposia',\n    synopsis: 'synopses',\n    synthesis: 'syntheses',\n    tableau: 'tableaux',\n    tax: 'taxes',\n    that: 'those',\n    thesis: 'theses',\n    thief: 'thieves',\n    this: 'these',\n    tomato: 'tomatoes',\n    tooth: 'teeth',\n    tornado: 'tornadoes',\n    torpedo: 'torpedoes',\n    vertebra: 'vertebrae',\n    veto: 'vetoes',\n    vita: 'vitae',\n    volcano: 'volcanoes',\n    waltz: 'waltzes',\n    wash: 'washes',\n    watch: 'watches',\n    wharf: 'wharves',\n    wife: 'wives',\n    wolf: 'wolves',\n    woman: 'women',\n    zero: 'zeroes',\n  };\n\n  transform(singularEntity: string, quantity: number = 0): string {\n    if (!singularEntity || singularEntity === '') {\n      return '';\n    }\n\n    if (quantity === 1) {\n      return singularEntity;\n    } else {\n      const lastWord = singularEntity.trim().split(' ')[singularEntity.trim().split(' ').length - 1];\n      if (this.irregularMap[lastWord.toLocaleLowerCase()]) {\n        if (lastWord[0] === lastWord[0].toLocaleUpperCase()) {\n          return singularEntity.replace(\n            lastWord,\n            this.irregularMap[lastWord.toLocaleLowerCase()].replace(\n              this.irregularMap[lastWord.toLocaleLowerCase()][0],\n              this.irregularMap[lastWord.toLocaleLowerCase()][0].toLocaleUpperCase()\n            )\n          );\n        }\n\n        return singularEntity.replace(lastWord, this.irregularMap[lastWord.toLocaleLowerCase()]);\n      } else if (lastWord[lastWord.length - 1] === 'y') {\n        // Naive approach:\n        // consonant+y = word - 'y' +'ies'\n        // vowel+y = word + 's'\n\n        return isVowel(lastWord[lastWord.length - 2])\n          ? singularEntity + 's'\n          : singularEntity.replace(lastWord, lastWord.slice(0, -1) + 'ies');\n      } else if (lastWord[lastWord.length - 1] === 's') {\n        return singularEntity + 'es';\n      } else {\n        return singularEntity + 's';\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'wrap' })\nexport class WrapPipe implements PipeTransform {\n  transform(str: string, prefix: string = '', suffix: string = ''): string {\n    if (!isString(str)) {\n      return str;\n    }\n\n    return (!!prefix && isString(prefix) ? prefix : '') + str + (!!suffix && isString(suffix) ? suffix : '');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AorAnPipe } from './a-or-an';\nimport { UcWordsPipe } from './ucwords';\nimport { LeftTrimPipe } from './ltrim';\nimport { RepeatPipe } from './repeat';\nimport { RightTrimPipe } from './rtrim';\nimport { ScanPipe } from './scan';\nimport { ShortenPipe } from './shorten';\nimport { StripTagsPipe } from './strip-tags';\nimport { TrimPipe } from './trim';\nimport { UcFirstPipe } from './ucfirst';\nimport { SlugifyPipe } from './slugify';\nimport { CamelizePipe } from './camelize';\nimport { LatinisePipe } from './latinise';\nimport { LinesPipe } from './lines';\nimport { UnderscorePipe } from './underscore';\nimport { MatchPipe } from './match';\nimport { TestPipe } from './test';\nimport { LeftPadPipe } from './lpad';\nimport { RightPadPipe } from './rpad';\nimport { MakePluralStringPipe } from './pluralize';\nimport { WrapPipe } from './wrap';\n\nexport const STRING_PIPES = [\n  AorAnPipe,\n  LeftTrimPipe,\n  RepeatPipe,\n  RightTrimPipe,\n  ScanPipe,\n  ShortenPipe,\n  StripTagsPipe,\n  TrimPipe,\n  UcFirstPipe,\n  UcWordsPipe,\n  SlugifyPipe,\n  CamelizePipe,\n  LatinisePipe,\n  LinesPipe,\n  UnderscorePipe,\n  MatchPipe,\n  TestPipe,\n  LeftPadPipe,\n  RightPadPipe,\n  MakePluralStringPipe,\n  WrapPipe,\n];\n\n@NgModule({\n  declarations: STRING_PIPES,\n  imports: [],\n  exports: STRING_PIPES,\n})\nexport class NgStringPipesModule {}\n\nexport { AorAnPipe } from './a-or-an';\nexport { UcWordsPipe } from './ucwords';\nexport { LeftTrimPipe } from './ltrim';\nexport { RepeatPipe } from './repeat';\nexport { RightTrimPipe } from './rtrim';\nexport { ScanPipe } from './scan';\nexport { ShortenPipe } from './shorten';\nexport { StripTagsPipe } from './strip-tags';\nexport { TrimPipe } from './trim';\nexport { UcFirstPipe } from './ucfirst';\nexport { SlugifyPipe } from './slugify';\nexport { CamelizePipe } from './camelize';\nexport { LatinisePipe } from './latinise';\nexport { LinesPipe } from './lines';\nexport { UnderscorePipe } from './underscore';\nexport { MatchPipe } from './match';\nexport { TestPipe } from './test';\nexport { LeftPadPipe } from './lpad';\nexport { RightPadPipe } from './rpad';\nexport { MakePluralStringPipe } from './pluralize';\nexport { WrapPipe } from './wrap';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'max' })\nexport class MaxPipe implements PipeTransform {\n  transform(arr: any): number | number[] {\n    return Array.isArray(arr) ? Math.max(...arr) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'min' })\nexport class MinPipe implements PipeTransform {\n  transform(arr: any): number | number[] {\n    return Array.isArray(arr) ? Math.min(...arr) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'percentage' })\nexport class PercentagePipe implements PipeTransform {\n  transform(num: number, total?: number, floor?: boolean): number;\n  transform<T>(num: T, total?: number, floor?: boolean): T;\n\n  transform(num: any, total: number = 100, floor: boolean = false): any {\n    if (isNaN(num)) {\n      return num;\n    }\n\n    const percent = (num * 100) / total;\n\n    return floor ? Math.floor(percent) : percent;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sum' })\nexport class SumPipe implements PipeTransform {\n  transform(num: any[]): number;\n  transform<T>(num: any): T;\n\n  transform(arr: any): any {\n    return Array.isArray(arr) ? arr.reduce((sum, curr) => sum + curr, 0) : arr;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'floor' })\nexport class FloorPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    if (precision <= 0) {\n      return Math.floor(num);\n    }\n\n    const tho = 10 ** precision;\n\n    return Math.floor(num * tho) / tho;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { applyPrecision } from '../helpers/helpers';\n\n@Pipe({ name: 'round' })\nexport class RoundPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    return applyPrecision(num, precision);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'sqrt' })\nexport class SqrtPipe implements PipeTransform {\n  transform(num: number): number;\n  transform<T>(num: T): T;\n\n  transform(num: any): any {\n    return !isNaN(num) ? Math.sqrt(num) : num;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'pow' })\nexport class PowerPipe implements PipeTransform {\n  transform(num: number, power?: number): number;\n  transform(num: any, power?: number): any;\n\n  transform(num: any, power: number = 2): number {\n    return !isNaN(num) ? num ** power : num;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ceil' })\nexport class CeilPipe implements PipeTransform {\n  transform(num: number, precision: number = 0): number {\n    if (precision <= 0) {\n      return Math.ceil(num);\n    }\n\n    const tho = 10 ** precision;\n\n    return Math.ceil(num * tho) / tho;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumberFinite } from '../helpers/helpers';\n\n@Pipe({ name: 'degrees' })\nexport class DegreesPipe implements PipeTransform {\n  transform(radians: number): number {\n    if (!isNumberFinite(radians)) {\n      return NaN;\n    }\n\n    return (radians * 180) / Math.PI;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'bytes' })\nexport class BytesPipe implements PipeTransform {\n  private dictionary: Array<{ max: number; type: string }> = [\n    { max: 1024, type: 'B' },\n    { max: 1048576, type: 'KB' },\n    { max: 1073741824, type: 'MB' },\n    { max: 1.0995116e12, type: 'GB' },\n  ];\n\n  transform(value: number, precision?: number | undefined): string | number {\n    if (!isNumberFinite(value)) {\n      return NaN;\n    }\n\n    const format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];\n    const calc = value / (format.max / 1024);\n    const num = isUndefined(precision) ? calc : applyPrecision(calc, precision);\n\n    return `${num} ${format.type}`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumberFinite } from '../helpers/helpers';\n\n@Pipe({ name: 'radians' })\nexport class RadiansPipe implements PipeTransform {\n  transform(degrees: number): number {\n    if (!isNumberFinite(degrees)) {\n      return NaN;\n    }\n\n    return (degrees * Math.PI) / 180;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MaxPipe } from './max';\nimport { MinPipe } from './min';\nimport { PercentagePipe } from './percentage';\nimport { SumPipe } from './sum';\nimport { FloorPipe } from './floor';\nimport { RoundPipe } from './round';\nimport { SqrtPipe } from './sqrt';\nimport { PowerPipe } from './pow';\nimport { CeilPipe } from './ceil';\nimport { DegreesPipe } from './degrees';\nimport { BytesPipe } from './bytes';\nimport { RadiansPipe } from './radians';\n\nexport const MATH_PIPES = [\n  MaxPipe,\n  MinPipe,\n  PercentagePipe,\n  SumPipe,\n  FloorPipe,\n  RoundPipe,\n  SqrtPipe,\n  PowerPipe,\n  CeilPipe,\n  DegreesPipe,\n  BytesPipe,\n  RadiansPipe,\n];\n\n@NgModule({\n  declarations: MATH_PIPES,\n  imports: [],\n  exports: MATH_PIPES,\n})\nexport class NgMathPipesModule {}\n\nexport { MaxPipe } from './max';\nexport { MinPipe } from './min';\nexport { PercentagePipe } from './percentage';\nexport { SumPipe } from './sum';\nexport { FloorPipe } from './floor';\nexport { RoundPipe } from './round';\nexport { SqrtPipe } from './sqrt';\nexport { PowerPipe } from './pow';\nexport { CeilPipe } from './ceil';\nexport { DegreesPipe } from './degrees';\nexport { BytesPipe } from './bytes';\nexport { RadiansPipe } from './radians';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'isDefined' })\nexport class IsDefinedPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return !isUndefined(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNull' })\nexport class IsNullPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return input === null;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isUndefined } from '../helpers/helpers';\n\n@Pipe({ name: 'isUndefined' })\nexport class IsUndefinedPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isUndefined(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isString } from '../helpers/helpers';\n\n@Pipe({ name: 'isString' })\nexport class IsStringPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isString(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isFunction } from '../helpers/helpers';\n\n@Pipe({ name: 'isFunction' })\nexport class IsFunctionPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isFunction(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isNumber } from '../helpers/helpers';\n\n@Pipe({ name: 'isNumber' })\nexport class IsNumberPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isNumber(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isArray' })\nexport class IsArrayPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return Array.isArray(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isObject } from '../helpers/helpers';\n\n@Pipe({ name: 'isObject' })\nexport class IsObjectPipe implements PipeTransform {\n  transform(input: any): boolean {\n    return isObject(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isGreaterEqualThan' })\nexport class IsGreaterEqualThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input >= other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isGreaterThan' })\nexport class IsGreaterThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input > other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isLessEqualThan' })\nexport class IsLessEqualThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input <= other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isEqualTo' })\nexport class IsEqualToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    // tslint:disable-next-line:triple-equals\n    return input == other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNotEqualTo' })\nexport class IsNotEqualToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    // tslint:disable-next-line:triple-equals\n    return input != other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isIdenticalTo' })\nexport class IsIdenticalToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    return input === other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isNotIdenticalTo' })\nexport class IsNotIdenticalToPipe implements PipeTransform {\n  transform(input: any, other: any): boolean {\n    return input !== other;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'isLessThan' })\nexport class IsLessThanPipe implements PipeTransform {\n  transform(input: number, other: number): boolean {\n    return input < other;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IsDefinedPipe } from './is-defined';\nimport { IsNullPipe } from './is-null';\nimport { IsUndefinedPipe } from './is-undefined';\nimport { IsStringPipe } from './is-string';\nimport { IsFunctionPipe } from './is-function';\nimport { IsNumberPipe } from './is-number';\nimport { IsArrayPipe } from './is-array';\nimport { IsObjectPipe } from './is-object';\nimport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\nimport { IsGreaterThanPipe } from './is-greater-than';\nimport { IsLessEqualThanPipe } from './is-less-equal-than';\nimport { IsEqualToPipe } from './is-equal-to';\nimport { IsNotEqualToPipe } from './is-not-equal-to';\nimport { IsIdenticalToPipe } from './is-identical-to';\nimport { IsNotIdenticalToPipe } from './is-not-identical-to';\nimport { IsLessThanPipe } from './is-less-than';\n\nexport const BOOLEAN_PIPES = [\n  IsDefinedPipe,\n  IsNullPipe,\n  IsUndefinedPipe,\n  IsStringPipe,\n  IsFunctionPipe,\n  IsNumberPipe,\n  IsArrayPipe,\n  IsObjectPipe,\n  IsGreaterEqualThanPipe,\n  IsGreaterThanPipe,\n  IsLessEqualThanPipe,\n  IsLessEqualThanPipe,\n  IsEqualToPipe,\n  IsNotEqualToPipe,\n  IsIdenticalToPipe,\n  IsNotIdenticalToPipe,\n  IsLessThanPipe,\n];\n\n@NgModule({\n  declarations: BOOLEAN_PIPES,\n  imports: [],\n  exports: BOOLEAN_PIPES,\n})\nexport class NgBooleanPipesModule {}\n\nexport { IsDefinedPipe } from './is-defined';\nexport { IsNullPipe } from './is-null';\nexport { IsUndefinedPipe } from './is-undefined';\nexport { IsStringPipe } from './is-string';\nexport { IsFunctionPipe } from './is-function';\nexport { IsNumberPipe } from './is-number';\nexport { IsArrayPipe } from './is-array';\nexport { IsObjectPipe } from './is-object';\nexport { IsGreaterEqualThanPipe } from './is-greater-equal-than';\nexport { IsGreaterThanPipe } from './is-greater-than';\nexport { IsLessEqualThanPipe } from './is-less-equal-than';\nexport { IsEqualToPipe } from './is-equal-to';\nexport { IsNotEqualToPipe } from './is-not-equal-to';\nexport { IsIdenticalToPipe } from './is-identical-to';\nexport { IsNotIdenticalToPipe } from './is-not-identical-to';\nexport { IsLessThanPipe } from './is-less-than';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'timeAgo' })\nexport class TimeAgoPipe implements PipeTransform {\n  private static YEAR_MS: number = 1000 * 60 * 60 * 24 * 7 * 4 * 12;\n  private static MAPPER: any = [\n    { single: 'last year', many: 'years', div: 1 },\n    { single: 'last month', many: 'months', div: 12 },\n    { single: 'last week', many: 'weeks', div: 4 },\n    { single: 'yesterday', many: 'days', div: 7 },\n    { single: 'an hour ago', many: 'hours', div: 24 },\n    { single: 'just now', many: 'minutes', div: 60 },\n  ];\n\n  /**\n   * @param inputDate: Date | Moment - not included as TypeScript interface,\n   * in order to keep `ngx-pipes` \"pure\" from dependencies!\n   */\n  public transform(inputDate: any): string {\n    if (!inputDate || (!inputDate.getTime && !inputDate.toDate)) {\n      return 'Invalid date';\n    }\n\n    const past = inputDate.toDate ? inputDate.toDate() : inputDate.getTime();\n    const now = +new Date();\n\n    if (past > now) {\n      return 'in the future';\n    }\n\n    for (let i = 0, l = TimeAgoPipe.MAPPER.length, ms = now - past, div = TimeAgoPipe.YEAR_MS; i < l; ++i) {\n      const elm = TimeAgoPipe.MAPPER[i];\n      const unit = Math.floor(ms / (div /= elm.div));\n\n      if (unit >= 1) {\n        return unit === 1 ? elm.single : `${unit} ${elm.many} ago`;\n      }\n    }\n\n    return 'just now';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TimeAgoPipe } from './time-ago';\n\nexport const DATE_PIPES = [TimeAgoPipe];\n\n@NgModule({\n  declarations: DATE_PIPES,\n  imports: [],\n  exports: DATE_PIPES,\n})\nexport class NgDatePipesModule {}\n\nexport { TimeAgoPipe } from './time-ago';\n","import { NgModule } from '@angular/core';\nimport { NgArrayPipesModule } from './pipes/array/index';\nimport { NgObjectPipesModule } from './pipes/object/index';\nimport { NgStringPipesModule } from './pipes/string/index';\nimport { NgMathPipesModule } from './pipes/math/index';\nimport { NgBooleanPipesModule } from './pipes/boolean/index';\nimport { NgDatePipesModule } from './pipes/date/index';\n\n@NgModule({\n  exports: [\n    NgArrayPipesModule,\n    NgStringPipesModule,\n    NgMathPipesModule,\n    NgBooleanPipesModule,\n    NgObjectPipesModule,\n    NgDatePipesModule,\n  ],\n})\nexport class NgPipesModule {}\n\nexport * from './pipes/array/index';\nexport * from './pipes/object/index';\nexport * from './pipes/string/index';\nexport * from './pipes/math/index';\nexport * from './pipes/boolean/index';\nexport * from './pipes/date/index';\n"]}